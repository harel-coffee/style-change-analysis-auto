{"paragraphs": ["Նկարահանման  ընթացքում  յուրաքանչյուր  վայրկյան  անց  վերցվում  է  նոր պատկեր  և  համեմատվում  սկզմնական  պատկերի  հետ:  Ենթադրենք  նկարահանումը սկսելուց  30  վայրկյանն  անց  երկաթուղային  հանգույցում  հայտնվել  է  օբյեկտ  (Նկար Նկար 2.2. Օբյեկտի առկայոթյոընը արգելված տարածքում: ", "արժեքը 𝑃𝑃𝑃𝑃𝑠𝑠 սահմանում է, թե որքանով է -ի ելքը ազդում -ի վրա: Կշիռը կարող է փոխվել 𝑤𝑤𝑖𝑖𝑗𝑗 ժամանակի  ընթացքում:  Ոսուցման  ընթացքում,  հիմնականում,  այս  մեխանիզմն  է, 𝑃𝑃𝑃𝑃𝑗𝑗 𝑃𝑃𝑃𝑃𝑖𝑖 որ հնարավորություն է տալիս -ին ադապտացվել նոր արդյունքներ ստանալու և ուսուցումը  իրականցնելու  համար:  Ինչպես  պարզ  կդառնա  ավելի  ուշ,  ամբողջ 𝑃𝑃𝑃𝑃 կշիռների մատրիցան  արտացոլում  է  նեյրոնային  ցանցի  գիտելիքներն  ու հմտությունները,  որոնք  ուսուցանվել  են  նախորդ  վերապատրաստման  միջոցով  և, 𝑊𝑊 հետևաբար, այն կոչվում են նեյրոնային ցանցի երկարատև հիշողություն: ", "Նկատենք,  որ շեմը  գործում  է  որպես  մուտքային  ազդանշանների  ֆիլտր: ", "Դիտարկենք այն դեպքը, երբ օբյեկտը հայտնվում է պատկերում նկարահանումը սկսելուց  ոչ  թե  սկզբում,  այլ  երկար  ժամանակ  անց(օր.  4  ժամ  անց),  երբ  պատկերում արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների  գունային արժեքները  փոխված  են:  Այս  դեպքում  XOR  բիթային  համենատության  արդյունքում վերադարձվում  է  0  բոլոր  պիքսելների  համար,  և  արդյունքը  կստացվի  լիովին  սև պատկեր,  օբյկետը չի  հայտնաբերվի:  Այսպիսով՝  ցանկացած  եղանակային փոփոխություն դեպքում մեթոդը չհայտնաբերելով օբյեկտը, չի ծառայի իր նպատակին: ", "Այդ  իսկ  պատճառով  մշակվել  է  հետևյալ  մեթոդը,  որը  կաշխատի  անկախ  լույսի  կամ եղանակային փոփոխություններից հիմնված XOR բիթային համենատության վրա: ", "Մշակված  մեթոդի  նկարագրությունը:  Օբյեկտը  մեծ  ճշտությամբ  ճանաչելու նապատակով պատկերը բաժանում ենք 4 մասի, ինչպես պատկերված է Նկար 2.4-ում: ", "Պատկերի չափերը նշանակենք -ով, իսկ մասերի չափերը՝ -ով։ ", "Նկար 2.4․ Սկզբնական պատկերը բաժանված 4 մասի: ", "Պատկերը  բաղկացած  է  պիքսելներից,  որը  կարելի  է  ներկայացնել  որպես թվային  մատրից  [50]:  Սկզբնական  պատկերը  նշ.  լատինատառ  A  տառով:  A-ն սկզբնական  պատկերի    թվային  մատրիցն  է,  որի  յուրաքանչյուր  տարր  իրենից ներկայացնում է 1 պիքսել՝ եռաչափ վեկտոր (բանաձև 2.1): ", "Մասնավորապես, մեր կողմից առաջարկվող տարբերակում  [61] ընտրվել են բազմաշերտ բաղադրիչ(multilayer perceptron) տիպի նեյրոնային ցանցերի տեսակը մեկ մուտքային և մեկ ելքային նեյրոններով: Նեյրոնային ցանցերում օգտագործվել են  Bias  նեյրոնները,  որպես  փոխանցման  ֆունկցիա  ընտրվել  է  սիգմոիդ  տիպը, մինչդեռ  ուսուցողական  կանոնը  մշակվում  է  back-propagation  մեթոդաբանության հիման վրա: ", "Քանի  որ  պատկերը  տրոհել  ենք  4  մասի,  յուրաքանչյուր  հատվածի  համար կունենանք մեկ մատրից՝ համապատասխանաբար )1( )2( )3( )4( , , , : ", "Սկզբնական    պատկերի  յուրաքանչյուր՝  հատվածի  համար  հաշվարկում  ենք  3 առանձին  մեծություն՝  կարմիր,  կանաչ  և  կապույտ  գույների  ինտենսիվության գործակիցները (օր. ):  Յուր.  գործակից  որոշվում  է  տվյալ հատվածում  բոլոր  պիքսելերի  համպատասխան  գույնի(օր.  կարմիրի)  թվային արժեքների  միջին  թվաբանականով  (բանաձև  2.2-2.5):  Այլ  կերպ  ասած  գործակիցը ցույց է տալիս հատվածում գույնի միջին ինտենսիվությունը: ", "կստանանք բանաձև 2-ի միջոցով, 2-րդի համար՝ բանաձև 3-ի, 3-րդի համար՝ բանաձև (2.2) (2.3) (2.4) (2.5) Պատկերի  համար  կախված  տեղանքից  և  հնարավոր  եղանակային փոփոխություններից՝  որոշվում  է  σ  ընդհանուր  շեմային  գործակիցը  տեսախցիկը առաջին անգամ տեղադրելիս: ", "Վիդեոնկարահանման  ընթացքում  մեկ  վայրկյան  պարբերությաբ  վերցվում  է ընթացիկ  պատկերը:  Ընթացիկ  պատկերը  կնշանակենք  E  տառով:  E  պետկերում հնարավոր  է  արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների գունային  արժեքները  փոխված  լինեն,  այդ  իսկ  պատճառով  փորձում  ենք  C-ում գունային  ինտենսիվությունը  հնարավորինս  մոտեցնել  A  պատկերի  գունային ինտենսիվությանը,  որը  հնարավորություն  կտա  կիրառել  E  և  A  պատկերների պիքսելային XOR համեմատությունը և որոշել՝ արդյոք պատկերում հայտնվել է օբյեկտ, թե ոչ (ստրեև նկարագրված է մեթոդը): ", "Վերը  նկարագրված  ալգորիթմը  ախատեցվում  է  E  պատկերի  համար  և հաշվարկվում են , , , գործակիցները (2.6): Այնուհետև հաշվարկում ենք  ընթացիկ  և  սկզբնական  պատկերների  գունային  արժեքների  տարբերությունները յուրաքանչյուր հատվածի համար (2.7): ", ", (2.6) (2.7) -ն եռաչափ վեկտոր է (բանաձ 2.8): ", "Կլաստերային  համակարգի  սիմուլացիան  կատարվել է  երկչափանի քառակուսային  ցանցի  վրա,  որտեղ  ամեն  հանգույց  իրենցից  ներկայացնում  են առանձին  հաշվողական  բլոկ,  այլ  կերպ  ասած  համակարգիչ  իր  առանձին հիշողության  տիրույթով:  Կախված  տվյալ  հանգույցում  առաջադարանքների ծանրաբերնվածության,  տվյալ  հանգույցն  է  որոշում  ուղարկել  առաջադրանքը հարևան  հանգույցներից  մեկին  թե  ոչ:  Դիտարկված  մոդելում  գոյություն  ունեն հետևյալ նախապայմանները. •  Մոդելում ունենք նախորոք մուտքագրված քանակությամբ քառակուսային  ցանցի  տեսք  ունեցող  համասեռ  հանգույցները, այսինքն  հանգույցներում  տեղադրված  հիշողության  տիրույթները, պրոցեսսները,  օպերատիվ  հիշողությունները  և  մնացած  բոլոր տեխնիկական պարամետրները նույն են: ", "•  Ամեն հանգույց ունի «հասանելի»  տիրույթ առաջադրանքների համար, որտեղ կարող են  տեղավորվել վերջավոր քանակությամբ խնդիրներ(տվյալ  դեպքում  ամենաշատը  3  առաջադրանք),  և առաջադրանքի տեղավորվելուն պես այն դիտարկվում է որպես արդեն կատարվող:  Եթե  հանգույցի  «հասանելի»  տիրույթում  կան  3 արաջադրանքներ,  ապա  համարվում  է,  որ  տվյալ  հանգույցը աշխատում է միաժամանակ այդ 3 առաջադրանքների իրականացման շուրջ: ", "-ում  յուրաքանչյուր  պիքսել  արժեքվ  շատ  մոտ  է  համապտասխան  պիքսելին  A պատկերում: ", "պատկերում  օբյեկտի  առկայությունը  կբերի  տվյալ  հատվածի  պիքսելների ավելի մեծ փոփոխությանը A պատկերի նկատմամբ, քան -ի մնացած  պիքսելները, անգամ  այն  դեպքում,  եթե  օբյեկտը  ունի  մեծ  գունային  նմանություն  ֆոնային  E պատկերին  և  անհասանելի  է  անզեն  աչքին: ", "-ում  այդ  փոփոխված  պիքսելների առկայությունը  հայտնաբերելու  նպատակով  հաշվարկվում  է  բանաձև  9-ում  բերված անհավասարությունը: ", "(2.9) Եթե անհավասարությունը բավարարվում պայմանին, այսինքն՝ անհավասարության ձախ մասը մեծ է σ գործակցից, ապա E-ի i,j պիքսելը ունի զգալի շեղում  A-ի  i,j  պիքսելից,  որը  և  նշանակում  է,  որ  այդ  պիքսելը  հանդիսանում  է հայտնված  օբյեկտի  պիքսել:  Այդ i,j  պիքսելին  համապատասխան  պիքսելը  D պատկերում  ստանում  է  0,  0,  0  արժեքը  ( =  (0,  0,  0)),  այսինքն՝  սևացվում  է: ", "Սևացված  պիսելների  համախումբը  ցույց  կտա  օբյեկտի  առկայությունը,  արդյունքը կարտապատկերվի D պատկերում (Նկար 2.8): Այսպիսով եթե պատկերում հայտնվել է օբյեկտ,  ապա  նրան  համապատասխան  պիքսելները  սևացվում  են  ըստ  ալգորիթմի, օբյեկտը  հայտնաբերվում  է:  Նկար  2.5-ոմ  պատկերված  է  օբյեկտի  հայտնաբերման ալգորիթմական բլոկ սխեման: ", "Նկար 2.5․  Օբյեկտի հայտնաբերման ալգորիթմական բլոկ-սխեման: ", "Նկար 2.6․  Երկրորդ պատկերում առկա երեք օբյեկտները, որոնցից միայն երկուսն է աչքին հասանելի (ավտոմեքենաները), իսկ երրորդը թաքնված է (որը փոքր կենդանի է): "], "paragraph_source_docs": [2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2], "source_docs_file": "Informatics and Computer Systems.json"}
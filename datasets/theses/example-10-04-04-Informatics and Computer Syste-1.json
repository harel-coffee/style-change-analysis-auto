{"paragraph_source_docs": [0, 1, 1, 2, 2, 1, 2, 2, 1, 0], "paragraphs": ["Այսպիսով    շարժական  բանալու  հարցման    արդյունքում  ձևավորվում  է  գաղտնի բանալու  ձևաչափը,  որը  բաղկացած  է  M  *  N  բիթ  ծավալ  ունեցող  պատահականության սկզբունքով  ձևավորված  R  մատրիցից,  R  մատրիցի  երկարությամբ  G  մատրիցից,  N  և  M փոփոխականներից, որոնց ծավալը կազմում է 2 բիթ։ Վերոհիշյալ ձևաչափը ներկայացված է աղյուսակ 5-ում։ ", "արժեքը 𝑃𝑃𝑃𝑃𝑠𝑠 սահմանում է, թե որքանով է -ի ելքը ազդում -ի վրա: Կշիռը կարող է փոխվել 𝑤𝑤𝑖𝑖𝑗𝑗 ժամանակի  ընթացքում:  Ոսուցման  ընթացքում,  հիմնականում,  այս  մեխանիզմն  է, 𝑃𝑃𝑃𝑃𝑗𝑗 𝑃𝑃𝑃𝑃𝑖𝑖 որ հնարավորություն է տալիս -ին ադապտացվել նոր արդյունքներ ստանալու և ուսուցումը  իրականցնելու  համար:  Ինչպես  պարզ  կդառնա  ավելի  ուշ,  ամբողջ 𝑃𝑃𝑃𝑃 կշիռների մատրիցան  արտացոլում  է  նեյրոնային  ցանցի  գիտելիքներն  ու հմտությունները,  որոնք  ուսուցանվել  են  նախորդ  վերապատրաստման  միջոցով  և, 𝑊𝑊 հետևաբար, այն կոչվում են նեյրոնային ցանցի երկարատև հիշողություն: ", "Նկատենք,  որ շեմը  գործում  է  որպես  մուտքային  ազդանշանների  ֆիլտր: ", "Դիտարկենք այն դեպքը, երբ օբյեկտը հայտնվում է պատկերում նկարահանումը սկսելուց  ոչ  թե  սկզբում,  այլ  երկար  ժամանակ  անց(օր.  4  ժամ  անց),  երբ  պատկերում արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների  գունային արժեքները  փոխված  են:  Այս  դեպքում  XOR  բիթային  համենատության  արդյունքում վերադարձվում  է  0  բոլոր  պիքսելների  համար,  և  արդյունքը  կստացվի  լիովին  սև պատկեր,  օբյկետը չի  հայտնաբերվի:  Այսպիսով՝  ցանկացած  եղանակային փոփոխություն դեպքում մեթոդը չհայտնաբերելով օբյեկտը, չի ծառայի իր նպատակին: ", "Այդ  իսկ  պատճառով  մշակվել  է  հետևյալ  մեթոդը,  որը  կաշխատի  անկախ  լույսի  կամ եղանակային փոփոխություններից հիմնված XOR բիթային համենատության վրա: ", "𝑃𝑃𝑃𝑃 𝑎𝑎𝑖𝑖 Նեյրոնային  ցանցեր  կառուցելու  համար  օգտագործվել  են  մի  շարք  ակտիվացման ֆունկցիաներ,  որոնցից  քայլ/step  ֆունկցիան  ամենապարզն է:  Քայլ/step ակտիվացիոն  ֆունկցիայի  միջոցով -ի  ելքային  տվյալները  կարող  են  ընդունել կամ կամ ,  կախված  ակտիվացիոն  ֆունկցիայի  արժեքից  ցածր  կամ  բարձր 𝑃𝑃𝑃𝑃 լինելուց (Նկար 32): Այլ կերպ ասած, ունենք հետևյալը. 𝑦𝑦𝑖𝑖 = � որտեղ եթե հակառակ դեպքում 𝑎𝑎𝑖𝑖 > 0 𝑢𝑢 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Այնուամենայնիվ, աղմուկը  զտելու համար, հետևաբար բարելավվելու և իրական 𝑗𝑗=1 կայուն  վիճակի  հասնելու  նկատառումներով  որոշ  նեյրոնային  ցանցերի  համար սովորաբար օգտագործվում է սիգմոիդ ակտիվացումը, արտահայտված Նկար 33-ի ձևով. որտեղ 𝑦𝑦𝑖𝑖 = 𝑓𝑓𝑖𝑖(𝑎𝑎𝑖𝑖) = −𝑐𝑐𝑎𝑎𝑖𝑖 𝑢𝑢 𝑗𝑗=1 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Նկար 32.Քայլ/Step ակտիվացիոն ֆունկցիա: ", "Պատկերի չափերը նշանակենք -ով, իսկ մասերի չափերը՝ -ով։ ", "Նկար 2.4․ Սկզբնական պատկերը բաժանված 4 մասի: ", "«Մինիմում ավազահատիկներ և  մաքսիմալ հեռավորություն» խնդիր գրավիչ է  այնքանով,  որ  հանդիսանում  են  իրական  կյանքում  որոշ  բնական  երևույթների նկարագիր  ավազակույտի  մոդելի  վրա:  Մինչև  այժմ  չունենալով  ճշգրիտ  լուծում տվյալ  խնդրի  համար,  նեյրոնային  ցանցերի  օգտագործումը  արդիական  նպատակ դարձավ:  Նեյրոնային  ցանցերի  մշակման  հարմարավեր  միջոց  է  Neuroph  Studio-ն [51],  որը  հանդիսանում  է  նեյրոնային  ցանցերի  ֆրեյմվորկ  ստեղծված Java ծրագրավորման  լեզվի  միջոցով  և  նպատակաուղված  է  ընհանուր  նեյրոնային ցանցերի նախագծման և մշակման համար: Neuroph Studio-ն  պարունակում է նաև լավ  նախագծված  բաց  կոդով  Java  գրադարան  քիչ  քանակությամբ  նեյրոնային ցանցերի հիմնական  աշխատանքը սիմուլացնող հիմնական դասերի ամբողջությամբ:  Այն  ունի  նաև  շատ  հարմարատավետ  գրաֆիկական  միջավայր, որը հնարավորություն է տալիս առանց որևէ ծրագրավորման լեզվի տիրապետելու և  օգտագործելու  մշակել  նեյրոնային  ցանցեր:  Մեր  կողմից  նույնպես  ընտրվել  է Neuroph  Studio-ն  «մինիմում  ավազահատիկներ  և    մաքսիմալ  հեռավորություն» խնդրի ուսումնասիրության շրջանակներում նեյրոնյանին ցանցերի ճարտարապետության  մշակման,  տեստավորման  և  արդյունքների  ստացման համար: ", "Ցանկացած վավեր հարցումից հետո K փոփոխականի արժեքը մեծացվում է մեկով, եթե K < N, այլապես K ստանում է 0 արժեք, և R մատրիցի R[n, m-1]  մասնիկը տեղափոխվում է առաջին ինդեքս և վերադասավորում այն, որի շնորհիվ G մատրիցում նշված ինդեքսների արժեքներից ձևավորված KK բազմությունը դառնում է ամբողջովին տարբեր համեմատած մինչև R-մատրիցում կատարված ձևափոխություների հետ։ Երբ տեղափոխումների քանակը հասնում է N * M – 1, ավարտվում է առաջին փուլը և  մինչ 2-րդ փուլին ացնելը կատարվում R  մատրիցի  «transpose»  փոխարկում:  Նախ  տվյալ  փոխարկման  համար  օգտագործելով միաչափ  ինդեքսը,  հաշվարկվում  է  ամեն  մասնիկի  երկչափ  ինդեքսը    հետևյալ  ձևով այնուհետև  կատարվում  է  նոր  ինդեքսի [𝑖𝑖  =  𝑀𝑀𝑀𝑀𝑀𝑀ℎ. 𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓(𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛/𝑁𝑁),   𝑗𝑗  =  𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛 % 𝑁𝑁] հաշվարկում և այդ 2 ինդեքսներին համապատասխան արժեքների փոխարկում։  Տվյալ  գործողությունը  կատարվում  է  ամեն  մատրիցի  մասնիկի  համար։ "], "source_docs_file": "Informatics and Computer Systems.json"}
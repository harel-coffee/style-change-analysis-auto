{"paragraphs": ["ՈՒղու  վրա  հիմնված  մեթոդների  առավելությւնն  է  գլոբալ  օպտիմումին  հասնելու պոտենցիալ հնարավորությունը, իսկ  թերությունն է մեծ ալգորիթմական բարդությունը: ", "Հակառակ  դրան՝  շղթայի  վրա  հիմնված  մեթոդների  առավելությւնն  է  փոքր ալգորիթմական  բարդությունը՝  (nlog(n)),  իսկ թերությունը՝  լոկալ  օպտիմումի առկայությունը: ", "Վերոհիշյալ երկու մոտեցումներն ունեն մեկ ընդհանուր թերություն, այն է, որ դրանք հաշվի  չեն  առնում  թվային  սխեմաների  տրամաբանությունը  սխեմայի  տարրերի աշխատանքի  տրամաբանական  հաջորդականությունը  տեղաբաշխելիս:  Հետևաբար, երկու  դեպքում  էլ  թույլ  է  արտահայտված  տեղաբաշխման  արդյունքի  և  սխեմայի աշխատանքի տրամաբանական կապը: ", "- 45 - Նշված  թերության  հաղթահարման  նպատակով  այս  ատենախոսությունում առաջարկված  և  մշակված  է  տրամաբանական  բլոկների  ֆիզիկական  կառուցվածքի սինթեզի նոր մոտեցում, որը հիմնված է տրամաբանական սխեմայի ռանգավորման վրա և  միտված  է  միջմիացումների  երկարության  և,  հետևաբար,  դրանցում  հապաղումների նվազեցմանը: ", "ԻՍ  ֆիզիկական  նախագծման  ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական առանձնահատկությունների  հաշվառման  առաջարկվող  մոտեցումը  ենթադրում  է հետևյալ խնդիրների հաջորդական լուծում.   նախագծվող  սխեմայի  տրամաբանական  մակարդակի  փականային  Verilog նկարագրության փոխակերպում ազդանշանների հոսքի գրաֆի (ԱՀԳ-ի),   սխեմայի տարրերի ռանգավորում,   տարրերի  տեղաբաշխումը՝  համաձայն  դրանց  ռանգավորման,  այսինքն՝ «փափուկ» բլոկի ստացում,   ստացված  «փափուկ»  բլոկի  տարրերի  վերատեղաբաշխում՝  հաշվի  առնելով կոնստրուկտիվ սահմանափակումները, այսինքն՝ «կոշտ» բլոկի ստացում։ ", "Այսպիսով,  կարևորվում  է  ԻՍ-երում  տարրերի  ժամանակային  ուղղորդմամբ տեղաբաշխումը՝ որպես սխեմատեխնիկական առանձնահատկությունների հաշվառմամբ  ֆիզիկական  կառուցվածքի  ստացման  միջոց։  Ներկայումս  գոյություն ունեցող  ժամանակային  ուղղորդմամբ  տեղաբաշխման  մեթոդները[3,20,40]  ունեն որոշակի թերություններ: Առաջարկվում է նոր մոտեցում՝ ԻՍ ֆիզիկական նախագծման ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական  առանձնահատկությունների հաշվառման համար։ ", "Ոչ  սմարթ  բջջային  հեռախոսները  կիրառվում  են  մեծ  քանակությամբ օգտատերերի կողմից։ Դրանց միջոցով ծանուցումներ իրականացնելու միակ միջոցը SMS  տեղեկատուներն  են։  Թիրախավորելով  այդ  օգտատերերի  ստվար  հատվածը, նպատակ  է  հետապնդվում  լուծել  էլեկտրոնային  նամակների  մասին  ծանուցման խնդիրները։ Իհարկե, գոյություն ունեն տարատեսակ համակարգեր, որոնք լուծում են նմանատիպ խնդիրներ, սակայն դրանք իրականացվում են հիմնականում ամպային ծառայությունների տեսքով։ Դրանք կենտրոնացված են տարբեր երկրներում գտնվող սերվերներում։  Պետական  ենթակառուցվածքների  կարևոր  օղակներում  տվյալներն այլ  երկրների  տարածքում  գտնվող  սերվերներ  ուղարկելը  ռիսկային  է։  Այդպիսի կառույցները  հիմնականում  ծառայություններ  մատուցող  սերվերը  նախընտրում  են տեղադրել ներքին ցանցերում, որը մեկուսացված է համացանցից։ Գոյություն ունեցող համակարգերը  կիրառելի  չեն  այս  տեսանկյունից։  Ուստի  կարիք  է  առաջանում ստեղծել  այնպիսի  համակարգ,  որը  տեղադրվի  կորպորատիվ  ցանցերում  և հնարավորություն  ունենա  օգտատերերին  ուղարկել  էլեկտրոնային  նամակների մասին SMS ծանուցումներ։ Նման համակարգի ստեղծումը նշված մասնագիտացված ոլորտների համար արդիական է։ ", "- 46 - ա) բ) գ) Նկ․  2.1․   ԱՀԳ-ի  պարզագույն օրինակ ԱՀԳ-ում  հանգույցները  ներկայացնում  են  տվյալների  գործողություններ,  օրինակ՝ հաշվողական գործողություններ [42,43]։ Որոշ կողեր վերջանում են ինչ-որ հանգույցում, բայց  կարող  են  չսկսվել  որևէ  հանգույցից  և  հակառակը։  Հետևաբար,  դրանց  կարելի  է Նկ․  2.2․   ԱՀԳ-ում  կողերի  դասակարգումը՝  ա) մուտքային, բ)  միջանկյալ, գ) ելքային դասակարգել 3 տեսակի՝  մուտքային, միջանկյալ և ելքային (նկ․ 2․ 2)։ ", "ունենում [68]: ", "- 65 - Կառուցվածքային մոդելի ստուգումը իրականացնող SIV հոսքը, նույնպես,  բաղկացած է երկու  անկախ՝  ա)  հիշողության  գոտիների  բաշխումը  ստուգող  (անգլերեն  Straps MIG scramble.tcl Fail Fail SDV END SIV ASV END Pass SDV ASV Pass Նկար 2.5. SIV ԱՀ-ում Հիշողության Կառուցվածքային մոդելի ստուգման բլոկ-սխեման Distribution  Verification  (SDV))  և  բ)  հիշողության  կառուցվածքային  խճողումները ստուգող (անգլերեն Address Scramble Verification (ASV)) մասերից (Տես՝ նկ. 2.5): ", "Ղեկավարման  հոսքային  մոդելը  ծրագրավորման  մոդել  է,  որտեղ  հրամանները, պրոցեդուրաներն  ու  ֆունկցիաները  կատարվում  են  միայն  այն  ժամանակ,  երբ  բոլոր մուտքային  տվյալները  (փոփոխականներ,  արգումենտներ)  պատրաստ  են։  Ծրագրեր գրելու (մոդելների ստեղծման) համար օգտագործվում են գրաֆիկական լեզուներ, որոնց միջոցով իրականացվում է տվյալների գործընթացների՝ ֆունկցիոնալ սխեմաների, բլոկ - 48 - սխեմաների,  տեսքի  վերափոխման  նկարագրությունը։  Դիտարկենք  տրամաբանական մակարդակի  նկարագրության  վերափոխման  օրինակ,  հիմնված  ISCAS85  գրադարանի c17 verilog նկարագրության վրա [46]։ Ունենք` nand NAND2_1 (N10, N1, N3); nand NAND2_2 (N11, N3, N6); nand NAND2_3 (N16, N2, N11); nand NAND2_4 (N19, N11, N7); nand NAND2_5 (N22, N10, N16); nand NAND2_6 (N23, N16, N19։ ", "G1 G3 G3 G4 Ազդանշանների հոսքի գրաֆը պատկերված է նկ.2.4-ում։ ", "NAND2_0 G8 NAND2_4 G16 NAND2_1 G9 NAND2_5 G17 G2 G5 NAND2_2 G12 NAND2_3 G15 Նկ․ 2.4․  ISCAS85 գրադարանի c17 verilog տրամաբանական նկարագրության ազդանշանների հոսքի գրաֆը Վերլուծելով նկ․ 2․ 4-ը, կարելի է նկատել, որ ցանկացած տեղեկատվական հոսքում (G1,G8,G16…)  տվյալները  տարածվում  են  ազդանշանային  աղբյուրներից  դեպի ընդունիչները  (NAND2_0,  NAND2_4…)։  Ակնհայտ  է,  որ  մեկ  հոսքում  կարող  են  լինել ճյուղավորումներ, զուգահեռ ալիքներ և հակադարծ կապեր։  Զուգահեռ հոսքերը կարող են  լինել  մեկը  մյուսից՝  կախված  և  անկախ։  Ազդանշանների  հոսքի  գրաֆը  այսպիսի տեսքով  ներկայացնելու  համար  օգտագործվում  են  մի  քանի  տեսակ  բլոկներ։  Դրանցից են՝ ազդանշանների  աղբյուրները, ազդանշանների ընդուիչները և միջանկյալ բլոկները, որոնք  հանդիսանում  են  առաջին  երկուսի  համախումբը։  Այդ  բլոկներն  իրենց  հերթին լինում  են  մաթեմատիկական  գրրծողություններ՝  հաշվողական,  տրամաբանական, մատրիցային,  ոչ  գծային  և  այլն։  Verilog  նկարագիր  սինթեզելու  համար  պետք  է  օգտվել - 49 - SAED90  [47]  կամ  այլ  գրադարանից,  որտեղ  նշված  են  ԻՍ-երի  տրամաբանական նկարագրության բոլոր տեսակի բլոկները՝ NAND, AND, NOT, OR, NOR և այլն։ ", "Գոյություն  ունեն  տարբեր  մեթոդներ՝  սինթեզելու  համար  սխեմայի  Verilog նկարագիրը։  Դրանցից  ամենաարդի  եղանակներից  են  մատրիցային  և  գրաֆային նկարագրությունները։  Մատրիցային  եղանակը,  ի  տարբերություն  գրաֆայինի, օգտագործում  է  շատ  մեծ  հիշողություն,  բայց  նաև  թույլ  է  տալիս  հաստատուն ժամանակում  կարդալ  ցանկալի  տարրում  գրված  ինֆորմացիան։  Գրաֆայինը,  իր հերթին,  կարող  է  ներկայացվել  հոսքային  տեսքով՝  տվյալների  հոսքի,  ազդանշանների հոսքի,  գրաֆներով։  Փականային  մակարդակի  Verilog  նկարագրի  փոխակերպման համար կիրառվել  է այս երկու մոտեցումների համախումբը, որով  հնարավոր  է դարձել խուսափել  անցանկալի  մեծ  հիշողության  օգտագործումից  և  ստանալ  ցանկալի  մեծ արագագործություն (ալգորիթմական լուծումը ներկայացված է 3-րդ գլխում)։ ", "ծանուցումների  և  խմբային  հաղորդագրությունների    հաղորդման  բազմաֆունկցիոնալ ինֆո-կոմունիկացիոն համակարգ։ ", "առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց Տրամաբանական  մոդելավորման  ժամանակ  օգտագործվում  են  ֆունկցիոնալ մոդելների  բաղադրիչներ՝  տարրեր։  Ֆունկցիոնալ  մոդելը  հանդես  է  գալիս  «սև  արկղի» տեսքով,  որի  համար  մուտքային  և  ելքային  ազդանշանների  միջև  կապը  տրվում  է բուլյան հավասարումներով կամ ճշտության աղյուսակներով [48]։ Այդպիսի մոդելներում ներքին կառուցվածքը չի հաշվի առնվում։ Կոմբինացիոն տրամաբանական տարրական մոդելներից  են՝  AND,  OR,  NOT,  NAND  և  այլն,  որոնք  համապատասխանում  են  բուլյան ֆունկցիաներին։  Ժամանակային  հապաղումները հաշվի  առնող  մոդելներում ստեղծվում  են  ազդանշանների  հապաղումների  մեծություններ՝  տարրերի  մեկից  մյուսն անցում կատարելիս։ ", "- 68 - VIG MC check.rtb ASV configuration file ASV configuration file ASV configuration file MC scramble.tcl VPG GDS of ASV instance GDS of ASV instance GDSII of ASV instance MIG Pattern  file(IPP) Pattern  file (IPP) Pattern file (IPP) MPT SVP&SIM   files SVP&SIM   files SVP&SIM   files Programmed GDS Programmed GDS Programmed GDSII LVS rule deck LVS Fail Pass ASV END VOG Log Analysis SPICE simulation SPICE file SPICE file SPICE file SPICE model Նկար 2.9.   Հիշողության կառուցվածքային խճողումների ստուգման ASV ԱՀ-ի բլոկ-սխեման Նկար 2.9-ում ներկայացված է ASV-ի ստուգման   բլոկ-սխեման:  Ի սկզբանե նշենք, որ  հիշողության  հասցեների  խճողումների  ստուգման  գործընթացը  (ASV  ստուգումը) ավելի  ժամանակատար  է,  քան  հիշողության  գոտիների  բաշխման  ստուգումը  (SDV), քանի  որ    այն  իր  մեջ  ընդգրկում    է  երկու  հաջորդաբար  կատարվող  և    բավականին ժամանակատար  գործողություններ՝  ա)  նմուշի  GDSII  ձևաչափից  նմուշի  SPICE - 69 - ձևաչափի  սխեմատիկայի  ֆայլի  դուրս  բերումը  (ինչպես  նշել  ենք,    դա  կոչվում  է    LVS գործողություն),  և  բ)  LVS-ի  աշխատանքի  արդյունքում  ստացված  նմուշի    SPICE  ֆայլի մոդելավորումը:  ASV-ի  դեպքուն  VGP  գործիքը յուրաքանչյուր  նմուշի  համար գեներացնում է՝ (IPP)) (Տես՝ նկ. 2.10), ա)  ծրագրավորման  օրինակների  ֆայլերը  (անգլերեն՝  Instance  Programming  Pattern բ)  SPICE  մոդելավորման  համար  անհրաժեշտ՝  վեկտորային  օրինակների  մուտքային ֆայլերը (անգլերեն՝ SPICE vector pattern (SVP)),  և գ) SPICE մոդելավորող ծրագիրը աշխատեցնող՝ պարամետրերի ֆայլերը: ", "Մոդելավորման  եղանակն ընտրվում է՝ հաշվի առնելով խնդրի դրվածքը։ Եղանակների հիմնական  առանձնահատուկություններից  են՝  սխեմայում  ազդանշանի  ժամանակի տարածումը հաշվի  առնելու և համակարգչով մոդելն իրականացնելու հնարավորությունները  [48]։  Ազդանշանի  ժամանակային  հոսքի  եղանակից  կախված մեթոդները լինում  են  սինխրոն (առանց  սխեմայի  տարրերում  ժամանակային հապաղումները  հաշվի  առնելու)  և  ասինխրոն  (հապաղումների  հաշվառմամբ)  [49]։ ", "Նկ.2.5-ում բերված սխեմայի տարրերի մաթեմատիկական մոդելը կլինի՝ :                                                (2.2) Այդ  դեպքում  տրված  սխեման (նկ․ 2․ 5)  ունի  հետևյալ  տրամաբանական հավասարումների համախումբը՝ (2.3)-ում ներկայացված արտահայտությունները ԻՍ-ի փականային մակարդակի verilog (2.3) նկարագրության համար կլինեն՝ nand NAND1(e,a,b);  nand NAND2(f,e,c); nand NAND3(g,d,h);  nand NAND4(h,f,g)։ ", "NAND1 and NAND2 and NAND4 and NAND3 and Նկ․  2.5․     Տրամաբանական  սխեմայի օրինակ - 51 - Ավելի  ընդհանուր  մաթեմատիկական  մոդելը  կարելի  է  ներկայացնել  հետևյալ կերպ` , (2.4) որտեղ -ն  մուտքային  փոփոխականների  վեկտորն  է, -ն՝  ելքային  և  միջանկյալ փոփոխականների վեկտորը ժամանակի t պահին, -ն՝ սխեմայի մուտքային և ելքային փոփոխականների  վեկտորը  ժամանակի՝ պահին, -ը՝  դիսկրետ փոփոխականների  փոխակերպման  օպերատորը  [48]:  Փոփոխականները՝ և վոկտորներում  դիսկրետ  մեծություններ  են։  Տրամաբանական  մոդելավորման  մեջ կիրառվում  են  մոդելներ՝  փոփխականների  հնարավոր  տարբեր  քանակի  արժեքներով։ ", "Երկուական համակարգի մոդելներում և -ն բուլյան փոփոխականներ են։ ", "Տրամաբանական  սինխրոն  մոդելավորում:  Սինխրոն  մոդելավորման  դեպքում, տարրերի  մոդելները  ներկայացվում  են  առանց  ազդանշանների  հապաղումների հաշվառման։  Դա կիրառվում է՝ գնահատելու համար  տրամաբանական ֆունկցիոնալության  ճշտությունը։  Սխեմայի  աշխատանքի  մոդելավորումը  սխեմայի տրամաբանական  տարրերում  հանգեցվում  է՝  ՝  տրված  մուտքային  ազդանշաններով հաշվարկելու ելքային ազդանշանների արժեքները հաշվարկելուն: ", "Նկ. 2․ 6 -ում բերված է տրամաբանական մոդելավորման մեթոդների դասակարգումը ԻՍ-ի  վերլուծության  համար  բերված  մեթոդներից,  ամենահարմար  տարբերակը սինխրոնային մոդելավորման կիրառումն է[48,50]։ ", "Տրամաբանական մոդելավորման մեթոդների դասակարգումը Հապաղումների հաշվառմամբ Ըստ սզդանշանների կոդավորման տեսքի Ըստ ծրագրի իրականացման եղանակի Ըստ հերթականության Սինխրոն Երկուական Կոմպիլյացիոն Միջանցիկ Ասինխրոն Բազմարժեքային Ինտերպրետացիոն Պատահարային Նկ․ 2․6․  Տրամաբանական մոդելավորման մեթոդների դասակարգումը - 52 - Կախված  ազդանշանների  տարածման  հապաղման  հաշվառման  մեթոդից՝ տրամաբանական  մոդելավորման  մեթոդները  լինում  են  սինխրոն,  երբ  հաշվի  չեն առնվում տրամաբանական տարրերի հապաղումները, և ասինխրոն, երբ դրանք հաշվի չեն առնվում: ", "Այս դեպքում մեդելավորման արդյունքը ճիշտ համընկնում է իրական սխեմայի հետ։ "], "paragraph_source_docs": [2, 2, 2, 2, 2, 2, 0, 2, 3, 1, 2, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
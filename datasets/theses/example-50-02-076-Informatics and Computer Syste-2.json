{"paragraph_source_docs": [2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 0, 2, 2, 0, 0, 1, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2], "paragraphs": ["Նկարահանման  ընթացքում  յուրաքանչյուր  վայրկյան  անց  վերցվում  է  նոր պատկեր  և  համեմատվում  սկզմնական  պատկերի  հետ:  Ենթադրենք  նկարահանումը սկսելուց  30  վայրկյանն  անց  երկաթուղային  հանգույցում  հայտնվել  է  օբյեկտ  (Նկար Նկար 2.2. Օբյեկտի առկայոթյոընը արգելված տարածքում: ", "Քանի  որ  այգորիթմը  աշխատում  է  ուղիղ  ռեժիմով  նկարահանմանը  զուգահեռ, այն  կստանա  նոր  պատկերը,  որում  առկա  է  օբյեկտը  և  կկիրառի  XOR  բիթային համենատություն  սկզբնական  պատկերի  նկատմամբ:  Հետևաբար,  կստանանք  Նկար Նկար 2.3․ XOR բիթային համենատության արդյունքը: ", "Ինչպես  գիտենք,  բիթային  XOR-ը  կատարում  է  համեմատությունը  երկու պիքսելների(բիթերի) միջև՝ արդյունքում վերադարձնելով 1, եթե երկու բիթերը տարբեր են,  և  0,  եթե  դրանք  նույնն  են:  Նկար  2.3-ում  XOR  բիթային  համենատության արդյունքում վերադարձված 1-ը արտահայտված է սպիտակ գույնով, իսկ 0-ն՝ սև: ", "Դիտարկենք այն դեպքը, երբ օբյեկտը հայտնվում է պատկերում նկարահանումը սկսելուց  ոչ  թե  սկզբում,  այլ  երկար  ժամանակ  անց(օր.  4  ժամ  անց),  երբ  պատկերում արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների  գունային արժեքները  փոխված  են:  Այս  դեպքում  XOR  բիթային  համենատության  արդյունքում վերադարձվում  է  0  բոլոր  պիքսելների  համար,  և  արդյունքը  կստացվի  լիովին  սև պատկեր,  օբյկետը չի  հայտնաբերվի:  Այսպիսով՝  ցանկացած  եղանակային փոփոխություն դեպքում մեթոդը չհայտնաբերելով օբյեկտը, չի ծառայի իր նպատակին: ", "Այդ  իսկ  պատճառով  մշակվել  է  հետևյալ  մեթոդը,  որը  կաշխատի  անկախ  լույսի  կամ եղանակային փոփոխություններից հիմնված XOR բիթային համենատության վրա: ", "𝑃𝑃𝑃𝑃 𝑎𝑎𝑖𝑖 Նեյրոնային  ցանցեր  կառուցելու  համար  օգտագործվել  են  մի  շարք  ակտիվացման ֆունկցիաներ,  որոնցից  քայլ/step  ֆունկցիան  ամենապարզն է:  Քայլ/step ակտիվացիոն  ֆունկցիայի  միջոցով -ի  ելքային  տվյալները  կարող  են  ընդունել կամ կամ ,  կախված  ակտիվացիոն  ֆունկցիայի  արժեքից  ցածր  կամ  բարձր 𝑃𝑃𝑃𝑃 լինելուց (Նկար 32): Այլ կերպ ասած, ունենք հետևյալը. 𝑦𝑦𝑖𝑖 = � որտեղ եթե հակառակ դեպքում 𝑎𝑎𝑖𝑖 > 0 𝑢𝑢 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Այնուամենայնիվ, աղմուկը  զտելու համար, հետևաբար բարելավվելու և իրական 𝑗𝑗=1 կայուն  վիճակի  հասնելու  նկատառումներով  որոշ  նեյրոնային  ցանցերի  համար սովորաբար օգտագործվում է սիգմոիդ ակտիվացումը, արտահայտված Նկար 33-ի ձևով. որտեղ 𝑦𝑦𝑖𝑖 = 𝑓𝑓𝑖𝑖(𝑎𝑎𝑖𝑖) = −𝑐𝑐𝑎𝑎𝑖𝑖 𝑢𝑢 𝑗𝑗=1 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Նկար 32.Քայլ/Step ակտիվացիոն ֆունկցիա: ", "Պատկերի չափերը նշանակենք -ով, իսկ մասերի չափերը՝ -ով։ ", "Այստեղ -ն  հաստատուն  է,  որը  սահմանում  է -ի  աշխատանքում ներկայացված  շեմի  մակարդակը:  Այս  տեսակի  գործառույթի  առաջարկած  որոշ 𝑐𝑐 𝑃𝑃𝑃𝑃𝑖𝑖 առավելություններ  հետագայում  ավելի  պարզ  կդառնա  ( հայտնի  է  նաև  որպես «ջերմաստիճան»):  Որոշ  դեպքերում  դրա  արժեքը  կարող  է  սահմանվել արհեստականորեն  բարձր  մակարդակի  վրա,  որը  կստիպի  նեյրոնային  ցանցին ավելի  լավ  կատարել  աշխատանքը,  այսինքն  կբարձրանա  հավանականությունը ավելի կայուն վիճակին հասնելու: ", "Պատկերը  բաղկացած  է  պիքսելներից,  որը  կարելի  է  ներկայացնել  որպես թվային  մատրից  [50]:  Սկզբնական  պատկերը  նշ.  լատինատառ  A  տառով:  A-ն սկզբնական  պատկերի    թվային  մատրիցն  է,  որի  յուրաքանչյուր  տարր  իրենից ներկայացնում է 1 պիքսել՝ եռաչափ վեկտոր (բանաձև 2.1): ", "(2.1) որտեղ , . և  r,g,b-ին  համապատասխանաբար  կարմիր,  կանաչ, կապույտ գույների ինտենսիվությունն է: ", "Քանի  որ  պատկերը  տրոհել  ենք  4  մասի,  յուրաքանչյուր  հատվածի  համար կունենանք մեկ մատրից՝ համապատասխանաբար )1( )2( )3( )4( , , , : ", "Նկար 34.Մշակված նեյրոնային ցանցի օրինակ 12 թաքնված նեյրոնով: ", "𝑖𝑖  =  𝑀𝑀  −  𝑀𝑀𝑀𝑀𝑀𝑀ℎ. 𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓(𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛/𝑁𝑁) −  1;  𝑗𝑗  =  𝑁𝑁  − 𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛 % 𝑁𝑁  −  1;   𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛  =  𝑗𝑗  ∗  𝑁𝑁  +  𝑖𝑖 գործողությունները` ներառյալ  «transpose» փոխարկումը, որին որպես լրացում կատարվում է  մատրիցի  տողերի  փոխարկումը։  Վերոհիշյալ  փոխարկումը  ստացվում  է  յուրաքանչյուր մասնիկի` իրեն համապատասխան մասնիկով փոխարկմամբ, որը հաշվարկվում է հետևյալ կերպ՝ ։ Այս փոխարկումը  նման է մատրիցի  90°-ի թեքմանը։ ", "Վիդեոնկարահանման  ընթացքում  մեկ  վայրկյան  պարբերությաբ  վերցվում  է ընթացիկ  պատկերը:  Ընթացիկ  պատկերը  կնշանակենք  E  տառով:  E  պետկերում հնարավոր  է  արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների գունային  արժեքները  փոխված  լինեն,  այդ  իսկ  պատճառով  փորձում  ենք  C-ում գունային  ինտենսիվությունը  հնարավորինս  մոտեցնել  A  պատկերի  գունային ինտենսիվությանը,  որը  հնարավորություն  կտա  կիրառել  E  և  A  պատկերների պիքսելային XOR համեմատությունը և որոշել՝ արդյոք պատկերում հայտնվել է օբյեկտ, թե ոչ (ստրեև նկարագրված է մեթոդը): ", "Վերը  նկարագրված  ալգորիթմը  ախատեցվում  է  E  պատկերի  համար  և հաշվարկվում են , , , գործակիցները (2.6): Այնուհետև հաշվարկում ենք  ընթացիկ  և  սկզբնական  պատկերների  գունային  արժեքների  տարբերությունները յուրաքանչյուր հատվածի համար (2.7): ", "Նշված  հինգ  փուլերի  ընթացքում  կատարվող  ձևափոխություների  օրինակը ներկայացված  է  նկ․  11-ում։  Այս  ձևափոխություների  արդյունքում  հնարավոր  է  ձևավորել Օգտվելով  շարժական  բանալու  կառավարման  վահանակից`  հնարավոր  է կարգավորել այն հարցումները, որոնք պետք է հսկվեն առաջարկած գաղտնահամակարգի կողմից։  Կարգավորման  համար  օգտագործվում  է  պարզ  ինտերնետ  իրերի  տվյալների փոխանակման  վերջավոր  հասցեն,  որը  հսկման  ցուցակում  ավելացնելուց  հետո ապահովում է  ինտերնետ իրերի ելքային և մուտքային հարցումների անվտանգությունը։ ", "Առաջարկված հեշավորման դասի վրա հիմնված հրամանների փոխանակման համակարգը համեմատվել  է  նաև  այլ  հայտնի  ալգորիթմների  հետ  արագագործության  առումով,  որի արդյունքները  ներկայացված  են  աղյուսակ  7-ում։  CMP  (Command  Message  Protocol)  դա առաջարկված գաղտնահամակագրի կարճ հապավումն է։ ", "•  Ամեն հանգույց ունի «հասանելի»  տիրույթ առաջադրանքների համար, որտեղ կարող են  տեղավորվել վերջավոր քանակությամբ խնդիրներ(տվյալ  դեպքում  ամենաշատը  3  առաջադրանք),  և առաջադրանքի տեղավորվելուն պես այն դիտարկվում է որպես արդեն կատարվող:  Եթե  հանգույցի  «հասանելի»  տիրույթում  կան  3 արաջադրանքներ,  ապա  համարվում  է,  որ  տվյալ  հանգույցը աշխատում է միաժամանակ այդ 3 առաջադրանքների իրականացման շուրջ: ", "-ում  յուրաքանչյուր  պիքսել  արժեքվ  շատ  մոտ  է  համապտասխան  պիքսելին  A պատկերում: ", "Նկ.11. Փուլերի ընթացքում R մատրիցի ձևափոխման օրինակը Աղյուսակ 7. Առաջարկված գաղտնահամակարգի արագագործության համեմատականը Կատարման քանակը Ժամանակը միլիվայրկյաններով AES 128 RSA 1024 CMP SHA 256 CMP SHA 384 CMP SHA 512 Եթե  հարցումը  պարունակում  է  այնպիսի  տվյալներ,  որոնք  հրամաններ  չեն,  ապա իրականացվում  է  համապատասխան  վերահասցեավորում`  օգտագործելով  HTTPS արձանագրությունը, որի կապի հաստատման գործառույթի (handshake)  ընթացքում որպես գաղտնագրման  ալգորիթմ    ընտրվում  է  AES։  Շարժական  բանալին,  ստանալով  անլար ցանցին  միացած  սարքավորումներից  հարցումներ,  նախքան  վերահասցեավորումը ստուգում է  այդ հարցումների վերջնական հասցեներին համապատասխան կարգաբերումների  գոյությունը։  Եթե  այդպիսի  կարգաբերումներ  գոյություն  չունեն, հարցումն ուղարկվում է առանց փոփոխության[44]: ", "-ում  այդ  փոփոխված  պիքսելների առկայությունը  հայտնաբերելու  նպատակով  հաշվարկվում  է  բանաձև  9-ում  բերված անհավասարությունը: ", "(2.9) Եթե անհավասարությունը բավարարվում պայմանին, այսինքն՝ անհավասարության ձախ մասը մեծ է σ գործակցից, ապա E-ի i,j պիքսելը ունի զգալի շեղում  A-ի  i,j  պիքսելից,  որը  և  նշանակում  է,  որ  այդ  պիքսելը  հանդիսանում  է հայտնված  օբյեկտի  պիքսել:  Այդ i,j  պիքսելին  համապատասխան  պիքսելը  D պատկերում  ստանում  է  0,  0,  0  արժեքը  ( =  (0,  0,  0)),  այսինքն՝  սևացվում  է: ", "Սևացված  պիսելների  համախումբը  ցույց  կտա  օբյեկտի  առկայությունը,  արդյունքը կարտապատկերվի D պատկերում (Նկար 2.8): Այսպիսով եթե պատկերում հայտնվել է օբյեկտ,  ապա  նրան  համապատասխան  պիքսելները  սևացվում  են  ըստ  ալգորիթմի, օբյեկտը  հայտնաբերվում  է:  Նկար  2.5-ոմ  պատկերված  է  օբյեկտի  հայտնաբերման ալգորիթմական բլոկ սխեման: ", "Նկար 2.5․  Օբյեկտի հայտնաբերման ալգորիթմական բլոկ-սխեման: ", "Նկար 2.6․  Երկրորդ պատկերում առկա երեք օբյեկտները, որոնցից միայն երկուսն է աչքին հասանելի (ավտոմեքենաները), իսկ երրորդը թաքնված է (որը փոքր կենդանի է): ", "Նկար 2.7․  Երեք օբյեկտների առկայությունը ներկայացված կարմիր շրջանակներում, պատկերում: ", "Նկար 2.8․  D պատկերը որում սև գույնով արտահայտված երևում է հայտնաբերված օբյեկտը: ", "Ֆոնային զատման այս մեթոդի արագագործությունը հավասար է Գլուխ 1-ում նկարագրված հայտնաբերման մեթոդի արագությանը ( )։ ", "Հայտնաբերման որակի  և  արագագործության բարձրացման համար իրագործվել է ֆոնային զատման մեթոդի ձևափոխություն։ Իրականացվել են հետևյալ երեք փուլերը։ ", "SandScheduler  համակարգով  նախագծված  կլաստերային  համակարգի բաշխիչը  ունի  նաև  հնարավորություն  դիմակայել  որոշ  տեխնիկական  խնդիրների, ինչպիսիք  են  օրինակ  որոշ  հանգույցի/հանգույցների  անսպասելի  անջատումները: ", "Նկար 2.9․ Պատկերների բուրգը: ", "Տեսաշարի  ընթացիկ  պատկերի  մատրիցի  ձևափոխության  արդյունքում ստացված բուրգի հիմքը մատրիցն է․ , (2.10) իսկ պատկերի փոքրացման՝ բուրգի մի շերտից մյուսի անցման արդյունքում ստացված մատրիցի տեսքը հաշվվում է հետևյալ բանաձևով․ (2.11) որտեղ -ը  տեսաշարի  ընթացիկ  պատկերի  մատրիցն  է, -ը  բուրգի զրոյական  շերտն  է՝  հիմքը, պատկերի  վրա  կիրառվող  գործողությունների գործակիցն  է  (grayscale,  blur), -ն  բուրգի  շերտերի  քանակն  է, -  պատկերի  չափերի փոքրացման գործակիցն է։ ", "Ցանցի  կառուցումը  բուրգի  վերջին  շերտում․  Տեսահսկման  ժամանակ պատկերում  փոքր  օբյեկտները  հետաքրքրություն  չեն  ներկայացնում։  Օգտատերը հնարավորություն  ունի  սահմանելու  իրեն  անհրաժեշտ  չափը։  Ֆոնում  սահմանված չափից փոքր օբյեկտները կանտեսվեն համակարգի կողմից: Չափը սահմանելուց հետո ցանցը կկառուցվում է ըստ նշված չափի (Նկար 2.10)։ ", "Նկար 2.10․ Ցանցի կառուցումը պատկերում: ", "Օբյեկտների  հայտնաբերումը․ Դիտարկվում  է ցանցի յուրաքանչյուր կետ, եթե կետի  գունային  {R,G,B}  արժեքը  տարբերվում  է  ֆոնից,  ապա  այն  հանդիսանում  է օբյեկտի  կետ։  Տվյալ  կետի  համար  դիտարկվում  են  8  հարևան  կետերը  և համեմատվում ֆոնային պատկերի հետ (նկար 2.11): ", "Նկար 2.11․ Օբյեկտի հայտնաբերման համար մշակված իտերացիոն մեթոդը: ", "Մեթոդի  արագագործությունը  ուղիղ  համեմատական  է  կատարվող  ընդհանուր պիքսելային ստուգումների հետ։ ", "(2.12) որտեղ -ը  ֆոնում  առկա  օբյեկտների  քանակն  է, -ը  մշակված  մեթոդում յուրաքանչյուր  պիքսելի  համար  A-H  ստուգումների  քանակն  է, -ը  պատկերի չափերը, –ը  նմուշի  չափերը,  իսկ -ը  ալգորիթմի  բարդությունն  է,  որը  իրենից ներկայացնում  է  էտալոնային  և  ձևափոխված  պատկերների  միջև  պիքսելային համեմատումների ընդհանուր քանակը: Բանաձևից երևում է, որ -ը զգալիորեն փոքր է,  քան -ը  և    առաջին  գլխում  նկարագրված  նմուշային  համապատասխանեցման ալգորիթմի՝ բարդությունը։  Հետևաբար,  օբյեկտի  հայտնաբերման  համար  մշակված իտերացիոն մեթոդը  արագագործ է նախորդ մեթոդների  համեմատ, որը հետագայում կապացուցվի նաև փորձերի միջոցով։ ", "Եզրակացություն.  Այսպիսով՝  մշակվել  է  մեթոդ,  որը  տեսաշարում  հայտնաբերում  է օբյեկտները,  որոնք  կարող  են  լինել  թաքնված  (մարդու  աչքի  համար  աննկատ  և ֆոնային  պատկերին  մեծ  գունային  նմանություն  ունեցող)  և  անհայտ  (նախապես չսահմանված):  Ընդ որում՝ օբյեկտը կարող է լինել թե՛ անշարժ, թե՛ շարժման մեջ: ", "Սխալների  հայտնաբերումը  և  գործառույթների  չեղարկումը    կատարվում  է՝ հիմնվելով գաղտնագրված տեղեկատվության վերծանման արդյունքի վրա։ Ինչպես նշվել է, ինտերնետ իրերին պատկանող տեղեկատվության վերծանման համար անհրաժեշտ է D–1 ինտերնետ իրերին պատկանող բաց տվյալի հեշը և տվյալ ինտերնետ իրի բանալին։ ", "Ալգորիթմը չի սահմանափակում փնտրվող օյեկտները ըստ տեսակի: ", "Նշենք  նաև,  որ    «CA  Simulator»  փաթեթի  միջոցով  կարելի    է  կատարել բազմաթիվ  տարանջատված  համատեղ  հետազոտություններ,  և  պահպանել հետազոտությունների  ընթացքում  կամայական  պահին  մոդելի  վիճակը՝  հետագա ինչպես  համատեղ,  այնպես  էլ  միանձնյա  հետազոտությունների  համար:    «CA Simulator»-ը ստեղծվել է օգտագործելով .Net միջավայրը և C# լեզուն, իսկ սերվերի տեղակայման  համար  ընտրվել  է  Microsoft  Azure-ը:  Իրականացման  ընթացքում պահպանվել  են  ՕԿԾ-ի  (OOP)  բոլոր  ստանդարտները  և  SOLID-ի  սկզբունքները, որոնք  խիստ  անհրաժեշտ  են  այնքանով,  որ  հնարավորություն  են  ընձեռում  ավելի դյուրին կերպով կատարել համակարգի ֆունկցիոնալ ընդլայնումը և հավելումը այլ բջջային ավտոմատերի մոդելներով: ", "Ատենախոսական  աշխատանքի  նպատակներից  մեկն  է  նախօրոք  հաշվի  առնել  կեղծ թիրախների հնարավոր  առկայությունը՝  այնուհետև դրանց  պատկերից զատելու(անտեսելու) նպատակով: ", "Այս  ենթավերնագրում  ներկայացվում  է  կեղծ  թիրախների  զատման  ընդհանուր մշակման  քայլերն  ու  հիմնական  որոշման  կանոնները  վերը  նշված  տեսահսկման մասնավոր համակարգերի համար  [53]: ", "Կեղծ  թիրախների  առկայությունը  հանգեցնում  է  հայտնաբերման  սխալ արդյունքի և  ալգորիթմի  ավելորդ ժամանակի ծախսի:  Տվյալ մեթոդը նպատակաուղղված է իրագործել հետևյալ կետերը․ •  Որոնել կեղծ թիրախները։ ", "•  Նախատեսել պոտենցյալ կեղծ թիրախների առաջացումը (օգտվելով պատկերների Կերնել մատրիցային եղանակից)։ ", "Առաջարկվող լուծման հիմքում ընկած է զուգահեռ ծրագրավորման և խնդրի զուգահեռացման  մեթոդաբանությունը:  Տարաբնույթ  հաշվարկների  զուգահեռ իրականացումը  թույլ է տալիս առավել մեծ ու բարդ խնդիրները  տրոհել մասերի և այն  հաշվարկել  իրարից  անկախ  գործողություններով,  դրանք  իրականացնելով միաժամանակ։  Խնդիրների  լուծման  նման  մոտեցումը  մարդկությանը  հայտնի  էր վաղուց,  սակայն  նրա  հանդեպ  հետաքրքրվածությունը  մեծացավ  միայն  վերջին տասնամյակում,  երբ  սկսվեցին  արտադրվել  մեկից  ավելի  պրոցեսորներ  ունեցող համակարգիչներ և մշակվեցին մեթոդներ ցանցային ծրագրավորման զարգացման համար՝ այսինքն իրական հնարավորություններ  ստեղծվեցին որևէ խնդրի իրարից անկախ  մասերը  զուգահեռ  լուծել՝  օգտագործելով  մի  քանի  պրոցեսորներ։  Իսկ քանի  որ  արդեն  աշխարհում  բոլոր  համակարգիչները  բազմապրոցեսոր  են,  դա նշանակում է, որ մինչ այս միայն մեկ հաշվարկող պրոցեսորի համար նախագծված բոլոր ալգորիթմները կորցնում են իրենց արդիականությունը, եթէ դրանք կարելի է լուծել զուգահեռացված տարբերակով։ ", "Մասնավոր  տարածքներում,  որտեղ  օբյեկտի  ներթափանցումը  արգելված  է, տեղադրված  են  անվտանգության  տեսախցիկներ,  որոնց  միջոցով  վերահսկվում  է տարածքը:  Այսպիսի  տարածքներում  կարող  են  ներթափանցել  տարբեր  օբյեկտներ, օրինակ՝  մարդ,  կենդանի,  ավտոմեքենա,  տրակտոր  և  այլ  օբյեկտներ:  Այսպիսի դեպքերում  նախապես  հնարավոր  չի  կանխատեսել  և  տարանջատել  ներթափանցող օբյեկտի  տեսակը:  Նախորդ  ենթագլխում՝  2.1.1-ում,  նկարագրված  մեթոդի  միջոցով հնարավոր  է  հայտնաբերել  ցանկացած  օբյեկտ,  որը  կհայտնվի  տարածքում,  քանի  որ ալգորիթմը  ֆիքսում  է  ցանկացած  փոփոխություն  տեսախցիկի  տեսադաշտում  [47]: ", "Բաց  վերահսկվող  տարածքներում,  ինչպիսիք  են  բակերը,  ֆերմաները,  հնարավոր  է այնպիսի  օբյեկտների  առկայություն,  որոնք  բնական  կլիմայական  պայմաններում կարող  են  շարժվել:  Օրինակ՝  վերահսկվող  տարածքում  հանրավոր  է  ծառի առկայություն,  որը  կարող  է  տատանվել  քամու  առաջացման  դեպքում:  Տանտանման արդյունքում ծառի  առաջացրած շարժումը կբերի  պատկերի  պիքսելների փոփոխության:  Փոփոխությունը  անմիջապես  ֆիքսվելով  ալգորիթմի  կողմից,  կբերի նոր  օբյեկտի  առկայության  նախանշանի:  Փոփոխված  տարածքը  կճանաչվի  որպես օբյեկտ: Սա կկանգնեցնի երկու խնդրի առաջ: ", "•  Ավելորդ օբյեկտների հայտնաբերմումը կհանգեցնի սխալ արդյունքի •  Ալգորիթմի ժամանակի ավելորդ ծախսի Դիտարկենք  մի  օրինակ,  որի  դեպքում  անվտանգության  տեսախցիկի  միջոցով վերահսկվում  է  այնպիսի  տարածք,  որտեղ  օբյեկտի  ներթափանցումը  արգելված  է (Նկար 2.12ա): "], "source_docs_file": "Informatics and Computer Systems.json"}
{"paragraph_source_docs": [2, 4, 4, 3, 1, 4, 2, 0, 4, 4, 1, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4], "paragraphs": ["- 64 - սխեմատեխնիկական  առանձնահատկությունների  հաշվառմամբ  ֆիզիկական կառուցվածքի ստացման միջոց։ ", "Հետևաբար,  ներկառուցված  հիշողությունների  թեստավորումն  ու  վերանորոգումը հնարավորություն  կտա  բարձրացնել  ամբողջ  համակարգի  արտադրական  ելքը  [59]: ", "Նախկինում  ներկառուցված  հիշողությունների  թեստավորումն  ու  վերանորոգումն իրականացվել է արտաքին թեստավորող սարքերի օգնությամբ:  Սակայն, Բվհ-ի չափերի փոքրացման  և  ֆունկցիոնալության  բարդացման  պատճառով  արտաքին  թեստավորող սարքերի  կիրառությունը  դառնում  է  խիստ  թանկարժեք  և  անհարմար:  Այդ  խնդիրը լուծելու  համար  առաջարկվել  են  ներկառուցված  թեստավորման  և  վերանորոգման լուծումներ,  որոնք  հիշողության  բջիջների  հետ  ներդրվում  են  ԲՎՀ-ում  և  աշխատում  են որպես  մինի-թեստեր [60]:  Այդ  լուծումների  թվին  են  պատկանում  ներկառուցված ինքնաթեստավորումը (BIST-Built-ln  Self  Test), հավելւալության  ներկառուցված վերլուծությունը (BIRA-Built-ln Redundancy Analysis) և ներկառուցված ինքնավերանորոգումը  (BISR -  Built-In  Self Repair)  [61]: ", "Նկ. 3.24. 32QAM ազդանշանի ամպլիտուդայի գրաֆիկ Նկ.  3.23-ում  պատկերված  է  32QAM  մոդուլացված  ազդանշանի  ամպլիտուդայի գրաֆիկը՝ ներկայացված բաղկացուցիչ կետերի  միջոցով։  Նկարում հստակ  երևում են 5 գծեր,  որոնք  համապատասխանում  են  ամպլիտուդայի  արժեքների  խտությանը  տվյալ տիրույթներում։  Հետևաբար,  դիտարկելով  ակնթարթային  ամպլիտուդայի  գրաֆիկը կարելի  է  տեսնել  վերջինիս  ակնթարթային  ամպլիտուդայի  փոփոխությունների քանակը, ինչը երևում է նաև նկ․ 3․25-ում հիստոգրամի գրաֆիկից։ ", "Ներկայումս  թեստային  ալգորիթմների  և  թերությունների  մոդելների  բարդության աճման  պատճառով  դրանց  ստուգումը  առանց  հատուկ  ծրագրային  ավտոմատ միջոցների դառնում է անհնար [15]: ", "Հավելյալության  ներկառուցված  վերլուծությունը  (131[^)  հնարավորություն  է  տալիս լուծել  այդ  խնդիրները:  Խափանված  բիթերի  քարտեզն  այժմ  աբողջությամբ  չի ուղղարկվում  արտաքին  աշխարհ  վերլուծության  համար:  131[^-ն  ալգորիթմների օգնությամբ  իրականացնում  է  խափանված  բիթերի  ախտորոշում  և  վերլուծություն: ", "- 65 - ՀԱՇՎԱՌՄԱՄԲ ԻՆՏԵԳՐԱԼ ՍԽԵՄԱՆԵՐԻ ՖԻԶԻԿԱԿԱՆ ՆԱԽԱԳԾՄԱՆ ԱՎՏՈՄԱՏԱՑՄԱՆ ԵՆԹԱՀԱՄԱԿԱՐԳԻ ԱԼԳՈՐԻԹՄԱԿԱՆ ԵՎ ԾՐԱԳՐԱՅԻՆ ԱՊԱՀՈՎՈՒՄԸ ավտոմատացված ֆիզիկական նախագծման հիմնական փուլերը Սխեմատեխնիկական  առանձնահատկությունների  հաշվառմամբ  ԻՍ-ի  ֆիզիկական նախագծման  համար  առաջարկվող  և  իրականացված  մոտեցումը  հիմնված  է  հետևյալ քայլերի հաջորդական իրագործման վրա (նկ․ 3․ 1). հաջորդականության ռանգավորման իրականացում, «փափուկ»  կառուցվածքի  բլոկի ավտոմատացված սինթեզը, սինթեզը՝ կառուցվածքային սահմանափակումների հաշվառմամբ: ", "(Փուլ 1) (Փուլ 2) Նկար 2․3. Համակարգում գրանցման ալգորիթմը Նկար 2.3-ում ներկայացված է օգտատերերի գրանցման ալգորիթմի բլոկ-սխեման՝ ըստ առաջին և երկրորդ փուլերի։ Նկար 2.3-ում կետ գծերով նշված է տվյալների բազայի հետ կապը։ ", "Արդյունքում արտաքին  հավել|ալության վերլուծության  անհրաժեշտությունը վերանում է, իսկ  արտաքին  թեստավորող  սարքն  ավելի  է  էժանանում:  Բացի  այդ  հավելյալության վերլուծության  համար  պահանջվող  ժամանակի  նվազման  հետևանքով  բարձրանում  է ներկառուցված հիշողությունների թեստավորման և վերանորոգման արդյունավետությունը  [65]: ", "ԲՎՀ-ի  չափերի  փոքրացման  և  հիշողության  բջիջների  քանակի  մեծացմանը զուգընթաց  աճում է հիշողության  անսարքությունների հայտ գալու հավանականությունը: ", "- 92 - Մոդելավորման արդյունքում ստացված տվյալների մշակումը կատարվում է ծրագրային ԱՀ-ի հաջորդ հանգույցում: ", "Երկրորդ  տարբերակում SMS  ուղարկող  համակարգը  անմիջականորեն ղեկավարում  է  GSM  մոդեմի  աշխատանքը։  Դա  մի  կողմից  բարդացնում  է  ծրագրային համակարգը,  մյուս    կողմից  բարձրացնում  է  SMS  հաղորդագրությունների  ուղարկման օպերատիվությունը։ ", "դեպքում  իրականացվում  է  միայն  խափանված  բիթերի  դուրս  բերում,  իսկ ինքնավերանորոգման  դեպքում  անհրաժեշտ  է  գրանցել  միայն  անսարք  բջիջների դիրքերի  հասցեները,  որոնք  վերծանվում  են  բյուրեղի  ներսում'  անսարք  տողերը  և սյուները որոշելու նպատակով: Նկար 31-ում ներկայացված է 131Տ1Նի  ընդհանուր  սխեման [68]: ", "Նկար 31 ՑւՏքՀ-ի ընդհանուր  սխեման [60] Fall_flag-ի  յուրաքանչյուր  ստուգման  դեպքում  երբ  կա  խափանում  հասցեի  արժեքը տրվում  է  վերծանիչին,  որը  վերծանում  է  խափանված  սյունը:  Թեստավորման  վերջում խափանված  սյուների  քանակը  համեմատվում  է  հավել)սղության  մեջ  առկա  սյուների քանակի  հետ:  Հնարավոր  են  թեստավորման  հետևյալ երեք  արդյունքները' •  Հիշողությունն  անցնում  է թեստավորումը: ", "•  Հիշողությունը  չի  անցնում  թեստավորումը:  Անսարք  սյուների  քանակն  ավելի շատ  է,  քան  առկա  է  հավել)սղության  մեջ:  Այս  դեպքում  սարքը  սարքը  չի վերանորոգվում: ", "•  Հիշողությունը չի  անցնում  թեստավորումը:  Անսարք  սյուների քանակն  ավելի քիչ է,  քան  առկա  է  հավելյալության  մեջ:  Այս  դեպքում  հնարավոր  է  վերանորոգել սարքը  և թողարկվում  է վերանորոգման գործընթացը:  Վերանորոգման  դեպքում առո . . ............................................ ՀՆԹՏ-ի  կիրառումը  հնարավորություն  է  տալիս որոշակի համար ՀՆԹՅ֊ը SoC eFUSE Изз 3  . Memory  “ 55J > System  П Т Я Server CPU STAR Memory System Processor IEEE 1500 Wrapper 1 Wrapper 1 Wrapper IP RF DP SRAM RF J   STAR Memory System solution IEEE 1500 Memory  н Controller Memory ^ S y s t e m  eFlash/ STAR Memory System Ext  RAM MRAM Processor Wrapper eFlash/ MRAM Off chip memory Ex. DDR/LPDDR STAR Memory System Silicon Browser STAR Memory System Yield Accelerator Նկար  33-ում  ներկայացված  է  «Մենթոր  Գրաֆիքս»  ընկերության  ներկառուցված հիշողությունների  ՀՆԹՅ-ի ճարտարապետությունը:  Այն  կոչվում է  16ՏՏ6ոէ հ/16րոօ^61Տ1: ", "Ինչպես  նկատում  ենք  երկու  օրինակների  դեպքում  էլ  ճարտարապետությունն  ունի հիերարխիկ  կառուցվածք  և բաղկացած է նմանատիպ  կոմպոնենտներից: ", "Նկար 33  Tessent MemoryBIST ֊ի ճարտարապետությունը [68] Հետազոտական  աշխատանքներ  իրականացնելու  համար  այս  աշխատանքում օգտագործվել  է  «Սինոփսիս»  ընկերության  DesignWare  SMS-ը,  քանի  որ  այն  իր բարդությամբ  և  կառուցվածքով  համապատասխանում  է  մեր  հետազոտությունների առարկային:  Նկար  34-ում  բերված  է  DesignWare  SMS-ի  ճարտարապետության պարզեցված  մի  օրինակ:  Ինչպես  տեսնում  ենք  այն  ունի  հիերարխիկ  կառուցվածք  և բաղկացած  է  հետևյալ  կոմպոնենտներից' հիշողության նմուշներից  իրենց ինտելեկտուալ  պատյաններով  (անգլերեն'  Wrapper),  պրոցեսորներից (անգլերեն' Processor),  հիերարխիայի  վերին  մակարդակի  սերվերից (անգլերեն'  Server), հիշողությունների  վերանորոգումների տվյալների պահոցից  (Fuse box)  և TAP (Test Access Control)  ինտերֆեյսից  [69],  [70]: ", "Wrapper-ը  բաղկացած  է  հասցեների  հաշվիչներից,  ռեգիստորներից,  տվյալների կոմպարատորներից  և  մուլտիպլեքսորներից:  Այն  հանդիսանում  է  ինտերֆեյս պրոցեսորի  և  հիշողության  միջև:  Յուրաքանչյուր  հիշողության  հետ  կապված  Wrapper աշխատում  է  Processor-ի  հետ  համատեղ'  ապահովելով  հիշողությունների  ստուգման  և վերանորոգման  գործողությունների  կատարումը  ինչպես  նաև հիշողությունների  նորմալ աշխատանքը:  Յուրաքանչյուր  Wrapper  կարող է խմբավորել մի քանի  հիշողություններ: ", "Նկար 34 DesignWare Տ/\\4Տ-ի օրինակ Բ ր օ շ Ց Տ Տ օ ր -ն   ունի  կարևորագույն  թեստավորման  և  վերանորոգման  ֆունկցիաներ (131Տ1,  Ց ^ ) :   Ներկառուցված  հիշողությունները  թեստավորվում  են  131Տ1-ի  միջոցով:  Այն բաղկացած է յուրաքանչյուր ներկառուցված հիշողության  կողքին գտնվող շարժիչից, որը գրում  է ալգորիթմորեն գեներացված նմուշները  հիշողության  մեջ և այնուհետև կարդում է  դրանք  հիշողությունից'  անսարքությունները  ֆիքսելու  նպատակով:  Ստուգման ալգորիթմները  կարող  են  նախապես  ներդրվել  131Տ1  մոդուլի  մեջ  կամ  կարգավորվել արտաքինից'  միկրոկոդի  միջոցով,  որը  կարող  է  պահվել,  օրինակ,  էներգաանկախ մշտական  հիշողության  մեջ:  Հիշողության  թեստավորումից  հետո  131[^  վերանորոգման և հավել|ալության  տեղաբաշխման  մոդուլը հայտնաբերում է գոյություն  ունեցող հավել|ալ տողերն  ու  սյուները  և  որոշում  է  դրանց  օպտիմալ բաշխման  տարբերակը:  Դրա  համար այն օգտագործում է  անսարքությունների նախապատմությունից ստացվող հիշողությունների  թերությունների  վերաբերյալ  ինֆորմացիան,  որը  տրամադրվում  է սխեմաներ  արտադրող գործարանների  կողմից:  Այսպիսով  Բ ր օ օ Ց Տ Տ օ ր -ը   տեղայնացնում և  վերանորոգում  է  հիշողության  անսարքությունները:  Տեղաբաշխման  մոդուլը  հավելյալ տողերի  և  սյուների  տեղաբաշխման  ինֆորմացիան  վերածում  է  հիշողությանը  հատուկ կոդի  և  գրանցում  է  այն  հիշողությունների  թերությունների  մասին  ինֆորմացիայի գրանցման  պահոցում:  Processor-ը  կարող  է  ստուգել  և  վերանորոգել  բազմաթիվ հիշողություններ  հաջորդական  կամ  զուգահեռ  ռեժիմում:  Բվհ-ում  հիշողության նմուշների  խմբավորումը  Processor-ի  միջոցով  պայմանավորված  է  մակերեսի, հզորության,  արագության,  համակարգային  տակտային  գեներատորի  և  բյուրեղի  վրա մոդուլների  տեղաբաշխման  գործոններով [69],  [70]  : ", "DesignWare  SMS-ի  ֆունկցոնալ  բաժանումը  Wrapper  և  Processor  կառուցվածքային միավորների  պայմանավորված  է  աշխատանքի  համար  անհրաժեշտ  թողունակության պահանջներով:  Wrapper-ի  և  Processor-ի  միջև  տփալների  փոխանակումը  տեղի  է ունենում ցածր  թողունակությամբ,  իսկ Wrapper-ի  և հիշողության  միջև'  բարձր: Wrapper- ը  ֆիզիկապես  մոտ  է  տեղակայված  հիշողությանը,  որպեսզի  թեստավորումն իրականացվի  աշխատանքային  հաճախականությամբ  [69],[70]: ", "Processor-ը  գտնում  է  սխալները,  և  եթե  հիշողությունը  վերականգնվող  է,  ապա հատուկ  ալգորիթմների  օգնությամբ  գեներացվում  է  վերականգնման  ազդանշանը: ", "Ղեկավարման բլոկը ստեղծվում է SMS հաղորդագրությունների հերթ։ Բոլոր GSM մոդեմների համար հերթը ընդհանուր է, ուստի բախումներից խուսափելու նպատակով մոդիֆիկացվել և իրականացվել է հոսքերի արտադրող-սպառող (առավել հայտնի որպես Producer–Consumer25) մոդելը [20]։ Յուրաքանչյուր հաղորդագրության համար ստեղծվում է  առաջադրանք,  որը  կատարվում  է  GSM  մոդեմի  կողմից,  առանձին  զուգահեռացված հոսքով (անգլերեն` thread): Յուրաքանչյուր GSM մոդեմ ժամանակի տվյալ պահին կարող է  կատարել  միայն  մեկ  առաջադրանք,  որի  կատարման  ընթացքում  սարքը  անցնում  է «զբաղված»  կարգավիճակի։  Գործընթացի  ավարտից  հետո    մոդեմը  բերվում  է  «ազատ» վիճակի՝ հաջորդ առաջադրանքի կատարման համար, իսկ կատարված առաջադրանքը հեռացվում է հերթից։ Հերթում առաջադրանքների սպասարկման ժամանակ հերթական առաջադրանքի  կատարման  համար  ընտրվում  է    «ազատ»  GSM  սարք։  «Ազատ»  սարքի բացակայության  դեպքում  հերթի  սպասարկում  չի  կատարվում։  GSM  մոդեմների աշխատանքների ղեկավարման սխեման բերված է Նկ․ 2.4 -ում։ ", "Նկար 2.4. GSM մոդեմների հետ աշխատանքային սխեման Գործընթացի  տևողության  կրճատման  գնահատումը։  Զուգահեռ  հոսքերով աշխատող  համակարգի  արագության  գնահատումը  կարելի  է  կատարել  Ամդալի օրենքով [21] (2․2): ", "Server-ը  DesignWare  SMS-ի  ամենաբարձր  մակարդակի  ենթակաոուցվածքն  է,  որը թեստավորման  և  վերանորոգման  արդյունքները  փոխանցում  է  TAP  կոտրոլերին  JTAG պորտի  միջոցով [69],  [70]: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
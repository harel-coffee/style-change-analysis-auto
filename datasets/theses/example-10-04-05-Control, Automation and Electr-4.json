{"paragraph_source_docs": [4, 2, 0, 4, 3, 1, 4, 4, 4, 2], "paragraphs": ["Հավելյալության  ներկառուցված  վերլուծությունը  (131[^)  հնարավորություն  է  տալիս լուծել  այդ  խնդիրները:  Խափանված  բիթերի  քարտեզն  այժմ  աբողջությամբ  չի ուղղարկվում  արտաքին  աշխարհ  վերլուծության  համար:  131[^-ն  ալգորիթմների օգնությամբ  իրականացնում  է  խափանված  բիթերի  ախտորոշում  և  վերլուծություն: ", "- 65 - ՀԱՇՎԱՌՄԱՄԲ ԻՆՏԵԳՐԱԼ ՍԽԵՄԱՆԵՐԻ ՖԻԶԻԿԱԿԱՆ ՆԱԽԱԳԾՄԱՆ ԱՎՏՈՄԱՏԱՑՄԱՆ ԵՆԹԱՀԱՄԱԿԱՐԳԻ ԱԼԳՈՐԻԹՄԱԿԱՆ ԵՎ ԾՐԱԳՐԱՅԻՆ ԱՊԱՀՈՎՈՒՄԸ ավտոմատացված ֆիզիկական նախագծման հիմնական փուլերը Սխեմատեխնիկական  առանձնահատկությունների  հաշվառմամբ  ԻՍ-ի  ֆիզիկական նախագծման  համար  առաջարկվող  և  իրականացված  մոտեցումը  հիմնված  է  հետևյալ քայլերի հաջորդական իրագործման վրա (նկ․ 3․ 1). հաջորդականության ռանգավորման իրականացում, «փափուկ»  կառուցվածքի  բլոկի ավտոմատացված սինթեզը, սինթեզը՝ կառուցվածքային սահմանափակումների հաշվառմամբ: ", "(Փուլ 1) (Փուլ 2) Նկար 2․3. Համակարգում գրանցման ալգորիթմը Նկար 2.3-ում ներկայացված է օգտատերերի գրանցման ալգորիթմի բլոկ-սխեման՝ ըստ առաջին և երկրորդ փուլերի։ Նկար 2.3-ում կետ գծերով նշված է տվյալների բազայի հետ կապը։ ", "Արդյունքում արտաքին  հավել|ալության վերլուծության  անհրաժեշտությունը վերանում է, իսկ  արտաքին  թեստավորող  սարքն  ավելի  է  էժանանում:  Բացի  այդ  հավելյալության վերլուծության  համար  պահանջվող  ժամանակի  նվազման  հետևանքով  բարձրանում  է ներկառուցված հիշողությունների թեստավորման և վերանորոգման արդյունավետությունը  [65]: ", "Այս  նախնական  փորձնական  աշխատանքի  նպատակն  է  հիմնավորել,  որ  չորս տեսակի  ազդանշանների  ճանաչման  արդյունքների  ճշտության  աստիճանը  բավարար հիմք  է  հանդիսանում  եզրակացնելու,  որ  ԱՆՑ  ալգորիթմի  մշակումը  հնարավոր  է իրականացնել  LabVIEW  միջավայրում  և  զարգացնել  ու  բարելավել  այն  ավելի  բարդ հաշվարկների և կոմպլեկս խնդիրների, մասնավորապես ՄԱՆ խնդրի լուծման համար: ", "- 92 - Մոդելավորման արդյունքում ստացված տվյալների մշակումը կատարվում է ծրագրային ԱՀ-ի հաջորդ հանգույցում: ", "Թեստավորման  ժամանակ  խափանման  հասցեն  պահվում  է  հատուկ  ռեգիստրում,  որը փոխանցվում  են վերանորոգման մեխանիզմին  և  հիշողությունն  ավտոմատ վերանորոգվում  է  այնպես,  որ  խափանված  հասցեն  այլևս  չօգտագործվի: ", "դեպքում  իրականացվում  է  միայն  խափանված  բիթերի  դուրս  բերում,  իսկ ինքնավերանորոգման  դեպքում  անհրաժեշտ  է  գրանցել  միայն  անսարք  բջիջների դիրքերի  հասցեները,  որոնք  վերծանվում  են  բյուրեղի  ներսում'  անսարք  տողերը  և սյուները որոշելու նպատակով: Նկար 31-ում ներկայացված է 131Տ1Նի  ընդհանուր  սխեման [68]: ", "Նկար 31 ՑւՏքՀ-ի ընդհանուր  սխեման [60] Fall_flag-ի  յուրաքանչյուր  ստուգման  դեպքում  երբ  կա  խափանում  հասցեի  արժեքը տրվում  է  վերծանիչին,  որը  վերծանում  է  խափանված  սյունը:  Թեստավորման  վերջում խափանված  սյուների  քանակը  համեմատվում  է  հավել)սղության  մեջ  առկա  սյուների քանակի  հետ:  Հնարավոր  են  թեստավորման  հետևյալ երեք  արդյունքները' •  Հիշողությունն  անցնում  է թեստավորումը: ", "Նկ․  3․2․   Սխեմայի  փականային  մակարդակի  Iscas85 գրադարանի թեստային c17.v Verilog նկարագիրը - 69 - Ալգորիթմի  նկարագրության  համար  կօգտագործենք  օբյեկտակողմնորոշված ծրագրավորման (ՕԿԾ) որոշակի տերմինաբանություն, որը կնպաստի նկարագրության հակիրճ  և  ձևայնացած  ներկայացմանը:  Ինչպես  հայտնի  է,  ՕԿԾ  –ն  ծրագրավորման մոտեցում է, որի գաղափարական հիմք են հանդիսանում օբյեկտ և դաս հասկացությունները [73, 74]։ "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
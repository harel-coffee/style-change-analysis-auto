{"paragraphs": ["Բայց  այդ    հաջորդական  մշակման  շնորհիվ,  հնարավոր  է  դառնում.  ա)  ապահովել մշակման  արդյունքների  միանշանակությունը,  և,  որ  շատ  կարևոր  է,  բ)  բացառել    PA աշխատանքի  ընթացքում    անորոշ  իրավիճակների  ի  հայտ  գալը,  որը  տեսականորեն հնարավոր է զուգահեռ մշակման դեպքում: ", "Դիտարկենք հատումների թվի նվազեցումը երկու ռանգերի համար [54]: Ենթադրենք, մեզ տրված է G = (R1, R2, W) գրաֆը, որտեղ R1-ը առաջին ռանգի տարրերի բազմությունն է,  R2-ը՝  երկրորդ,  իսկ  E-ն՝  շղթաների  բազմությունը:  Առաջին  ռանգի  գագաթների դիրքերը  համարելով  ֆիքսված,  կդասավորենք  երկրորդ  ռանգի  տարրերը:  Ինչպես արդեն նշվել է, այդ խնդիրն ունի NP-բարդություն, և դրա մոտավոր լուծումները գտնելու համար կոգտագործվեն մոտավոր լուծման մեթոդներ: ", "Վերոհիշյալ  մեթոդներից  մեկը  հիմնված  է  տեսակավորման  ալգորիթմների  վրա  [57, նվազագույնի:  Հեշտ  է  նկատել,  որ  ընտրված  երկու  տարրերի  համար՝  u  ∈  R2  և  v  ∈  R2, դրանց  հարևան  տարրերի  հետ  հատումների  քանակը  կախված  է  միայն  այդ  երկու տարրերի  հարաբերական  դիրքերից:  Այսպիսով,  կարող  ենք  դիտարկել  հատումների - 59 - քանակը՝ փոխելով տրված ռանգում տարրերի հարաբերական դիրքերը: Հենց տարրերի հարաբերական դիրքերը փոխելու վրա էլ հիմնված են  տեսակավորման ալգորիթմներն օգտագործող  մեթոդները:  Այդպիսի  մեթոդները  պետք  է  արագ  հաշվեն  հատումների պոտենցիալ  քանակը:  Դա  կարող  է  կատարվել  ուղակի  O(|W|2)  ժամանակում  կամ լավարկել մինչև O( ), որտեղ KUV-ն հատումների քանակն է, որն առաջանում է u և v տարրերի  զույգի  միջոցով:  Հնարավոր  հատումների  հաշվարկը  յուրաքանչյուր  զույգի դեպքում  պետք  է  կատարել  միայն  մեկ  անգամ  (դա  էլ  հենց  տալիս  է  տարրերի բազմության դասավորությունը): ", "Տեսակավորման մեթոդների վրա հիմնված ալգորիթմներից մեկն իր էությամբ նման է պղպջակների  մեթոդին  (bubble  sort)  [57,  59]:  Հերթականությամբ  դիտարկվում  են հարևան գագաթների բոլոր զույգերը, և դրանք տեղերով փոխվում են, եթե այդ դեպքում հատումների  թիվը  կփոքրանա:  Գործընթացն  ավարտվում  է,  երբ  հերթական  լրիվ դիտարկումից  հետո  (բոլոր  տարրերով  անցնելուց  հետո)    հատումների  քանակը  չի նվազում  (չկարգավորված  զույգ  չի  գտնվում):  Այս  ալգորիթմի  բարդությունը  O(|R2|2)  է, քանի որ վերջնական կարգավորություն ստանալու համար կարող են անհրաժեշտ լինել մինչև անգամ |R2| դիտարկումներ: Այսպիսի ալգորիթմի ընտրությունը խիստ կախված է նախնական  դասավորության  ընտրությունից,  քանի  որ  դիտարկվում  և  տեղափոխվում են միայն իրար հարևան տարրերը: ", "Զուգահեռ թեստավորումը  կրճատում  է  ժամանակային  ռեսուրները,  տարրերի  քանակը  մնում  է նույնը,  իսկ  հզորության  սպառումը  մեծանում  է [56]: ", "Միևնույն  ժամանակ՝  4ASK  ազդանշանի  ակնթարթային  ամպլիտուդան  ունի  չորս տարբեր արժեքներ, ինչը նշանակում է, որ այս ազդանշանը պարունակում է բացարձակ ամպլիտոդւային  տեղեկատվություն:  Հետևաբար -ն  կիրառվում  է  2ASK  և  4ASK ազդանշանները միմյանցից տարբերակելու համար: ", "Նկար 29 Հիշողության BIST network-ի  կառուցվածքը [56] Նկար  29-ում  ներկայացված  է  հիշողության  ՀՆԹՅ-ի  ճարտարապետության  մի օրինակ,  որը  սովորաբար  բաղկացած  է  մի  քանի  կոմպոնենտներից:  Յուրաքանչյուր կոմպոնենտ  կարող է  թեստավորել մի  քանի  հիշողություններ:  Գոյություն  ունի  ՀՆԹՅ-ի տ րա մա բա նութ յա ն  ի րա կա նա ց մա ն  երկու  մ ե թ ո դ '  հ ա ջորդ ա կա ն  և  զուգա հեռ:  Այս օրինա կում  1\\/1օտօր2  ևհ/1օրոօ^Յ-ը  կ ա ր ո ղ  են  թ ե ս տ ա վ ո ր վ ե լ զուգ ա հեռ  կա մ  հա ջորդ ա կա ն ռեժիմներում,  ինչպ ես նա և  ՑւՏ՜Ո,  131Տ12  և 131Տ13 նույնպ ես  կ ա ր ո ղ  են  ա շխ ա տ ե լ զուգ ա հեռ կա մ  հա ջորդ ա կա ն  ռեժիմներում: ", "Ինչպես արդեն նշվել է, ցանկացած դասավորության որոշման մեթոդ, որը հիմնված է տեսակավորման  ալգորիթմների  վրա  և  պետք  է  աշխատի  տարրերի  զույգերի  հետ,  չի կարող իրագործվել գծային ժամանակում: Հետևաբար, վերոհիշյալ մեթոդներից ոչ մեկը չի կարող ունենալ գծային բարդություն: ", "SIV-ի հոսքի օգտագործման փորձնական տվյալները ՍՊԴԿ SDV SDV GDSII  ֆայլերի SDV-ի մշակման կոմպիլյատոր կոնֆիգուրա- գեներացման ընդհանուր Աղյուսակ 2.1 ցիաների ժամանակը ժամանակը քանակը (զուգահեռացման գործակից=16) ts90nm 1p11HS 512K ts90nm 1p11HD 512K ts65nm 1p11HS 512K ts65nm 2p22HD 512K ts45nm 1p11 512K ts32nm 1p11 1M ts28nm 2p22 1M ts22nm 1p11 1M ts14nm 1p11 1M մոտ 2 ժամ մոտ 3 ժամ մոտ 2.2 ժամ մոտ 2.4 ժամ մոտ 4.5  ժամ մոտ 4.5 ժամ մոտ 3.5  ժամ մոտ 4.2 ժամ մոտ 4.4 ժամ մոտ 5.5 ժամ մոտ 5.2 ժամ մոտ 6.3 ժամ մոտ 6.3 ժամ մոտ 7 ժամ մոտ 7.1 ժամ մոտ 8.2 ժամ մոտ 8.5 ժամ մոտ 10 ժամ Հարկ է նշել, որ ժամանակակից հիշողության կոմպիլյատորների SDV ստուգման կոնֆիգուրացիաների  քանակը  հասնում  է  մի  քանի  հարյուրների  (Տես՝  աղ.  2.1),  ուստի - 84 - շատ կարևոր է  դառնում հնարավորինս ավտոմատացնել, արագացնել  GDSII   ֆայլերի գեներացումը  և  մշակումը:  Այդ  նպատակով  SIV-ում  իրականացված  է    նմուշների գեներացման  աշխատանքների  զուգահեռ  կատարումը:  Բացի  այդ,  իր  աշխատանքի սկզբում  նախապես  համեմատվում  և  գեներացման  հերթից  դուրս  են  հանվում  արդեն գեներացված կոնֆիգուրացիաները:  Ցավոք,  ներկայումս անհնար  է լիովին ավտոմատացնել  արդյունքների  վերջնական  մշակման  աշխատանքները,  այն  կարելի  է պարզեցնել, հեշտացնել [27-29]՝  առավելագույնս նվազեցնելով մեխանիկորեն մշակվող ինֆորմացիայի  քանակը  և  տրամադրելով  մշակմանը  անհրաժեշտ  ինֆորմացիան առավելագույնս  ընթերցելի  տեսքով:  Աղյուսակ  2.1-ից  երևում  է,  որ  GDSII  ֆայլերի գեներացման  ժամանակի  և  այդ  ֆայլերի  քանակի  աճման  կախվածությունը  գծային  չէ: ", "Ենթադրենք` opt(G,x1)-ն տվյալ գրաֆի համար հնարավոր նվազագույն հատումների քանակն  է,  որտեղ  x1-ը  տարրերի  դիրքերն  է  R1-ում,  avg(G,x1)-ն`  հատումների  քանակy բարիկենտրոնի  մեթոդի  կիրառումից  հետո,  իսկ  med(G,x1)-ը՝  հատումների  քանակը - 61 - միջին  արժեքի  մեթոդից  հետո:  Բերենք  մի  քանի  պնդումներ  բարիկենտրոնի  և  միջին արժեքի մեթոդների վերաբերյալ [54]: ", "Աղյուսակ  2.2-ում  տրված  են  հիշողության  կոմպիլյատորների  բնութագրերը  և դրանց համապատասխան  ASV  ալգորիթմի  աշխատանքի ժամանակային գնահատականները, որտեղ  «K» դա –կիլոբիթ է իսկ  «M» - մեգաբիթ: ", "ASV ալգորիթմի աշխատանքի տևողությունը նմուշների ստուգվող ստուգող ալգորիթմի Աղյուսակ 2.2 ՍՊԴԿ կոմպիլյատոր չափսերի նմուշների հավաքա- աշխատանքի տիրույթը քանակը ծուների թիվը ժամանակ ts90nm 1p11 HS 8M ts90nm 1p11 HS 512K ts90nm 2p22 HS 512K ts90nm 1p11 HD 512K ts90nm 2p22 HD 512K ts90nm 2p11 HD 32K ts90nm 2p11 HS 16K - 85 - Փորձնական  տվյալները  ցույց  տվեցին,  որ  SPICE  մոդելավորման  արդյունքները կախված  չեն  մոդելավորման  ընթացքում  կատարվող  հաշվարկների  ճշտությունից, այսինքն՝ մոդելավորման ժամանակ բավական է օգտագործել ամենացածր ճշտությունը ապահովող  մոդելավորման  գործակիցը,  դրանով  զգալիորեն  նվազեցնելով  ASV ստուգումների տևողությունը: ", "SIV  ԱՀ-ի  ողջ  ծրագրավորումը  իրականացված  է  TCL  ծրագրավորման  լեզվով հեղինակի  մասնակցությամբ:  Իսկ  VIG,  VPG,  MPT  գործիքների  ծրագրավորումը կատարված է C++ ծրագրավորման լեզվով [17]: ", "Կառուցվածքային  մոդելը  ավտոմատ  դուրս բերող ծրագրային  հոսքը հաջողությամբ  օգտագործվել է  տարբեր  տեխնոլոգիաների (45  նմ,  28  նմ) հիշողությունների կառուցվածքային մոդելները ավտոմատ ստանալու նպատակով: ԱՀ- ի  աշխատանքի տևողությունը փոփոխական է` և՛ փոքր, և՛ պարզ կառուցվածք ունեցող նմուշների  դեպքերում  կարող  է  տևել  մեկ,  երկու  ժամ,  իսկ  մեծ  և  բարդ  կառուցվածք ունեցող  նմուշների դեպքերում այն կարող է տևել մինչև մի քանի տասնյակ ժամեր: ԱՀ- ի  հիմնական  ժամանակի  բաժին  է  կազմում  SPICE  ֆայլերի  ստացումը,  և  ստացված SPICE  ֆայլերի  մոդելավորումը: ", "Տվյալ բնութագրի ծրագրային իրականացումը պատկերված է նկ. 3.20-ում: ", "• Նախորդ կետի նույնությամբ կրկնության դեպքում, բացառությամբ, երբ նամակի «ում» և «պատճեն» դաշտերում նշված է միայն համակարգի էլեկտրոնային հասցեն կամ երկուսն էլ դատարկ են, այն որակավորվում է որպես էլեկտրոնային փոստի միջոցով SMS հաղորդագրություն ուղարկելու հրահանգավորում։ ", "Փոխանջատման  ակտիվության  գնահատականը  հիմնված  է  տրամաբանական տարրի ելքին ազդանշանային հավանականության բնութագրման վրա [68]. Ազդանշանային  հավանականությունը  տրամաբանական  տարրի  ելքին «1» ազդանշանի  առաջացման  հավանականությունն  է,  որը  կարելի  է  հաշվարկել  տվյալ տարրի իսկության աղյուսակով: ", "Հիմնական տրամաբանական տարրերի ելքին ազդանշանային hավանականությունները՝  փոխակերպիչի (ինվերտորի)  տիպի,  և(AND),  կամ(OR), որոշվում են հետևյալ կերպ՝ ,                (2.9) որտեղ Pi –ն  տրամաբանական  տարրի i-րդ մուտքի  ազդանշանային հավանականությունն է, m –ը՝ տրամաբանական մուտքերի քանակը: ", "- 87 - SIV և SIE ԱՀ-րի ողջ ծրագրավորումը կատարված է TCL ծրագրավորման լեզվով: ", "Ինչպես  և  SIV  ԱՀ-ի  դեպքում,  SIE  ԱՀ-ի  կառավարումը,  մուտքային  պարամետրերի արժեքների  փոխանցումը  ծրագրերին,  նույնպես,  իրականացված  է  կառավարող տեքստային ֆայլի միջոցով: ", "Այսպիսով՝  տվյալ  հիմնական  բնութագրող  հատկանիշը  մշակվել  է  ակնթարթային փուլի  փոփոխությունների  քանակի  միջոցով  փուլային  մոդուլացված  ազդանշանի կարգը  հայտնաբերելու  համար։  Որոշված  արժեքների  տիրույթում  փուլերի  կրկնման քանակի  մասին  տեղեկատվությունը  ստացվել  է  հիստորգրամի  միջոցով [85]։ ", "Հիստոգրամը  դա  թվային  արժեքների  բաշխվածության  ճշգրիտ  ներկայացումն  է, այսինքն վերցված արժեքների տիրույթում դիտարկվող թվային տվյալների պատահման քանակի  ներկայացումը։  Հիստոգրամը  հաշվարկում է  ակնթարթային  փուլի առավելագույն  և  նվազագույն  արժեքների  տարբերության  հարաբերությունը  ինչ-որ  N արժեքի  և  ներկայացնում  է  թե  քանի  արժեք  ունի  ակնթարթային  փուլը  տվյալ տիրույթում։ Նկ. 3.22-ում պատկերված է 8PSK մոդուլացված ազդանշանի ակնթարթային փուլի արժեքների հիստոգրամը։ ", "Եզրակացություններ որպես սխեմատեխնիկական  առանձնահատկությունների հաշվառմամբ ֆիզիկական  կառուցվածքի  ստացման  միջոց։  Ներկայումս  գոյություն  ունեցող ժամանակային  ուղղորդմամբ  տեղաբաշխման  մեթոդներն  ունեն  որոշակի թերություններ, և կարիք կա դրանց հետագա զարգացման: ", "սխեմայի ֆունկցիոնալ-տրամաբանական առանձնահատկությունների հաշվառման համար։ ", "Նկ. 3.23 – հաշվարկի ծրագրային կոդը Նկ.3.23-ում պատկերված կոդում ակնթարթային փուլի բաշխվածության քանակը նշված արժեքների  տիրույթներում  որոշվում  է  LabVIEW  ծրագրավորման  միջավայրի «Histogram  VI»  վիրտուալ  գործիքի  միջոցով [86]։  Այնուհետև  հաշվարկվում  է հիստոգրամի  հաջարդականության  միջին  արժեքը։  Հաջորդականության  բոլոր անդամները  ներմուծվում  են  For  օղակման  մեջ,  որտեղ  կատարվում  է  հիստոգրամի հաջորդականության  յուրաքանչյուր  անդամի  համեմատությունը  հաշվարկված  միջին արժեքի հետ և ելքում ստացվում են այն արժեքները, որոնք մեծ են այդ միջին արժեքից։ "], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraph_source_docs": [1, 2, 2, 2, 4, 3, 4, 2, 1, 2, 1, 1, 1, 1, 3, 0, 2, 2, 1, 1, 3, 3, 2, 2, 3]}
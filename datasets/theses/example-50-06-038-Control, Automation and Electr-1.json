{"paragraph_source_docs": [4, 4, 1, 0, 1, 3, 1, 3, 1, 1, 3, 4, 1, 1, 1, 1, 3, 2, 0, 1, 4, 4, 1, 1, 2, 1, 4, 1, 2, 3, 0, 0, 4, 1, 0, 2, 1, 1, 0, 0, 1, 2, 2, 2, 0, 0, 2, 1, 3, 0], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraphs": ["Այսպիսով,  նանոչափական  հիշող  սարքերի  համար  թեստային լուծումներ գեներացնող  Բ\"Ո_  կոպիլյատորների  նախագծման  բնութագրերի  արագ  գնահատման մեթոդի  մշակման  խնդիրը  շարունակում  է  մնալ  արդիական:  Ավելին,  ներկառուցված հիշողությունների  ՀՆԹՅ-ի  բարդացման  պատճառով  բարդանում  է  նաև  Բ\"Ո_ կոմպիլյատորների  հիերարխիան  և ի  տարբերություն նախկին  կոմպիլյատորների  առաջ է  գալիս  ք^\"Ո_  կոմպիլյատորների  ամբողջ  հիերարխիայի  նախագծման  բնութագրերի արագ գնահատման  խնդիրը: ", "Նանոտեխնոլոգիայի  անցման  հետևանքով  ավելանում  է  ԲՎՀ-ում  ներկառուցված հիշողությունների քանակը'  հանգեցնելով ՀՆԹՅ-ի  անհրաժեշտության  մեծացմանը:  Այս պարագայում  կարևոր  է  դառնում  ոչ  միայն  նախագծումից  հետո  բնութագրերի  արագ գնահատումը,  այլ նաև շատ  կարևոր  է մինչ նախագծելը  ինֆորմացիա  ստանալ ՀՆԹՅ- ի  զբաղեցրած  մակերեսի  և  հզորության  սպառման  վերաբերյալ:  Այղ  ինֆորմացիան հնարավորություն  կտա  հասկանալ,  թե  ինչպես  է  պետք  բաշխել հիշողության  խմբերը ԲՎՀ-ում' մինիմալ մակերես և հզորության սպառում ապահովելու նկատառումներով: Դա իրականացնելու  համար  անհրաժեշտ  է  ներկառուցված  հիշողությունների  ՀՆԹՅ-ի նախնական  պլանավորման  մեթոդ,  որը  պետք  է  նախապես  ունենա  ինֆորմացիան տվյալ  կոնֆիգուրացիայով  ՀՆԹՅ-ի  նախագծման բնութագրերի  վերաբերյալ: ", "Ընդհանուր  դեպքում,  հիշողությունը  նկարագրող  մոդելը  բաղկացած  է  երկու  մասերից՝ հիշողության  վարքագծային  և  կառուցվածքային    մասերից  [11]:  Այս  աշխատանքի սահմաններում  մենք  կդիտարկենք  միայն  հիշողության  մոդելի    կառուցվածքային - 42 - մոդելի  գեներացման  հետ  կապված  խնդիրները:  Կառուցվածքային  մոդելը  կազմող կառուցվածքային  խճողման  տիպերը  և  դրանց  հատկությունները  մանրամասնորեն ներկայացված են [11]-ում: Թվարկենք կառուցվածքային խճողումներից մի քանիսը՝ բառային և բիթային գծերի միջև, Նշենք,  որ  հիշողության  մոդելի  կառուցվածքային  խճողումների  տրոհումը  տեսակների թույլ  է  տալիս  արդյունավետ  կերպով լուծել  հիշողությունների  թեստավորման, ախտորոշման և նորոգման խնդիրները՝ օգտագործելով միայն այդ պահին  պահանջվող, որոշակի կառուցվածքային միավորների խումբը: ", "Առավելություններ։ ", "Հետազոտությունների  արդյունքում՝  ՀՍ-ի  կոմպիլյատորներում  կառուցվածքային մոդելի  ներկայացման  ձևաչափ  է  ընտրվել  սցենարների    նկարագրման  նպատակով ստեղծված  TCL  (Tool  Command  Language)  լեզուն, իսկ  հիշողության  նմուշների կառուցվածքային մոդելի նկարագրության համար օգտագործել է  տեքստային ձևաչափը [11]:  TCL  ծրագրավորման լեզուն  մեծ  տարածում  ունի  էլեկտրոնային  սարքեր նախագծող  ընկերություններում  և լայնածավալ  օգտագործվում է  սարքերի թեստավորման  բնագավառում՝  որպես թեստավորման սցենարներ նկարագրող գործիք [28]:  Մինչ  TCL  լեզուն  օգտագործելը  հիշողության  կոմպիլյատորներում    խճողման մասին  ինֆորմացիան  ներկայացվում  էր  բազմաթիվ  աղյուսակների  տեսքով՝  DOC  կամ TXT  ֆայլերում:  Ընդհանուր  առմամբ,  մուտքային  տվյալների  DOC ֆայլերում աղյուսակային  ներկայացումը  անհարմար  ձևաչափ  է  հանդիսանում  ավտոմատացման Compiler information MIG Graphic tool Compiler scramble.tcl file Նկար 1.22.   Հիշողության  կոմպիլյատորի խճողման ֆայլի  գեներացումը համար:  Բայց  մյուս  կողմից  TCL  լեզվով  հիշողության  խճողումների  տեսակները նկարագրելը (ծրագրավորելը),  այնուհետև  այդ  մոդելում  ծրագրային  սխալների վերացումը իր հերթին, բարդ գործընթաց է և նախագծող ճարտարագետից պահանջում է բարձր  որակավորում  և  հատուկ  գիտելիքների  առկայություն:  Հիշողության  խճողման ինֆորմացիայի  ստանդարտացման  և  ներդրման  աշխատանքների  սահմաններում՝ ճարտարագետի  աշխատանքը  հեշտացնելու  նպատակով  ստեղծվել  է  կառուցվածքային մոդելի  գեներատոր  ԱՀ    MIG  (անգլերեն՝  Memory  Information  Generater)  ծրագրային գործիքը [17] (Տես՝  նկ.  1.22),  որը  հնարավորություն  է  տալիս  գրաֆիկական - 44 - ինտերակտիվ  միջավայրում  նկարագրել  հիշողության  կոմպիլյատորի  խճողման տեսակները  և  այնուհետև  ավտոմատ ձևով գեներացնել նկարագրությանը համապատասխան  TCL  կոդը՝  scramble.tcl  ֆայլը:  MIG  ծրագրային  ԱՀ-ի  նկարագրումը դուրս    է  այս    աշխատանքի  սահմաններից,  բայց  հարկ  է  նշել,  որ  այն  (MIG  ԱՀ-ը) հիշողության    խճողման  ինֆորմացիայի  ստանդարտացման  [11]  և  կիրառման  առաջին արդյունքն է հանդիսանում: ", "Նկ. 2.6 Բազմաշերտ նեյրոնային ցանց Այստեղ՝ որտեղ ն  համապատասխան  շերտի  նեյրոնների  համարներն  են,  իսկ  - շերտի համարը: ", "Դիտարկենք  կառուցվածքային  խճողումների  տեսակներից  մի  քանիսը:  Մոդելների ներկայացման ձևերն են.  աղյուսակային, թվային արտահայտություններ, բանաձևերով, գրաֆիկների  տեսքով:    Մինչ  խճողումների  դասակարգումը  և  նկարագրման  ստացման ավտոմատացումը,  հիշողության  կոմպիլյատորներում,  հիշողության  կառուցվածքի խճողման  մասին  ինֆորմացիան  ներկայացվում  էր  տարբեր  տեսակի  աղյուսակների միջոցով: ", "•  Վերահսկվողն  այն  ուսուցման  տեսակն  է,  որի  դեպքում  ցանցին  տրվում  են մուտքային  և  պահանջվող  ելքային  արժեքների  ուսուցողական  զույգերի  խմբեր: ", "Ավանդական «Մարշ» տեստային ալգորիթմները բաղկացած են «Մարշ» վերջավոր թվով հաջորդականություններից,  որոնք  կատարվում  են  հիշողության  բջիջներից  կազմված բառերի  համար`  հասցեների  որոշակի  աճման  (0-ական  հասցեից    մինչև  մաքսիմալ հասցե),  նվազման  (մաքսիմալ  հասցեից  մինչ  0-ական  հասցե)  հաջորդականությամբ: ", "Անսարքությունների  դասերը  [25],  որոնց  համար  նախագծվում  էին  այդ  ալգորիթմները, դրսևորվում են հիշողության հասցեներին դիմելիս կանոնավոր հաջորդականությամբ: [24]- - 45 - ում  ժամանակակից հիշողության  սխեմաներում  առաջացող  անսարքությունների որոշակի  դասերի  հայտնաբերման  համար  առաջարկվում  է  ալգորիթմ,  որը  պետք  է կիրառի  արժեքի  պահպանման  և  ընթերցման  գործողությունները  ֆիզիկապես  զույգ (կենտ)  համարներ  ունեցող  տողերի  (սյուների)  վրա  գտնվող  բջիջներում:  Նման  տիպի ալգորիթմների  ճշգրիտ  իրականացման  համար  անհրաժեշտ  է  իմանալ  հիշողության տրամաբանական  և  ֆիզիկական  հասցեների  համապատասխանությունը:  Հիշողության հասցեի  խմբի  (address  bus)  մուտքերին  միացած  ազդանշանները  տրամաբանորեն բաժանվում  են  երկու  մասի.  մի  մասը  մուտք  են  հանդիսանում  բջիջների  երկչափ զանգվածում  ֆիզիկական  տողերի, իսկ մյուս մասը`  ֆիզիկական  սյան ապակոդավորման  սխեմաների  համար:  Տրամաբանական  հասցեի  մյուս  մասը,  որը մուտք  է  հանդիսանում  ֆիզիկական  սյան  ապակոդավորող  սխեմայի  համար, կանվանենք  տրամաբանական  սյան  հասցե:  Հասցեների  խճողումը  նկարագրող ֆունկցիան կարելի է ներկայացնել հետևյալ տեսքով (12). ADR(BKj, CMi,a1,a2,…amax) = Fadr {N, C, P1,P2,…,Pm}      , որտեղ (12) BKj – բանկերի քանակն է՝ հիշողության կոմպիլյատորում, CMi -  սյուների  ապակոդավորիչի  գործակիցներն  են՝  հիշողության կոմպիլյատորում, a1,a2,…amax  - հիշողության տրամաբանական հասցեներն են P1,P2,…,Pm - հիշողության ապակոդավորիչի Ֆիզիկական հասցեներն են: ", "•  Չվերահսկվող է կոչվում այն ուսուցման տեսակը, որի դեպքում ցանցին տրվում է մուտքային տվյալների խումբ և ցանցը դրանց շրջանակում պետք է ինքնուրույն հայտնաբերի  որևէ  նմուշ:  Այս  տեսակը  հաճախ օգտագործվում է խորհրդատվական  ալգորիթմներում,  ելնելով  նրանց  կանխագուշակման ունակությունից:  Դրանք  գուշակում  են  օգտագործողի  նախապատվությունները ելնելով  տվյալ օպերատորին համապատասխան խմբավորված օպերատորների նախապատվություններից: ", "Եզրակացություն  առաջին  գլխի  վերաբերյալ ստացվել  է,  որ  ք^\"1\"Լ  կոմպիլյատորների  նախագծման  բնութագրերի  գոյություն  ունեցող արագ  գնահատման  մեթոդները  հաշվի  չեն  առնում  նանոտեխնոլոգիային  բնորոշ առանձնահատկությունները'  հանգեցնելով գնահատման  սխալի  էական  աճին: ", "Հասցեների  խճողումը  ներկայացնող  TCL  կոդը  իրենից  ներկայացնում  է  պրոցեդուրա, որի  աշխատանքի  շնորհիվ  վերադարձվում  է  մասնավոր  դեպքի՝  հիշողության  նմուշի, հասցեների  խճողումը  բնորոշող  ազդանշանների  անուններով  ցուցակը,  օրինակ  {YA0 YA1 XA0 XA1 XA2 XBK0}: ", "- 47 - proc address_scramble { } { global scramble_db Տողերի խճողումը Հիշողության կոմպիլյատորի տողերի խճողումը նկարագրող ֆունկցիայի տեսքն է՝ Ri = Frow{Pn} ,        որտեղ (13) Ri – նմուշի տրամաբանական տողի հասցեն է և  i  {0,1,…, max}, Pn - նմուշի ֆիզիկական տողի հասցեն է և  n  {0,1,…, max}, Աղյուսակ 1.6-ում տրված է տողերի խճողման ներկայացման աղյուսակային ձևը: ", "Տողերի խճողման աղյուսակային ներկայացման ձևը Աղյուսակ 1.6 Տրամաբանական Ֆիզիկական համարը համարը Row 0 Row 1 Row 2 Row Maximum Այն  իրենից  ներկայացնում  է  տրամաբանական  և  ֆիզիկական  տողերի  համարների պարզագույն    արտապատկերումը:  Ինչպես  արդեն  նշել  ենք,    տողերի  խճողման պատճառ են հանդիսանում  տողերի  ապակոդավորիչի կառուցվածքային յուրահատկությունները:    Տողերի  խճողման  աղյուսակային  ներկայացման  ձևաչափը նույնպես  երկկողմանի  է  (տրամաբանականից  դեպի  ֆիզիկական  և  հակառակը):  Ի տարբերություն աղյուսակային ներկայացմանը, TCL տրվող պրոցեդուրան միակողմանի է և հետևաբար պետք է ունենալ տողերի խճողումը նկարագրող երկու իրարից անկախ՝ տրամաբանականից  դեպի  ֆիզիկական  և  ֆիզիկականից  դեպի    տրամաբանական, անցման պրոցեդուրաներ. ա) Տողերի խճողման տրամաբանականից դեպի ֆիզիկական TCL (row_scramble_logical_to_physical) պրոցեդուրան  վերադարձնում  է  հիշողության - 48 - նմուշի  ֆիզիկական  տողերը  ներկայացնող  համարների  հաջորդականություն՝ ենթադրելով, որ տողերի տրամաբանական համարները կանոնավոր ձևով աճում են հիշողության զանգվածի ֆիզիկական ներքևի մասի առաջին տողը օրինակ {0 1 2 3 7 proc row_scramble_logical_to_physical { log_row } { բ)  Տողերի  խճողման  ֆիզիկականը  դեպի  տրամաբանականը  ներկայացնող  TCL (row_scramble_physical_to_logical)  պրոցեդուրան  ֆիզիկական  տողի  համարի    հիման վրա գեներացվում է տրամաբանական տողի համարը: ", "proc row_scramble_physical_to_logical { phys_row } { global scramble_db global scramble_db Սյուների խճողումը Սյուների  խճողում  հասկացության  տակ  մենք  հասկանում  ենք  հիշողության զանգվածի սյուների տրամաբանական և ֆիզիկական համարների արտապատկերումը: ", "Ցանցի  նեյրոնները  միմյանց  կապող յուրաքանչյուր  կապուղու  կշռի  արժեքը թարմացվում է հետևյալ հավասարմամբ՝ Հավասարում (2.18)-ում՝  -ն ուսուցման արագության գործակիցն է: Ելքային շերտի համար -ի  ածանցյալը  ըստ -ի  կարելի  է  հաշվարկել  պարզ  դիֆերենցիալ հավասարմամբ՝ որտեղ որտեղ Այսպիսով ստանում ենք՝ Ելնելով հավասարում (2.23)-ից ելքային շերտի համար կունենանք՝ որից կհետևի, որ մնացած շերտերի համար համապատասխանաբար կստանանք՝ Հավասարում (2.18)–ից հետևում է, որ յուրաքանչյուր հաջորդ շերտերի համար կշռի փոփոխությունը կբնութագրվի համապատասխանաբար հետևյալ հավասարումներով՝ ԱՆՑ-ի  միջոցով  ՄԱՆ-ի  խնդրի  լուծման  համար  ցանցի  յուրաքանչյուր  մուտքին տրվում  է  մեկ  հաշվարկված  հիմնական  բնութագրող  հատկանիշ,  ինչի  արդյունքում նեյրոնների  համապատասխան  ակտիվ  և  պասիվ  վիճակների  հաշվարկների  և համադրությունների  միջոցով  ակտիվանում  է  ելքային  շերտի  այն  նեյրոնը,  որը համապատասխանում  է  նույնականացված  մոդուլացման  տեսակին:  Անհրաժեշտ  է հաշվի  առնել  ցանցի  մուտքին  տրված  բնութագրող  հատկանիշների  քանակը,  քանի  որ դրանց  քանակի  ավելացումը  և  նվազեցումը  անմիջական  ազդեցություն  ունի հաշվարկների  բարդության  և  ուսուցման  տևողության  վրա:  Բազմաշերտ  ԱՆՑ-ի դեպքում ցանցի կառուցվածքի որոշման հստակ մեխանիզմ գոյություն չունի: Խորհուրդ է տրվում թաքնված շերտերի և դրանց բաղկացուցիչ  մաս կազմող նեյրոնների քանակը համապատասխանեցնել  տվյալ  խնդրին:  Դրանց  քանակը  պետք  է  համապատասխանի խնդրի բարդությանը, քանի որ դրանց անհրաժեշտ քանակի պակասի դեպքում կարող է տուժել  նույնականացման  որակը,  իսկ  ավելցուկի  դեպքում՝  երկարում  է  ուսուցման տևողությունը:  Ուսուցման որակի բարելավման համար բավականին լայն հնարավորություններ է ստեղծում դրանց քանակի ինքնակազմակերպումը: ", "Ինչպես  արդեն  նշվել  է  1.2  բաժնում,  ֆիզիկական  և  տրամաբանական մակարդակների միջև փոխկապվածության մյուս կարևոր բաղադրիչը մեծ տեսակարար էներգասպառմամբ  պայմանավորված ջերմային գրադիենտի մեծացումն է կիսահաղորդչային  բյուրեղի  վրա,  որի  դեմ  պայքարի միջոց  կարող  է  ծառայել կիսահաղորդչային  բյուրեղի  վրա  ջերմային  դաշտի  համահարթեցումը  տարրերի տեղաբաշխման  փուլում  [3,  25]:  Այս  խնդիրը  առավել  կարևորություն  է  ձեռք  բերում եռաչափ ԻՍ-երի նախագծման դեպքում, որոնք թույլ են տալիս իրագործել ավելի բարդ ֆունկցիոնալությամբ  համակարգեր՝  առանց  մեծացնելու  առանձին  բյուրեղների չափսերը  [25]:  Այս  դեպքում,  որպես  կիսահաղորդչային  բյուրեղի  վրա  տարրերի տեղաբաշխման  մեթոդ,  կարող  է  ծառայել  է  տեղաբաշխման  հաջորդական  ալգորիթմը՝ հզորությունները  հաշվի  առնելով:  Որպես  տեղաբաշխման  չափանիշ  կարող  է  հանդես գալ բյուրեղի ջերմային դաշտի տոպոլոգիական համահարթեցման չափանիշը [3, 25]` ,                                   (1.15) որտեղ և -  ն -րդ  և -րդ  տարրերի  հզորություններն  են; -  ն՝ -րդ  և -րդ տարրերի  դիրքերի  միջև  եղած  հեռավորությունը;  N  –  ը՝  տեղաբաշխվող  տարրերի քանակը։ ", "•  Մեթոդի իրականացման համար  փոստային սերվերում հավելյալ կարգավորումների  կարիք  չկա։  Համակարգը  յուրաքանչյուր  օգտատիրոջ  փոստարկղի ինֆորմացիան կարդում է ստանդարտ պրոտոկոլների օգնությամբ։ ", "Բիթային  գծերի  դասավորվածությունը հիշողության  զանգվածի  մեկ  տողում Հիշողության զանգվածը WL Բջիջ 1 Բջիջ 2 Մ/Ե i Մ/Ե i+1 Նկար 1.23. Մ/Ե բիթային գծերի բաշխումը կառուցվում է տողում բջիջների բոլոր բիթային գծերի բաշխման միջոցով  (Տես՝ նկ. 1.23), որտեղ i=(0,  1,…(NB-1)):  Համաձայն  նկ.  1.8-ի  և  աղ.  1.1-ի,  բիթային  գծերի դասավորվածությունը ՀՍ-ի բջջում նկարագրվում  է բանաձևով՝ , որտեղ (15) Vlogic  - բջիջի տրամաբանական արժեքն է Vphysical – բջիջի բիթային գծի ֆիզիկական արժեքն է Իսկ բիթային գծերի բաշխվածությունը զանգվածի տողում կնկարագրվի բանաձևով՝ RBL = {FBL0, FBL1,… FBL(#PC-1) (16) PC  -  դա  հիշողության  սյուների    քանակն  է  և  հաշվարկվում  է  ըստ  (3)  բանաձևի:  ՀՍ-ի տողում  T և B բիթային գծերի հնարավոր չորս տեսակի բաշխվածությամբ՝ ա) {TB TB TB TB},  բ)  {BT  BT  BT  BT},  գ)  {TB  BT  TB  BT},  դ)  {BT  TB  BT  TB}:  Մ/Ե  T  և  B բիթային  գծերի բաշխվածությունը յուրահատուկ է յուրաքանչյուր հիշողության նմուշի համար: Մ/Ե T և - 51 - physicalicphysicalicBLVtoinverseisVifBBVtoequalisVifTBFloglog,, B  բիթային  գծերի  դասավորության  խճողման  նկարագրման  աղյուսակային  ձևը ներկայացված է աղյուսակ 1.8-ում: ", "Իսկ  հիշողության  բառերի  քանակի  աճի  պատճառով  առաջանում  է  հիշողության սյուների  և/կամ  տողերի  վերծանիչի  կարգայնության  2  հիմքով  լոգարիթմական  աճ: ", "Ուստի,  RTL  կոմպիլյատորի  մուտքային  պարամետրի  արժեքի  դրական  փոփոխության արդյունքում  շաբլոններում  համապատասխան  ապարատային  կառուցվածքների կարգայնությունը  մեծանում  է,  որի  հետևանքով  մեծանում  է  նաև  գեներացվող  նմուշի մակերեսը  [39]: ", "proc io_bl_mirroring { phys_IO phys_col } { global scramble_db Սյուների ոլորապտույտների բաշխվածություն ՍՊԴՀՍ-ում  սյուների  ոլորապտույտների  կիրառման  դրդապատճառները  նույնն են,  ինչ  որ  բիթային  գծերի  ոլորապտույտների  օգտագործումը՝  հիշողության  սարքի աշխատանքի  հուսալիության  բարձրացումը  շնորհիվ  հիշողության  բիթային  գծերի վրայի  ունակության  նվազեցման  (Տես  նկ.  1.18):  Ի  տարբերություն  բիթային  գծերի ոլորապտումի, սյուների ոլորապտումը իրականցվում է ոչ միայն անմիջական հարևան սյուների  միջև,  այլև  սյուների  միջև,  որոնք  գտնվում  են  մի  միյանց  նկատմաբ    մի  քանի սյուն շեղվածությամբ:  Լինելով  ավելի  արդյունավետ,  քան բիթային  գծերի ոլորապտումը՝    սյուների  ոլորապտումի  իրականացումը  տոպոլոգիայում  շատ  ավելի բարդ է, և այդ պատճառով այն հազվադեպ է   օգտագործվում: ", "I/O i - 52 - Բջիջ 1 Բջիջ 2 WL WL Բջիջ 1 Բջիջ 2 Նկար 1.24.  Սյուների պարզ ոլորապտումը Նկար  1.24-ում  ներկայացված  է  սյուների  ոլորապտման  պարզ  օրինակը:  Նկարում պատկերված  ոլորապտումը կոչվում է պարզ, քանի որ այն կատարվում է անմիջական հարևան  սյուների  միջև  և  առանց  բիթային  գծերի  ոլորապտման:  Աղյուսակ  1.9-ում ներկայցված է սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը, Աղյուսակ 1.9 Սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը Ոլորապտվող I/O i տողի հասցեն Column0  Column1  …  Column(CM-1) <Row1> <Row2> <Rowk> որտեղ <Row1> ցույց է տալիս այն տողը, որից վերև կատարվել է սյուների ոլորապտումը, իսկ  «Column»  դաշտում  նշվում  է՝  համապատասխան  սյան  համար՝  կ՞ա  ոլորապտում, թ՞ե ոչ, և եթե ընթացիկ սյան համար կա ոլորապտում, ապա նշվում է այն սյան համարը, որի  հետ  կատարվել  է  ոլորապտումը:  Հեշտության  համար,  սյուների  ոլորապտման զույգերը  կարող  են  նկարագրվել  բանաձևով:  Օրինակ՝  սյուների  ոլորապտման  հասցեն կարող է հաշվարկվել համաձայն բանաձևի՝ Cj,  Cj  , որտեղ  Cj ոլորապտըտվող սյան - 53 - համարն է, իսկ  ՝ շեղման հաստատուն գործակիցն է, այդ ժամանակ  Cj   ցույց կտա այն  սյան  հասցեն,  որի  հետ  կատարվել  է    ոլորապտումը:  Հասկանալի  է,  որ  սյուների ոլորապտումը  կարող  է  իրականացված  լինել  հիշողության  զանգվածի  մի  քանի  {1, տարբեր Մ/Ե հանգուցներում սյուների նկատմամբ նույնպես: ", "Ստանդարտ բջիջների գրադարանի տվյալներից օգտագործվում են՝   տարրերի   երկրաչափական չափսերը՝ , i= , որտեղ և համապատասխանաբար տարրի երկարությունը և բարձրությունն են,   տարրերի  տեսակարար  դինամիկ  հզորությունները  գրադարանի անվանական արագագործության դեպքում՝ ,   թվային  ստանդարտ բջիջների  գրադարանի  աշխատանքային հաճախությունը: ", "St (i) = Fst(Dk , Pn , Sm) ,   որտեղ (17) Dk  - գոտու ուղղվածությունը՝ հորիզոնական կամ ուղղահայաց, Pn – գոտու դիրքը հիշողության զանգվածում՝ տողի (սյունի) համարը, Sm  – գոտու չափսը (um)՝ երկարությունը (բարձրությունը) - 54 - Աղյուսակ  1.10-ում  ներկայացված  է հիշողության  գոտիների  բաշխման աղյուսակային ձևը: ", "Վերը  նկարագրվածից  հետևում  է,  որ  RTL  կոմպիլյատորների  մուտքային պարամետրերի  և  նախագծման  բնութագրերի  միջև  գոյություն  ունեն  որոշակի ֆունկցիոնալ կախվածություններ  [39-41]: ", "Աղյուսակ 1.11 Նմուշի գոտիների բաշխումը Անվանումը Ուղղվածությունը Դիրքը Չափսը (um) Ձախ_եզր հորիզոնական սյուն 0 Աջ_եզր հորիզոնական սյուն 1024 Ներքևի_եզր ուղղահայաց տող 0 Վերևի_եզր ուղղահայաց տող 512 Գոտի_1 Գոտի_2 Գոտի_3 Գոտի_4 հորիզոնական սյուն 256 հորիզոնական սյուն 512 ուղղահայաց տող 128 ուղղահայաց տող 256 Հիշողության  «strap_location»  պրոցեդուրան  վերադարձնում  է  նմուշում  գոտիների բաշխվածությունը նկարագրող տվյալների մի զանգված՝ {Ձախ_եզր    -1  0  58.2    Աջ_եզր  -1  1024  3.1  Ներքևի_եզր  1  0  87.12  Վերևի_եզր  1  512  4.7 Գոտի_1 -1 256 2.5 Գոտի_2 -1 512 2.5 Գոտի_3 1 128 24.5 Գոտի_4 1 256 24.5 }: ", "հաջորդականության: ", "ԱՆՑ-երի  զարգացումները  նշանակալի  հեռանկարներ  են  ստեղծում  ՄԱՆ  խնդրի լուծման  ալգորիթմների  բարելավման  և  զարգացման  համար։  Հիմնվելով  վերոնշյալ առավելությունների  և  առանձնահատկությունների  վրա  ԱՆՑ  համարվում  է  այս աշխատանքի  հիմքում  ընկած  խնդրի լուծման  համար  առավել  արդյունավետ, նպատակահարմար, արդիական և արագ աշխատող մեթոդը։ ", "Նմանատիպ  համակարգ  իրականացված  է  նաև  Google  ընկերության  կողմից` Firebase Cloud Messaging (FCM18), որը օժտված է բազմաթիվ առավելություններով, սակայն SMS  հաղորդագրություններ  ուղարկելու  հնարավորություն  չի  տրամադրում։  FCM-ը ծրագրային  հավելվածների  ինժեներներին  տրամադրում  է  ծանուցումների  ուղարկման ծառայություններ տարբեր պլատֆորմների համար, ներառյալ Android, iOS և վեբ։ ", "Amazon SNS-ը և Google FCM-ը ամպային ծսռայություններ են (SaaS – Software as a service19)  ՝  նախատեսված  ծրագրային  համակարգերում  կիրառության  նպատակով։ ", "Ինչպես նշվել է 1-ին գլխում հարթ տեխնոլոգիայից  ՖինՖԵՏ  տեխնոլոգիայի  անցման .  . ՀՆԹՅ֊ի Աոանձին. . . . . . . . . . . . կտրուկ բազային համար բառում  բիթերի ՖինՖԵՏ անցման դեպքում ՀՆԹՅ֊ի Տարրերի  քանակի  համեմատական գնահատականը  հարթ  և ՖինՖԵՏ տեխնոլոգիաների  դեպքում Նկար  12 Տարրերի քանակի համեմատական գնահատականները հարթ և  ՖինՖԵՏ տեխնոլոգիաների դեպքում Նկար  13-ում  ներկայացված  է  ներկառուցված  հիշողությունների  ՀՆԹՅ֊ի  Wrapper կոմպոնենտի  բազային  կոմբինացիայի  համար  հզորության  սպառման  համեմատական անցման  դեպքում ՖինՖԵՏ անցման դեպքում Հզւ բա դյա ն  սպաոմսյէյ  համհմւ զնահատակ }  հարթ՛ 1ւ  ՖինՖԵՏ  տեխնոլոգիաների դոպ քոա D.Z5DC OJOOO D.050D Ջ. Նկար  13 Տարրերի քանակի համեմատական գնահատականները հարթ և  ՖինՖԵՏ  տեխնոլոգիաների դեպքում հիշողություններում համար ՀՆԹՅ֊ի Algorithm  Programmability)  հետ  կապված  բնութագրերի  վարքագծի  փոփոխությունները ՀՆԹՑ֊ը Ինչպես  I դեպքում հիշողությունների  թեստավորման  դեպքում:  Մեր  իրականացված հետազոտությունների լուծումներ գեներացնող RTL  կոմպիլյատորների  նախագծման  բնութագրերը  դրսևորում  են  գծային կամ  պոլինոմիալ (անգլերեն'  polynomial)  վարքագիծ: ", "- 57 - Նկար  1.25-ում  ներկայացված  է  նմուշի  խճողման  ինֆորմացիայի  օգտագործման փորձերից  մեկի  արդյունքը    պատկերող  գրաֆիկը:    Փորձերի  առաջին  դեպքում  «SE» Test coverage Նկար 1.25.   Խճողման ինֆորմացիայի օգտագործման ազդեցությունը թեստավորման արդյունավետության վրա (scrambling  enabled)  թեստավորման  ալգորիթմը  կազմված  էր՝  հաշվի  առնելով  նմուշի խճողումների  ինֆորմացիան,  իսկ  երկրորդ  դեպքում՝  «SNE»  (scrambling  NOT  enabled) առանց այդ ինֆորմացիայի:    Նկար 1.25-ից երևում է, որ թեստավորման յուրաքանչյուր դեպքում  խճողումով՝  «SE»,  թեստերի արդյունավետությունը  հավասար  է  կամ գերազանցում  է  առանց  խճողումով  թեստերի  արդյունավետությանը:  Կատարված հետազոտությունների  արդյունքում  պարզ  դարձավ,  որ  հիշողության  նմուշի թեստավորման  ընդհանուր  արդյունավետությունը  աճում  է  30%-ով,  երբ  հիշողության թեստավորման  ալգորիթմը  իր  աշխատանքի  ընթացքում  հաշվի  է  առնում  հիշողության նմուշին  բնորոշ՝  միայն  այդ  նմուշին  յուրահատուկ    կառուցվածքային  խճողումների մասին ինֆորմացիան  [16], [25]: ", "Ուսումնասիրության  արդյունքների  վերլուծության  նպատակով  կիրառվել  են դիտարկված համակարգերին առավել բնորոշ հետևյալ հատկանիշները՝ Նամակ  ուղարկողին  հնարավորություն  է  տրվում  հասցեատերերին  ծանուցել ուղարկված նամակի մասին։ ", "Այսպիսով,  ԻՍ-երի  ավտոմատացված  ֆիզիկական  նախագծման  փուլում սխեմատեխնիկական  առանձնահատկությունները  հաշվի  առնելու  հիմնական  միջոց կարող  է  ծառայել  տարրերի  տեղաբաշխման  խնդրի  լուծման  այնպիսի  միջոցների մշակումը,  որոնց  դեպքում  հաշվի  կառնվեն    սխեմայի  ֆունկցիավորման  վրա  ազդող առավել կարևոր պարամետրերը: ", "Մշակվել են.  կառուցվածքային  խճողումների  դասակարգումը  և կառուցվածքային  մոդելի  ներկայացման  ձևերը:  Իրականացվել  է  տարբեր տեխնոլոգիաների և  տեսակների հիշողության կոմպիլյատորների կառուցվածքների  հետազոտումը,  և  ստացված  տվյալների  հիման  վրա  գեներացվել են այդ կոմպիլյատորների կառուցվածքային մոդելները: ", "- 59 - ՄՈԴԵԼԻ ՍՏՈՒԳՄԱՆ ԵՎ ՆՄՈՒՇԻ  ՄՈԴԵԼԸ GDSII ՁԵՎԱՉԱՓԻՑ ԴՈՒՐՍԲԵՐՄԱՆ ԱՎՏՈՄԱՏԱՑՎԱԾ ՀԱՄԱԿԱՐԳԵՐԸ ավտոմատացված համակարգ Հիշողության կոմպիլյատորի կառուցվածքային խճողումների TCL պրոցեդուրաները  նկարագրվում  և  պահվում  են  կոմպիլյատորի  համար  անբաժանելի մաս կազմող scramble.tcl ֆայլում՝ մոդելում: scramble.tcl ֆայլը ստեղծվում է հիշողության կոմիպիլյատորը  նախագծող  ճարտարագետի  կողմից,  քանի  որ՝  նախագծման  փուլում, միայն նախագծի ճարտարագետն է հանդիսանում կոմպիլյատորի խճողումների մասին ինֆորմացիայի  միակ  ստույգ  աղբյուրը:  ՆՀՍ-երի  ՂԱՀ-ում  կառուցվածքային  մոդելի գեներացման գործընթացը ներկայացվել է նկ. 1.22-ում: ", "No.9, 2018, pp. 1991-2006 տրամադրած ծառայությունները հնարավոր է կիրառել այլ ծրագրային համակարգերում։ ", "ծանուցման  հնարավորություն։ ", "Ճիշտ է՞ Այո Ավարտել Նկար 2.1. Կառուցվածքային մոդելի ստուգման SIV ԱՀ-ի աշխատանքի նկարագրությունը ինֆորմացիան ստուգող հոսք (անգլերեն՝ memory Structural Information Verification (SIV) flow): Հետագայում տեքստում կoգտագործենք SIV հապավումը: ", "- 42 - ՀԱՇՎԱՌՄԱՄԲ ԻՆՏԵԳՐԱԼ ՍԽԵՄԱՆԵՐԻ ԱՎՏՈՄԱՏԱՑՎԱԾ ՖԻԶԻԿԱԿԱՆ ՆԱԽԱԳԾՄԱՆ ՄԵԹՈԴՆԵՐԻ ՄՇԱԿՈՒՄԸ սխեմատեխնիկական առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց ԻՍ-  երի  տեխնոլոգիական  չափերի  նվազեցման  և  դրանց  ինտեգրման  մեծացմանը զուգընթաց  միջմիացումները  դառնում  են  թվային  ԻՍ-երի  արագությունը  որոշող գերիշխող  գործոն:  Նանոչափային  թվային  ԻՍ-երում  ազդանշանի  տարածման գումարային  հապաղումը միջմիացումներում  կարող  է  հասնել  տասնյակ  և հարյուրավոր  տրամաբանական  փականների  ընդհանուր  հապաղմանը  [6]:  Եթե տրամաբանական  բջիջներում  հապաղումները  հայտնի  են  դառնում,  երբ  ընտրվում  է ստանդարտ  բջիջների  որոշակի  գրադարան,  որի հենքով  կատարվում է տրամաբանական  սինթեզը,  ապա  միջմիացումներում  հապաղումները  որոշվում  են միայն  ֆիզիկական  նախագծման  արդյունքում,  այսինքն՝  տարրերի  տեղաբաշխումից  և միջմիացումների ծրագծումից հետո: ", "Առաջին մոտավորությամբ՝ միջմացումների հապաղումները որոշվում են RC կապի գծերի  պարամետրերով,  որոնք,  իրենց  հերթին,  հիմնականում  կախված  են  դրանց երկարությունից: Հաշվի առնելով, որ միջմիացումների ծրագծման արդյունքները, որոնք որոշում  են  դրանց  վերջնական  երկարությունները,  մեծապես  կախված  են  բջիջների տեղաբաշխման  արդյունավետությունից,  ակնհայտ  է  դառնում,  որ  ծրագծման հաջողությունը  և  միջմիացման երկարությունը  հիմնականում  կախված են տեղաբաշխման  արդյունքներից:  Հետևաբար,  տեղաբաշխումը  կարող  է  մեծապես նպաստել սխեմայի  արագագործության  ապահովմանը:  Այդ  պատճառով, արագագործության  ապահովման  տեսանկյունից,  ներկայումս  ԻՍ-  երի  ֆիզիկական նախագծման  կարևորագույն  խնդիրներից  մեկը  տարրերի  տեղաբաշխման  ժամանակի հապաղումների հաշվառումն է, այսինքն` գլոբալ իմաստով` ֆիզիկական նախագծման - 43 - փուլում  ԻՍ-երի  աշխատանքի  սխեմատեխնիկական  առանձնահատկությունների հաշվառումը: ", "ԻՍ-երի  տարրերի  տեղաբաշխման  ժամանակ  միջմիացումների  արագագործության հաշվռման  խնդիրը  սովորաբար  անվանում  են  ժամանակային  ուղղորդմամբ տեղաբաշխում [19]:  Ներկայումս  էլեկտրոնային  նախագծման  ավտոմատացման համակարգերում  ներդրվում  են  համապատասխան  գործիքներ,  որոնք  նպաստում  են ժամանակային  ուղղորդմամբ  տեղաբաշխմանը։  Գոյություն  ունեցող  ժամանակային ուղղորդմամբ տեղաբաշխման  մեթոդները կարող են խմբավորվել  ըստ երկու դասերի ` ուղու վրա հիմնված և շղթայի վրա հիմնված [3,20,40]: ", "օգտատերերին։ ", "ծանուցում ուղարկելիս հայատառ  տեքստերը ստանդարտացված կերպով փոխակերպում  է լատինատառի՝  հասցեատիրոջ  բջջային  հեռախոսում  տեքստի ցուցադրման պրոբլեմներից խուսափելու նպատակով։ ", "Ժամանակային  ուղղորդմամբ  տեղաբաշխման  առկա  մեթոդները  կարելի  է դասակարգել երկու խմբի [3,7,20,41]՝   ՈՒղու  վրա  հիմնված  մեթոդներ,  որոնք  հաշվի  են  առնում  սխեմայի  առաջնային մուտքերից մինչև ելքերը տանող ուղիներում ազդանշանի հապաղումները: ", "  Verification  Pattern  Generator (VPG)  գործիքը  որպես  մուտք  ընդունում  է scramble.tcl ֆայլը և հիշողության նմուշի բնութագրիչ պարամետրերը: VPG -ին իր - 62 - աշխատանքի  արդյունքում  գեներացնում  է  նվազագույն  թվով  ստուգող հավաքածուներ (PAT,  SVP),  որոնց  առկայությունը  բավարար  է  տվյալ հիշողության  նմուշի  և  նրա  մոդելի  համապատասխանությունը  ստուգելու համար:  Գեներացվող  հավաքածուների  թիվը  կախված  է  ստուգող  նմուշների կառուցվածքային  խճողումների  տեսակներից,  ինչպես  նաև  հիշողության  նմուշի բնութագրիչ պարամետրերից՝ ֆիզիկական չափսերից [17]: ", "Երկշերտանի  ամպլիտուդային  DSB մոդուլացված  ազդանշանի  անալիտիկ ներկայացվումը բնութագրվում է հետևյալ տեսքով [67]՝ Այս  հավասարումից  հետևում  է,  որ  ակնթարթային  փուլը  DSB  մուդուլացման դեպքում ունի երկու արժեք՝ Քանի  որ  ազդանշանի  փուլի  գծային  կոմպոնենտի  հիմնական  ներդրողը  կրող ազդանշանն  է,  ապա  գծային  կոմպոնենտը -ն  հեռացնելուց  հետո  կստանանք ակնթարթային փուլի երկու արժեք՝ 0 և : Այնուհետև կենտրոնացնելով փուլը՝ հանելով միջին արժեքը, ստանում ենք, որ կենտրոնացնելուց և գծային կոմպոնենտը հեռացնելուց հետո,  փուլի  բացարձակ  արժեքը  հաստատուն  մեծություն  է  և  հավասար  է ,  ինչը նշանակաում  է,  որ  DSB  մոդուլացված  ազդանշանը  չունի  բացարձակ  փուլային ինֆորմացիա: Մյուս երկու դիտարկվող անալոգային մոդուցված ազդանշանների՝ SSB և FM,  ակնթարթային  փուլի բացարձակ  արժեքները  հաստատուն չեն,  ինչը հնարավորություն  է  տալիս  այս  հիմնական  բնութագրի  միջովով  տարբերակել  DSB տեսակը SSB և FM տեսակներից։ Նկ. 13-ում պատկերված է ծրագրի այն հատվածը, որն իրականացնում է -ի հաշվարկը։ ", "on-prem Ուսումնասիրության  արդյունքները  ներկայացված  են  աղյուսակ  1.1-ում: "]}
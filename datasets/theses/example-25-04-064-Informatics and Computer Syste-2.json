{"paragraph_source_docs": [1, 2, 2, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 0, 1, 1, 2], "paragraphs": ["-ի 𝑃𝑃𝑃𝑃𝑠𝑠 𝑃𝑃𝑃𝑃𝑖𝑖 ելքային  արժեքը  կարող  է  օգտագործվել  որպես մուտքային  արժեք 𝑃𝑃𝑃𝑃𝑖𝑖 հետագայում,  կամ  նեյրոնային  ցանցից  որպես  ելքային  արժեք: ", "Քանի  որ  այգորիթմը  աշխատում  է  ուղիղ  ռեժիմով  նկարահանմանը  զուգահեռ, այն  կստանա  նոր  պատկերը,  որում  առկա  է  օբյեկտը  և  կկիրառի  XOR  բիթային համենատություն  սկզբնական  պատկերի  նկատմամբ:  Հետևաբար,  կստանանք  Նկար Նկար 2.3․ XOR բիթային համենատության արդյունքը: ", "Ինչպես  գիտենք,  բիթային  XOR-ը  կատարում  է  համեմատությունը  երկու պիքսելների(բիթերի) միջև՝ արդյունքում վերադարձնելով 1, եթե երկու բիթերը տարբեր են,  և  0,  եթե  դրանք  նույնն  են:  Նկար  2.3-ում  XOR  բիթային  համենատության արդյունքում վերադարձված 1-ը արտահայտված է սպիտակ գույնով, իսկ 0-ն՝ սև: ", "Դիտարկենք այն դեպքը, երբ օբյեկտը հայտնվում է պատկերում նկարահանումը սկսելուց  ոչ  թե  սկզբում,  այլ  երկար  ժամանակ  անց(օր.  4  ժամ  անց),  երբ  պատկերում արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների  գունային արժեքները  փոխված  են:  Այս  դեպքում  XOR  բիթային  համենատության  արդյունքում վերադարձվում  է  0  բոլոր  պիքսելների  համար,  և  արդյունքը  կստացվի  լիովին  սև պատկեր,  օբյկետը չի  հայտնաբերվի:  Այսպիսով՝  ցանկացած  եղանակային փոփոխություն դեպքում մեթոդը չհայտնաբերելով օբյեկտը, չի ծառայի իր նպատակին: ", "Այդ  իսկ  պատճառով  մշակվել  է  հետևյալ  մեթոդը,  որը  կաշխատի  անկախ  լույսի  կամ եղանակային փոփոխություններից հիմնված XOR բիթային համենատության վրա: ", "Առաջին փուլում օգտագործելով G մատրիցի  (K * N) դիրքից մինչ  (K * M + N) դիրքում առկա ինդեքսները` ձևավորվում է KK բազմությունը, որտեղ K փոփոխականը համարժեք է տվյալ  բանալու  օգտագործման  քանակին։  KK  բազմության  ցանկացած  Ki  անդամին  R մատրիցում համապատասխանում է RK[i] սիմվոլ, արդյունքում ձևավորվում է N սիմվոլներից բաղկացած PP թվերի բազմություն կամ P տող։ Նախ հաշվարկվում է հրամանի բանալին՝ Ck,  հաշվարկելով  KK  և  PP  բազմությունների  համապատասխան  մասնիկների  XOR արժեքների գումարը (2.9)։ Օգտագործելով հարցման մարմնում առկա KFI փոփոխականը` հաշվարկվում  է  տվյալ  հրամանի  Ci  ինդեքսը  ստորև  գրված  բանաձևով,  որտեղ  CN  առկա հրամանների քանակն է ։ ", "Նկար 33.Սիգմոիդ ակտիվացիոն ֆունկցիա: ", "Նկար 2.4․ Սկզբնական պատկերը բաժանված 4 մասի: ", "Պատկերը  բաղկացած  է  պիքսելներից,  որը  կարելի  է  ներկայացնել  որպես թվային  մատրից  [50]:  Սկզբնական  պատկերը  նշ.  լատինատառ  A  տառով:  A-ն սկզբնական  պատկերի    թվային  մատրիցն  է,  որի  յուրաքանչյուր  տարր  իրենից ներկայացնում է 1 պիքսել՝ եռաչափ վեկտոր (բանաձև 2.1): ", "Ցանկացած վավեր հարցումից հետո K փոփոխականի արժեքը մեծացվում է մեկով, եթե K < N, այլապես K ստանում է 0 արժեք, և R մատրիցի R[n, m-1]  մասնիկը տեղափոխվում է առաջին ինդեքս և վերադասավորում այն, որի շնորհիվ G մատրիցում նշված ինդեքսների արժեքներից ձևավորված KK բազմությունը դառնում է ամբողջովին տարբեր համեմատած մինչև R-մատրիցում կատարված ձևափոխություների հետ։ Երբ տեղափոխումների քանակը հասնում է N * M – 1, ավարտվում է առաջին փուլը և  մինչ 2-րդ փուլին ացնելը կատարվում R  մատրիցի  «transpose»  փոխարկում:  Նախ  տվյալ  փոխարկման  համար  օգտագործելով միաչափ  ինդեքսը,  հաշվարկվում  է  ամեն  մասնիկի  երկչափ  ինդեքսը    հետևյալ  ձևով այնուհետև  կատարվում  է  նոր  ինդեքսի [𝑖𝑖  =  𝑀𝑀𝑀𝑀𝑀𝑀ℎ. 𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓(𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛/𝑁𝑁),   𝑗𝑗  =  𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛 % 𝑁𝑁] հաշվարկում և այդ 2 ինդեքսներին համապատասխան արժեքների փոխարկում։  Տվյալ  գործողությունը  կատարվում  է  ամեն  մատրիցի  մասնիկի  համար։ ", "Քանի  որ  պատկերը  տրոհել  ենք  4  մասի,  յուրաքանչյուր  հատվածի  համար կունենանք մեկ մատրից՝ համապատասխանաբար )1( )2( )3( )4( , , , : ", "Սկզբնական    պատկերի  յուրաքանչյուր՝  հատվածի  համար  հաշվարկում  ենք  3 առանձին  մեծություն՝  կարմիր,  կանաչ  և  կապույտ  գույների  ինտենսիվության գործակիցները (օր. ):  Յուր.  գործակից  որոշվում  է  տվյալ հատվածում  բոլոր  պիքսելերի  համպատասխան  գույնի(օր.  կարմիրի)  թվային արժեքների  միջին  թվաբանականով  (բանաձև  2.2-2.5):  Այլ  կերպ  ասած  գործակիցը ցույց է տալիս հատվածում գույնի միջին ինտենսիվությունը: ", "կստանանք բանաձև 2-ի միջոցով, 2-րդի համար՝ բանաձև 3-ի, 3-րդի համար՝ բանաձև (2.2) (2.3) (2.4) (2.5) Պատկերի  համար  կախված  տեղանքից  և  հնարավոր  եղանակային փոփոխություններից՝  որոշվում  է  σ  ընդհանուր  շեմային  գործակիցը  տեսախցիկը առաջին անգամ տեղադրելիս: ", "Վիդեոնկարահանման  ընթացքում  մեկ  վայրկյան  պարբերությաբ  վերցվում  է ընթացիկ  պատկերը:  Ընթացիկ  պատկերը  կնշանակենք  E  տառով:  E  պետկերում հնարավոր  է  արևի  պայծառության  փոփոխության  պատճառով  բոլոր  պիքսելների գունային  արժեքները  փոխված  լինեն,  այդ  իսկ  պատճառով  փորձում  ենք  C-ում գունային  ինտենսիվությունը  հնարավորինս  մոտեցնել  A  պատկերի  գունային ինտենսիվությանը,  որը  հնարավորություն  կտա  կիրառել  E  և  A  պատկերների պիքսելային XOR համեմատությունը և որոշել՝ արդյոք պատկերում հայտնվել է օբյեկտ, թե ոչ (ստրեև նկարագրված է մեթոդը): ", "Վերը  նկարագրված  ալգորիթմը  ախատեցվում  է  E  պատկերի  համար  և հաշվարկվում են , , , գործակիցները (2.6): Այնուհետև հաշվարկում ենք  ընթացիկ  և  սկզբնական  պատկերների  գունային  արժեքների  տարբերությունները յուրաքանչյուր հատվածի համար (2.7): ", ", (2.6) (2.7) -ն եռաչափ վեկտոր է (բանաձ 2.8): ", "(2.8) –ը  կարմիր  գույնի  միջին  ինտենսիվության  թվային  արժեքների տարբերությունն  է  E  և  A  պատկերների  միջև:  Այսպիսով՝ –ի  վեկտորները  ցույց  են տալիս,  թե  ինչ  արժեքով  է  ընթացիկ  պատկերում  գույնը  փոխվել  սկզբնականի համեմատ  [51,  52]:  Ընթացիկ  պատկերում  օբյեկտի  հայտնաբերման  ալգորիթմի բլոկսխեման բերված է ստորև (Նկար 2.5): ", "Նաև  կատարվել  է  գաղտնահամակարգի  կայունության  վերլուծություն։  Ութը սիմվոլներից  բաղկացած  բանալին  հատարկման  տարբերակով  գտնելու  համար անհրաժեշտ է կատարել առավելագույնը 264 քանակի փորձ, որը հաշվարկվում է հետևյալ բանաձևով՝ :  Հաշվի  առնելով  այն  փաստը,  որ  գոյություն  ունի  անվավեր հարցումներից սահմանափակում, որից հետո կատարվում է բանալու վերահաշվարկ, այս 𝑀𝑀∗𝑁𝑁 𝑖𝑖=0 ∏ (256 − 𝑖𝑖) տարբերակով բանալու դուրս բերումը կարելի է  համարել գրեթե անհնար։ Հարցման մեջ առկա տվյալները առանց փակ բանալու իմացության չեն տրամադրում տեղեկատվություն ուղարկվող  հրամանների  մասին  և  ունեն  պահանջված  գաղտնակայունություն, մասնավորապես՝  VH  հեշը  ունի  2n  բարդության  աստիճան։  R  և  G  մատրիցի  հնարավոր տարբերակների  մոտավոր  քանակն  հավասար  է  համապատասխանաբար -ի և 253-ի։ ", "-ում  յուրաքանչյուր  պիքսել  արժեքվ  շատ  մոտ  է  համապտասխան  պիքսելին  A պատկերում: ", "պատկերում  օբյեկտի  առկայությունը  կբերի  տվյալ  հատվածի  պիքսելների ավելի մեծ փոփոխությանը A պատկերի նկատմամբ, քան -ի մնացած  պիքսելները, անգամ  այն  դեպքում,  եթե  օբյեկտը  ունի  մեծ  գունային  նմանություն  ֆոնային  E պատկերին  և  անհասանելի  է  անզեն  աչքին: ", "HTTPS արձանագրության մեջ օգտագործվող AES ալգորիթմի արագացման համար օգտագործվել  են  Intel  AES-NI  լրացումները,  որը  թողարկվել  է  հատուկ  Intel  ընկերության պրոցեսորների,  մասնավորապես՝  շարժական  բանալու  սարքի  համար։  Շնորհիվ  այդ լրացումների  հնարավոր  է  AES  ալգորիթմում  օգտագործվող  հաշվողական  մի  քանի հրամաններ  կատարել`  օգտագործելով  ընդամենը  մեկ  հատուկ  հրաման:  Հատուկ հրամաններից  են  ՝  AESENC(AES  Encrypt  Round),  AESENCLAST  (AES  Encrypt  Last  Round), AESDEC  (AES  Decrypt  Round),  AESDECLAST(AES  Decrypt  Last  Round),  AESKEYGENASSIST (AES Key Generation Assist), AESIMC(AES Inverse Mix Columns): ", "Նկ. 12. Շարժական բանալիում առկա կարգաբերումների օրինակ Քանի որ մշակված գաղտնահամակարգը ներդրվելու է ցանցում գտնվող լրացուցիչ սարքում,  կատարվել  է  գոյություն  ունեցող  սարքերի  հետազոտում`  հնարավոր սահմանափակումները հայտնաբերելու նպատակով։ Հաշվի առնելով այդ հետազոտության արդյունքները և վերոհիշյալ պահանջները, ստեղծվել են շարժական բանալու անհրաժեշտ բնութագրերը,  որոնք  են՝  բարձր  արտադրողականությունը,  անլար  ցանց  տրամադրելու հնարավորությունը և լրացուցիչ ծրագրային ապահովման ներդրման հնարավորությունը։ ", "դատարկ/ֆիկտիվ  առաջադրանքներից իրական  առաջադրանքների բաշխման նկատառումներով: Տվյալ դեպքում ցանցի ամեն հանգույց ունենում է  ուղղորդիչ  բնորոշ  rotor-router  մոդելին  և    իրական  առագադրանքը  մուտք լինելով որևէ հանգույցի, զբաղեցնում է տվյալ հանգույցի հասանելի տիրույթը վերջինիս  ազատ  լինելու  դեպքում,  կամ  տեղափոխվում  է  հարևան  հանգույց ըստ տվյալ հանգույցի ուղղորդիչի ուղղության: Այս գործողությունը կրկնվում է այնքան  մինչև  առաջադրանքը  կգտնի  ազատ  հանգույց  և  կզբաղեցնի համապատասխան  տիրույթը:  Հիշեցնեմ  որ  փակ  rotor-router  համակարգում ավազահատիկը  պտտվելով  վերջավոր  քանակությամբ՝  անցում  է  կատարում բոլոր  հանգույցներով  և  վերադառնում  է  հին  դիրքին,  ինչպես  նաև վերադառնալուն պես մոդելը արդեն ընդունած է լինում սկզբնական վիճակը: ", "Ինչպես  նաև  անդրադառնալով  rotor-router  համակարգի  բաժին  2,3-ում նկարագրված  առանձնահատկությանը,  կարող  ենք  համոզված  լինել,  որ ստատիկ(կատարման  ժամանակը  անվերջ  է)  առաջադրանքների  մեկ  կետից ավելացման  դեպքում  կլաստերային  համակարգում  կունենանք  համասեռ բաշխվածություն  տվյալ  հանգույցի  շուրջ,  կամ  այլ  կերպ  ասված,  մեկ հանգույցում  առաջադրանքներ  ավելացնելու  դեպքու  կարող  ենք  համոզված լինել,  որ  տվյալ  հանգույցից հեռավորություն  ունեցող  հանգույցում  լցված առաջադրանքների քանակը չի կարող ավել լինել հեռավորության վրա գտվնող  հանգույցի  առաջադրանքների  քանակից:  Ասեմ  ավելին  մեր  կողմից r − 1 առաջ է քաշվել հիպոթեզ, որ դինամիկ(կատարման ժամանակը վերջավոր է) խնդիրների  դեպքում  ևս  կունենանք  նույն  պատկերը:  Տրված  հիպոթեզի իսկությունը երևում է SandScheduler ծրագրային համակարգի միջոցով նկար Նկար 36. SandScheduler-ը rotor-router վիճակում: ", "Նկար 2.6․  Երկրորդ պատկերում առկա երեք օբյեկտները, որոնցից միայն երկուսն է աչքին հասանելի (ավտոմեքենաները), իսկ երրորդը թաքնված է (որը փոքր կենդանի է): "], "source_docs_file": "Informatics and Computer Systems.json"}
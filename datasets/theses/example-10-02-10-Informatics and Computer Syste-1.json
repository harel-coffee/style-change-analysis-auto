{"paragraph_source_docs": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "source_docs_file": "Informatics and Computer Systems.json", "paragraphs": ["Ավազահատիկի  տեղադրումը  որոշակի  հանգույցում  կարող  է  որեւէ ազդեցություն չունենալ կամ կարող է առաջացնել փլուզման ալիքներ, որոնք կարող  են  կասկադային  ազդեցություն  ունենալ  բազմաթիվ  հանգույցների վրա:  Հիմնական  հետաքրքրությունը  այս  մոդելի  շրջանակներում  այն  է,  որ ցանցերի  սիմուլյացիայի  ժամանակ,  երբ  ցանցը  բերվում  է  կրիտիկական վիճակի,  այդ  ժամանակ  համակարգի  կորելացիայի  երկարությունը  և տևողությունը  ձգտում  են  անվերջության  առանց  համակագրի  որևէ ատրիբուտի  փոփոխության:  Ավազակույտի  մոդելում  մեկ  ավազահատիկի ավելացումը  որևէ  հանգույցին,  կարող  է  չհանգեցնել  որևէ  փլուզման,  կամ կարող  է  հանգեցնել  հանգույցների  զանգվածային  փլուզմումների:  Մենք օգտագործում  ենք  վերոնշյալ  առանձնահատկությունը  SandScheduler համակարգում դինամիկ խնդիրների տեղաբաշխման համար, որը տեսենալի է  տվյալ  համակարգում  «Debug  enabled»  վիճակում,  Նկար  35:  Այսպիսով SandScheduler  համակարգում  առաջադրանքների  ավազակույտի  մոդելի աշխատանքի  սկզբունքով  տեղաբաշխման  դեպքում  համակարգում  ունենք դատարկ  առաջադրանքներ,  որոնք  չեն  կարող  զբաղեցնել  հանգույցների «հասանելի» տիրույթները: Դատարկ առաջադրանքների իմաստը կայանում է նրանում,  որ  դրանք  ապահովվելով  բավարար  քանակ՝  մոդելը  պահում  են կրիտիկական  վիճակում՝  իրականացնելով  ավազակույտի  մոդելին  բնորոշ փլուզումները,  դրանով  իսկ  ապահովվելով  իրական  առաջադրանքների տեղաշարժը  ցանցում:  Իրական  խնդիրը,  հայտնվելով  հանգույցում,  որի «հասանելի»  տիրույթում  առկա է  ազատ  տեղ, զբաղեցնում է համապատասխան տեղը, դուրս գալով ավազահատիկի մոդելի փլուզումների շարքից,  որտեղ  դրա  դուրս  գալուն  պես  ի  հայտ  է  գալիս  նոր  դատարկ առաջադրանք որպես փոխարինող: ", "Նկար 35.SandScheduler ծրագրային փաթեթ: ", "դատարկ/ֆիկտիվ  առաջադրանքներից իրական  առաջադրանքների բաշխման նկատառումներով: Տվյալ դեպքում ցանցի ամեն հանգույց ունենում է  ուղղորդիչ  բնորոշ  rotor-router  մոդելին  և    իրական  առագադրանքը  մուտք լինելով որևէ հանգույցի, զբաղեցնում է տվյալ հանգույցի հասանելի տիրույթը վերջինիս  ազատ  լինելու  դեպքում,  կամ  տեղափոխվում  է  հարևան  հանգույց ըստ տվյալ հանգույցի ուղղորդիչի ուղղության: Այս գործողությունը կրկնվում է այնքան  մինչև  առաջադրանքը  կգտնի  ազատ  հանգույց  և  կզբաղեցնի համապատասխան  տիրույթը:  Հիշեցնեմ  որ  փակ  rotor-router  համակարգում ավազահատիկը  պտտվելով  վերջավոր  քանակությամբ՝  անցում  է  կատարում բոլոր  հանգույցներով  և  վերադառնում  է  հին  դիրքին,  ինչպես  նաև վերադառնալուն պես մոդելը արդեն ընդունած է լինում սկզբնական վիճակը: ", "Ինչպես  նաև  անդրադառնալով  rotor-router  համակարգի  բաժին  2,3-ում նկարագրված  առանձնահատկությանը,  կարող  ենք  համոզված  լինել,  որ ստատիկ(կատարման  ժամանակը  անվերջ  է)  առաջադրանքների  մեկ  կետից ավելացման  դեպքում  կլաստերային  համակարգում  կունենանք  համասեռ բաշխվածություն  տվյալ  հանգույցի  շուրջ,  կամ  այլ  կերպ  ասված,  մեկ հանգույցում  առաջադրանքներ  ավելացնելու  դեպքու  կարող  ենք  համոզված լինել,  որ  տվյալ  հանգույցից հեռավորություն  ունեցող  հանգույցում  լցված առաջադրանքների քանակը չի կարող ավել լինել հեռավորության վրա գտվնող  հանգույցի  առաջադրանքների  քանակից:  Ասեմ  ավելին  մեր  կողմից r − 1 առաջ է քաշվել հիպոթեզ, որ դինամիկ(կատարման ժամանակը վերջավոր է) խնդիրների  դեպքում  ևս  կունենանք  նույն  պատկերը:  Տրված  հիպոթեզի իսկությունը երևում է SandScheduler ծրագրային համակարգի միջոցով նկար Նկար 36. SandScheduler-ը rotor-router վիճակում: ", "SandScheduler համակարգի տեսքը պատկերված է Նկար 38-ում, որտեղ ՛Create'  կոճակով ստեղծվում է համապատասխան չափի մատրից/կլաստեր: ", "համապատասխանաբար  նաև  խնդիրների  տեղաբաշխման  պրոցեսը ստեղծելով նշված քանակությամբ մատրիցներ, և վերջում տպում է ստացված միջին արդյունքները «Statistics» բաժնում համար  պահանջվում են գրաֆի  տարբեր ներկայացումներ, կա երկու տեսակ ներկայացում. a.  Մեծ  շրջաններ,  որը  հարմար  է  ավազահատիկների  փլուզումը  ցույց տալու համար նկար 37 b.  Մեծ ուղղանկյուններ, որը հարմար է ցույց տալու խնդիրների բաշխման անիմացիան, որտեղ յուրաքանչյուր վանդակ պետք է ցույց տա իր մեջ գտնվող,  կատարվող  և  հերթի  մեջ  գտնվող  խնդիրները  նկար  35: ", "Նկար 37.SandScheduler համակարգում շրջաններով տեսաբերում: ", "տեղաբաշխումը  կատարում  է  ավազակույտի  մոդելի  աշխատանքային սկզբունով,  իսկ  նշված  դեպքում  կիրառվում  է rotor-router  մոդելի սկզբունքները: ", "ստեղծելով նշված քանակությամբ մատրիցներ, և վերջում տպում է ստացված միջին արդյունքները ՛Statistics' բաժնում գումարների հարաբերությունը ընդհանուր վանդակների թվին ավազահատիկներ պարունակող վանդակների գումարների հարաբերությունը ընդհանուր վանդակների թվին տակտերի  քանակը  և  մկնիկի  քլիքի  միջոցով  ավելացվող  խնդիրների քանակը լռությամբ որքան կարևոր են մուտքագրվող խնդիրները Նկար 38.SandScheduler համակարգի տեսքը: ", "SandScheduler  համակարգով  նախագծված  կլաստերային  համակարգի բաշխիչը  ունի  նաև  հնարավորություն  դիմակայել  որոշ  տեխնիկական  խնդիրների, ինչպիսիք  են  օրինակ  որոշ  հանգույցի/հանգույցների  անսպասելի  անջատումները: "]}
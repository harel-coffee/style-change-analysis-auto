{"paragraph_source_docs": [1, 0, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 0, 0, 1, 0, 2, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 0, 1, 0, 0, 1, 1, 2, 1, 1, 0, 1, 2, 0, 2, 1, 0, 0, 2, 0, 1, 2], "source_docs_file": "Informatics and Computer Systems.json", "paragraphs": ["Ինչպես  արդեն  նշվել  է,  «CA  Simulator»  համակարգը  ապահովում  է բազմաօգտատեր շահագործում, որը հնարավոր է եղել ստանալ Microsoft .Net [52] միջավայրի  միջոցով,  որը  ինքնին  հնարավորություն  է  տալիս  ստեղծել  ծրագրային փաթեթներ, որոնց միջոցով  կարելի է կապել ինչպես օգտագործողներին, այնպես էլ  տարբեր  համակարգեր  և  սարքեր,  դրանով  իսկ  դյուրացնելով  ինֆորմացիայի կիսումը/sharing:  Օգտագործելով  .Net  միջավայրը,  «CA  Simulator»  համակարգում մշակվել  է  հաճախորդ-սերվեր-հաճախորդ  փոխկապակցվածությունը՝  նպատակ ունենալով  հնարավորություն  տալ  օգտագործողներին  կատարել  համատեղ հետազոտություններ  միևնույն  մոդելների  վրա:  Սերվերի  տեղակայման  համար ընտրվել են Microsoft Azure [53] ամպային տեխնոլոգիաների հարթակը: ", "Բացի  այդ,  եթե  G  մատրիցը  նախագծված  է  օգտագործելով  Vander  Monde  Matrix, ապա  միայն  հիմքային  մասը  պետք  է  փոխանցվի  հանգույցների  միջև  ողջ  սյունակի փոխարեն [37]: Հարկ է նշել, որ բանալու կառավարման առաջարկված սխեման կարող է աշխատել բանալիների ենթակառուցվածքի գեներացման երկու մոդելի հետ: ", "Նկար 1.13.   MDC-ի և (SD+FEC) –ի համեմատությունը.  ա) միջին պոռթկումային երկարությունը D 10 փաթեթներ. բ) միջին պոռթկումային երկարությունը D 20 փաթեթներ: ", "Ինչպես արդեն նշվեց, «CA Simulator» համակարգը մշակվել է օգտագործելով .Net  միջավայրը  և  C#  լեզուն:  Իսկ  գլոբալ  ցանցում  աշխատանքի  ապահովման համար  ընտրվել  է  Microsoft  Azure-ը:  Ծրագրավորողների  տեսանկյունից  «CA Simulator»  համակարգը  կարող  ենք  բաժանել  3  մոդուլի.  տեսաբերում,  լոկալ սիմուլացիա և կլիենտ-սերվեր ճարտարապետություն: Տեսաբերման, պտույտների և դիտարկման  հեռավորության  ապահովման  համար  օգտագործվել  են  հենց  .Net միջավայրի գրադարանները: Տեսաբերող դասը կունենա գծապատկեր 1-ի տեսքը: ", "Մշակվել են բազմաթիվ մեթոդներ՝ դրնաց հետ կապված տեսանելիության խնդիրների լուծման համար:  Օրինակ՝  ֆիքսված  տեսախցիկների դեպքում օբյեկտի հայտնաբերումը օգտագործում է անշարժ ֆոնը: Տարածված մեթոդ է ֆոնի վերացումը Գաուսյան  խառնուրդի  մոդելով  [32]:  Այս  արագ  սովորելու    պրոցեսը  մոդելավորում  է պիկսելի  տարբեր  պայմաններ  տարբեր  դիրքերի  դեպքում  որպես  Գաուսյան բաշխումների խառնուրդ: Գաուսյան յուրաքանչյուր մոդելի կշռի միջին և փոփոխական արժեքները  կարող  են  առցանց  թարմացվել,  և  այն  պիկսելները,  որոնք  չեն համապատասխանում  որևէ  ֆոնային  մոդելի,  արագ  հայտնաբերվում  են:  Ադապտիվ սովորելու  հատկությունը  այս  մեթոդը  դարձնում  է  հարմար  իրական  ժամակաի կիրառությունների  համար    [34],  [35]:  Հայտնաբերման  այլ  մեթոդները  ներառում  են տեղանքի  սեգմենտացիայի  վրա  հիմնված  գրաֆիկական  հատումը,  եզրերի հայտնաբերման  վրա  հիմնված  փոփոխության  մակարդակի  համալիրը  և  սեղմման զգայնությունը: ", "Լոկալ  սիմուլացիայի  մոդուլում  նախագծվել  է  GuiHelper  դասը,  որը ապահովում է մոդելի ստեղծումը, տեսաբերումը, տեսաբերման ֆունկցիոնալ բոլոր հնարավորությունները, պահպանումը, վերբեռնումը, ավազահատիկների ավելացումը,  գագաթների  փլուզումը,  ինչպես  նաև  ատրիբուտների  հաշվարկը: ", "Տվյալ դասի ֆունկցիոնալ ստեկը ունի Նկար 20-ի տեսքը: ", "Կետերի  համեմատման  այս  մեթոդների  իրականացումը  թանկ  է  և,  հետևաբար, հարմար  չէ  իրական  ժամանակի  կիրառությունների  համար:  RANSAC11  (RAN-dom SAmple  Consensus)  ալգորիթմը  հաճախ  կիրառվում  է  կետերի  համեմատության պրոցեսի    արագ  իրականացման    համար:  Տեսաօբյեկտի  հայտնաբերման  սխեմայում, շարժվող  թիրախը  հայտնաբերվում  է    homography-RANSAC12  ալգորիթմով  սինթեզված ֆոնային  պատկերը  հանելով,  որը  հիմնված  է  PTU  տեսախցիկի  շարժման առանձնահատկության  վրա:  Օբյեկտի  հայտնաբերմա  պրոցեսը  պատկերված  է  նկար Նկար 1.14. Օբյեկտի հայտնաբերման պրոցես: ա) բնութագրիչ կետի հայտնաբերումը նախօրոք բռնված ֆոնային պատկերի վրա բ) բնութագրիչ կետի համապատասխանությունը գրանցված պատկերին homography-RANSAC -ով; գ) ֆոնայինն սինթեզ, օգտագործելով գնահատված հոմոգրաֆիան; դ) օբյեկտի սեգմենտացիան ֆոնի վերացումով հաստատված մակարդակի կոնտուրով: ", "Սերվեր-կլիենտ/ Service-client մոդուլի ճարտարապետության շրջանակներում ունենք    BroadcastingHelper  դասը  (Նկար  21),  որը  պարունակում  է  անհրաժեշտ ֆունկցիաները հեռարձակող-բաժանորդ կապի իրականացման համար: ", "Նախագծված  ճարտարապետության  հիմքում  ընկած  է  այն  գաղափարը,  որ հեռարձակողը  ինքնին  հանդիսանում  է  նաև  բաժանորդ  նույն  ալիքի  համար,  որը հնարավորություն է ընձեռում այլ օգտվողների փոփոխությունների ընդունումը նաև հեռարձակողի  կողմից:  Ինչպես  նշվեց  տվյալ  ալիքում  պահպանվում  է  բոլոր բաժանորդների  կողմից  կատարված  բոլոր  փոփոխությունները,  որի  համար ստեղծվել է տվյալների հենք, որի իրականացման համար ընտրվել է SQLite- ը: ", "VI.   Այլ  հարցեր։  Տվյալների  անվտանգությունը  կարևոր  հարց  է  գաղտնի հաղորդակցություններում սենսորային ցանցերում:  Տեսատվյալների համար, ծածկագրումը  կարող  է  կատարվել  սեղմված  բիտհոսքի  հիման  վրա՝  լավ  մշակված ծածկագրման  ալգորիթմներով,  ինչպիսիք  են  ներկառուցված  նույնականացումը  և  AES (Advanced  Encryption  Standard)  ծածկագրումը՝  սահմանված    IEEE  802.16/WiMax ստանդարտում:    Մեծ  քանակությամբ  տեսատվյալների  համար,  անվտանգության պաշտպանության  համար  հատկացված  ռեսուրսը  պետք  է  հավասարակշռվի  սխալի կառավարման    գործողությունների  հետ,  որն  օժանդակվում  է  հաղորդակցման  անլար համակարգով՝  ապահովելու համար օպտիմալ միջանցիկ գաղտնիությունը: ", "Ինչպես  արդեն  նշվեց,  CA  simulator  համակարգը  ստեղծվել  է  ավազակույտի մոդելի  օրինակով:  Առկա  են  երկու  հիմնական  գործառույթներ  կապված ավազակույտի հետ. DrawSandpileModel (), որն ապահովում է ավազակույտի տեսաբերումը, մոդելի փոփոխությունների արտացոլումը և •  addgrain(Position pos) ֆունկցիան, որը օգտագործողին հնարավորություն է տալիս կատարել փոփոխությունները ավազակույտի մոդելի վրա: ", "Գաղտնիությունը  մեկ  այլ  խնդիր  է,  որը  ավելի  ու  ավելի  մեծ  ուշադրություն  է գրավում  տեսահսկման  համակարգերում:  Սրա  հետ  կապված  հիմնական  խնդիրն  այն է,  որ  տեսանյութի  որոշ  նյութեր,  ինչպիսիք  են  մարդկանց  անձնական    տվյալները, պատշաճ  կամ  օրինական  չէ  ուղղակիորեն  ցույց  տալ  լսարանին:  Այս  հարցին վերաբերող  ներկայիս  մեթոդները  հիմնված  են  օբյեկտի  հայտնաբերման  մեթոդների վրա,  հատկապես  դեմքի  ճանաչման  մեթոդի:  Բովանդակային  կոդավորման  մեթոդը օգտագործել է JPEG  XR (JPEG extended range) կոդեկի  տարածական մասշտաբավորման  հատկությունները՝  դեմքը  ծածկելու  համար:  Դեմքի  հատվածները հայտնաբերվել և ծածկագրվել են ձևափոխման տիրույթում: Ձևի կոդավորման մեկ այլ սխեմայում  օբյեկտի  տարածքը  ծածկագրվել  է  անկախաբար՝  SPIHT-ի  հիման  վրա կատարվող  կոդավորման  պրոցեսում,  կոդավորման  ավելի  մեծ  արդյունավետությամբ՝ համեմատած    MPEG-4-ում    կատարվող  contour  based  բլոկային  կոդավորման  հետ: ", "Գաղտնիության  միջոցների  իրականացումը  իրական  ժամանակում  տեսահսկողության կիրառության  մեջ  կարող  է լինել  շատ  դժվար,  քանի  որ  զգայուն  նյութի նույնականացման  կամ  անսովոր  իրադարձության  հայտնաբերման  նախադրյալը ինքնին բարդ խնդիր է: ", "p, q պարզ թվերի հաղորդում Աշխատանքային հանգույց Բանալու տվյալների հարցում Ծառայության հանգույց Բանալու տվյալների բաշխում Նկ.5 Ծառայության հանգույցի և դրան համապատասխանող աշխատանքային հանգույցի միջև հաղորդակցության սխեման Աղյուսակ 2. Հաղորդագրությունների ձևաչափը Ծառայության հանգույցից դեպի բոլոր աշխատանքային հանգույցներ UID LH =p.q 𝑛𝑛 Ծառայության հանգույցից դեպի աշխատանքային հանգույց UID Գաղտնագրված տվյալներ CtrlFlag LH Բանալիների բաշխումը կատարվում է հետևյալ կերպ. Նախ՝  ծառայության  հանգույցը  հեռարձակում  է  իր  UID  և -ը`  համապատասխան միջակայքում գտնվող հանգույցներին:  Այնուհետև, ծառայության 𝒏𝒏 հանգույցը պատրաստվում  է  սպասարկել  աշխատանքային  հանգույցների  կամ  այլընտրանքային ծառայության  հանգույցների  կողմից  ուղարկվող  հարցումներին,  քանի  դեռ  այդ հարցումների քանակը չի գերազանցում  λ մեծությունը։ ", "Եթե  ստացված  հարցման  հաղորդագրությունն  ուղարկված  է  աշխատանքային հանգույցից,  ծառայության  հանգույցը  վերծանում  է  հաղորդագրությունը,  այնուհետև գտնում  է չօգտագործած  բանալի  տվյալ  հարցման  համար  և  ուղարկում  այն համապատասխան աշխատանքային հանգույցին: ", "քաղաքացիական  ավիացիայի  համապարփակ  մոդելավորում,  և  մեկն  է  գոյություն ունեցող ստվար քանակով ոչ մարտական սիմուլատորների մեջ: ", "Բանալիների ենթակառուցվածքի ստեղծման և կառավարման սխեման գնահատվում գնահատականը է հետևյալ բնութագրերով․ •  հիշողության ծանրաբեռնում, •  հաղորդակցում, •  հաշվողական գերբեռնում, •  կայունություն հարձակումների նկատմամբ: ", "Ատենախոսական  աշխատանքում  իրականցվող  խնդրի  լուծման  համար  նշված ալգորիթմի  արագությունը  բավարար  չէ  և  հարկավոր  է  մշակել  պատկերների  ավելի արագ  համեմատման  մեթոդ,  ընդ  որում  ապահովելով  հայտնաբերման  աշխատանքի մեծ ճշտություն։ ", "մասին:  Այնուհետև  Breakaway  Games-  ը  ստեղծեց  վիդեո  խաղ՝  հիմնված  Սերբիայի Otpor շարժման վրա:  Խաղը նախատեսված էր սովորեցնել վարել հակամարտություն օգտագործելով ոչ բռնի մեթոդներ: ", "Ենթադրենք`  N  հանգույցները  պատահականորեն  բաշխված  են  ցանցում։  Այդ դեպքումընտրման առաջին ծառայության հանգույցների թիվը կազմում է՝ Երկրորդ և i-րդ փուլում ծառայության հանգույցների թիվը կազմում է՝ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 = 𝑵𝑵 ∗ 𝑷𝑷𝑺𝑺 𝑫𝑫𝑯𝑯−𝟏𝟏 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 = �𝑵𝑵 −   𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 � (𝟏𝟏 − 𝑷𝑷𝑺𝑺) ∙   𝑷𝑷𝑺𝑺 𝒊𝒊 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 𝒊𝒊−𝟏𝟏 𝒊𝒊−𝟏𝟏 = �𝑵𝑵 −   ∑ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔𝒔𝒔 𝒊𝒊 (𝒊𝒊−𝟏𝟏) 𝑫𝑫𝑯𝑯−𝟏𝟏 � �(𝟏𝟏 − 𝑷𝑷𝑺𝑺) ∙   𝑷𝑷𝑺𝑺 որտեղ DH-1-ը  H-1  միջակայքում հարևան հանգույցների թիվն է: Ինչպես արդեն քննարկվել ,                    (2.5) է,  կա  t  փուլ  հանգույցի  ընտրման  և  ինքնակարգավորման  համար:  Յուրաքանչյուր աշխատանքային  հանգույցում  պահպանված  բանալիների  միջին  թիվը  հաշվելու նպատակով այլընտրանքային ծառայության բանալու համար բուֆերի չափն ընդունենք  L- ով: Այնուհետև, աշխատանքային հանգույցների թիվը կազմում է՝ 𝑵𝑵𝑾𝑾 = �𝟏𝟏 − 𝑳𝑳 𝒕𝒕 𝒊𝒊=𝟏𝟏 𝝀𝝀� ∙ �𝑵𝑵 −   ∑ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 𝒊𝒊 (2.6) Հետևաբար,  բանալու  ինֆորմացիայի  միջին  քանակը,  որը  պետք  է  պահպանվի յուրաքանչյուր աշխատանքային հանգույցում, կարող է գնահատվել հետևյալ մեծությամբ Առաջարկվող սխեմայում ընդհանուր հնարավոր ամբողջ ցանցային հաղորդակցման 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 �𝟏𝟏− 𝑵𝑵𝒘𝒘 𝑵𝑵𝑵𝑵𝑵𝑵𝒌𝒌𝒔𝒔𝒚𝒚𝒔𝒔 = 𝒕𝒕 𝛌𝛌 ∙ ∑ 𝒊𝒊=𝟏𝟏 𝒊𝒊 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 𝒊𝒊 𝒕𝒕 𝛌𝛌 ∙ ∑ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 𝒊𝒊=𝟏𝟏 𝑳𝑳 𝒕𝒕 𝝀𝝀�∙�𝑵𝑵− ∑ 𝒊𝒊=𝟏𝟏 𝒊𝒊 (2.7) գերբեռնվածությունը հաշվարկվում է ∙ (𝑩𝑩 + 𝛌𝛌 + 𝐋𝐋) +   𝑯𝑯�   ∙   �𝑵𝑵 −   ∑ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 բանաձևով,  որտեղ  B-ն  ծառայության  հանգույցի  կողմից  հեռարձակվող  հաղորդա- �   ∙  𝛌𝛌 + 𝑫𝑫� 𝒕𝒕 𝒊𝒊=𝟏𝟏 𝒊𝒊 ∑ 𝑵𝑵𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒔𝒊𝒊𝒔𝒔𝒔𝒔 𝒕𝒕 𝒊𝒊=𝟏𝟏 𝒊𝒊 (2.8) գրությունների  թիվն  է,  իսկ  L-ը՝  ծառայության  հանգույցի  կողմից  պահպանված այլընտրանքային  ծառայության  հանգույցների  թիվը:  Հետևաբար,  առաջին  գործոնն ամբողջ ծառայության հանգույցների հաղորդակցման գերբեռնվածությունն է [39]։ ", "«SandGame»-ը  [45]  իրականավել  է  հիմնվելով  ավազակույտի  աբելյան  մոդելի  վրա՝ նպատակ ունենալով խթանել ինքնակազմակերպվող համակարգերի հետազոտումը և  դյուրըմբռումը,  և  ունի  լուրջ  մտածված  կրթական  նպատակ,  հետևաբար  չի նախատեսվում օգտագործել միայն զվարճանքի համար, մինչդեռ այն բավականին գրավիչ  է  զվարճանքի  տեսանկյունից:  Իրականացված  խաղի  մոդելի  գաղափարը հիմնված է  ավազակույտի  մոդելին  առնչվող  տարբեր  թեորեմների  և տեսությունների  վրա,  որոնք  իրենց  հերթին  բարելավվում  են  ուսուցման խորությունը  և  բարձրացնում  են  գրավչությունը:  Անշուշտ,  բուհերի  և  դպրոցների համար  անհրաժեշտ  է  գիտական  խաղերի  հագեցած  ուսուցման  մեխանիզմների գոյությունը:  SandGame  խաղում  ավազակույտի  մոդելը  դիտարկվել  է  եռաչափ  և երկչափ  կապակցված  ցանցի  վրա  (Նկար  23):  Ցանցի  կապակցվածությունը հնարավորություն  է  տալիս  մոդելում  ունենալ  հավասարազոր  գագաթներ  ըստ հարևանների  քանակի,  ինչպես  նաև  թույլ չի  տալիս  մոդելին  կորցնել ավազահատիկ: ", "«SandGame»  խաղը  միաժամանակ  ապահովում  է  երկչափ  և  եռաչափ տեսաբերում,  ինչպես  նաև  դիտման  անկյունների  փոփոխություն  և  շերտերի առանձին  դիտման  հնարավորություն:  Վերոնշյալից  զատ,  SandGame-ում  կա  նաև մոդելի տվյալ պահին վերաբերող համապատասխան բնութագրիչների հաշվարկ և տեսաբերում  իրական  ժամանակում,  որոնք,  ավազակույտի  մոդելին  վերաբերող բազմաթիվ  թեորեմների  հետ  մեկտեղ  նպաստում  են  օգտատերերի  ավելի  ճշգրիտ որոշումների կայացմանը: Նշենք նաև, որ SandGame-ը չունի ինչպես հոսթինգների, այնպես էլ միևնույն հոսթինգի օգտատերերի քանակի սահմանափակումներ: ", "Նկար 23.SandGame խաղը երկու խաղացողների դեպքում: ", "Հանգույցների քանակ Բանալիների ծավալն ըստ բիթերի Նկ.7. Բանալիների պահպանման համար անհրաժեշտ հիշողության ծավալի համեմատականը դասական և առաջարկված մեթոդների դեպքում գաղտնահամակարգի մշակում ԻՆչպես նշվեց գոյություն ունեն  պարզ ինտերնետ իրեր, որոնց սահմանափակումները  թույլ չեն  տալիս  կիրառել  անվտանգ  հաղորդակցման ստանդարտները:  Նույն HTTPS արձանագրության  օգտագործումը  ենթադրում  է  հավելյալ հիշողություն,  բարձր  հաշվողականություն և  համապատասխան ծրագրային  ապահովում: ", "Բաժին  2,2-ում  նկարագրված  է  ավազահատիկների  քանակի unlimited =  3 ∗ n ստորին գնահատականը, որը անհրաժեշտ է մոդելը անվերջ անկայուն վիճակի մեջ գցելու  համար:  Ուստի  մոդելը  նախօրոք  սկզբնարժեքավորվում  է unlimited − 1 քանակությամբ  ավազահատիկներով,  որոնք  ավելացվում  են  պատահականության սկզբունքով  ընտրված  գագաթների  վրա՝  ամեն  անգամ  հնարավորություն  տալով նոր  խաղային ռազմավարության:  Բացի  այդ, նշված քանակությամբ ավազահատիկներով  սկզբնարժեքավորումը  զգալիորեն  կրճատում  է  հաղթողի ճանաչմանն  անհրաժեշտ  քայլերի  քանակը:  Օրինակ  ԼԻՆՔ[33]  աշխատությունում կատարվել  է  ստատիստիկ  հաշվարկներ,  ըստ  որի  մոդելը  անվերջ  անկայուն վիճակում գցելու համար անհրաժեշտ ավազահատիկների միջին քանակը երկչափ ցանցի  դեպքում  ստացվում  է  մոտարկմամբ :  Ուստի երկչափ  ցանցում  փլուզելով միջինում անհրաժեշտ է լինում փլուզել ևս unlimited − 1 ավազահատիկ,  խաղացողներին avarage = 2.12588 … ∗  n քանակությամբ  ավազահատիկ  միջինում:  Հետևելով  տվյալ  աշխատության  նույն avarage −    C unlimited + 1 = 0.12588 … ∗   n տրամաբանությանը  եռաչափ  ցանցի  դեպքում  ավազահատիկների  միջին  քանակը անհրաժեշտ հաղթողի ճանաչման համար կստացվի : ", "Տեղեկատվական  անվտանգության  տեսանկյունից  պարզ  ինտերնետ  իրերի անվտանգության հիմնական խնդիրները կապված են տվյալների փոխանակման հետ [41]։ ", "Ընտրելով  նկարագրված  մեթոդներից  ամենարագը՝  (մեկ  օբյեկտի  հայտնաբերման  և ճանաչման  արագությունը  նշանակենք  S-ով)  կկիրառենք  պատկերում  առկա՝ դիտարկման  համար  անհրաժեշտ,  մի  քանի  օբյեկտների  համար,  ապա  n  օբյեկտի դեպքում  կծախսենք  S×n  ժամանակ։  Բանաձևից  երևում  է,  որ  ինչքան  մեծ  լինի  n-ը, այնքան  կդանդաղի  ընդհանուր ճանաչման  գործընթացը։  Ատենախոսական աշխատանքի նպատակն է մշակել այնպիսի մեթոդ, որը տեսադաշտում կհայտնաբերի և կճանաչի օբյեկտները՝ անկախ նրանց թվից։ Ալգորիթմի արագությունը պետք է լինի կայուն՝ անկախ օբյեկտների քանակից։ ", "•  Նախապատրաստություն  –  նոր  խաղ  սկսելու  համար  խաղացողը ընտրում  է  \"File\"  վերին  պանելից,  այնուհետև  ընտրում  \"New  game\" տարբերակը,  որից  հետո  հայտնվում  է  պատուհան  ցանցի  չափի մուտքագրման համար: Մուտքագրելուց հետո  ստեղծվում  է նոր մոդել, որն արդեն սկզբնարժեքավորված կլինի քանակությամբ ավազահատիկներով:  Մոդելով  կիսվելու  և  խաղի  ալիքը  մյուս խաղացողների  համար  հասանելի  դարձնելու  համար  խաղացողը պետք  է  ընտրի \"Broadcasting\"  տարբերակը  վերևի  պանելից, այնուհետև  ընտրի  \"Start  Broadcasting\"  կոճակը,  որից  հետո  կհայտնվի պատուհան,  որտեղ  խաղացողը  պետք  է  մուտքագրի  խաղի  ալիքի անվանումը(օրինակ ASM students introduction), որով մյուս խաղացողները  կգնտնեն  տվյալ  ալիքը:  Դրանից  հետո  մյուս խաղացողները  կարող  են  բացել  ալիքների  ցուցակը  ընտրելով \"Broadcasting\" օպցիան վերևի պանելից և սեղմելով «Connect to Chanel» կոճակը:  Կբացվի  ալիքների  պատմությունը  ցույց  տվող  պատուհան, որտեղ հասանելի կլինեն ինչպես  ակտիվ,  այնպես էլ պասիվ/ավարտված ալիքները (Նկար 24): Ալիքների ցանկից ընտրելով ցանկալի  ալիքը  (ASM  students  introduction  մեր  դեպքում)  նրանք կմիանան միևնույն ալիքին դիտարկելով միևնույն մոդելը: ", "Ակնհայտ է, որ ցանկացած ինտերնետ իրին տրված հրամանների վերծանումը բարդություն չի ներկայացնում և  անվտանգության ապահովման կարևոր խնդիր է [40]։ ", "•  Գործողություններ –  Նույն  ալիքին/մոդելին  միանալուց  հետո խաղացողները  կարող  են  սկսել  ավազահատիկների  ավելացման պրոցեսը, որը կատարվում է ըստ  ալիքին միացման հերթականությամբ:  Նշենք  որ  ամեն  խաղացողին  թույլատրվում  է ավելացնել  միայն  մեկ  ավազահատիկ  ամեն  քայլում  (Նկար  25):  Դրա համար  խաղացողը  ընտրում  է  \"Edit\"  օպցիան  վերևի  պանելից, այնուհետև սեղմելով \"Add Grain\" կոճակը հայտնվում է նոր պատուհան, որտեղ խաղացողը մուտքագրում  է իրեն ցանկալի կոորդինատները, և վերջացնելուն պես սեղմում պատուհանի «Add» կոճակը: ", "Այդ գաղտնահամակարգը  ներդրվելու  է  լրացուցիչ  սարքում,  որը  շարժական  բանալի  է համացանցի և ինտերնետ իրերի միջև[41]: ", "Հաշվի առնելով այն փաստը, որ առաջարկված գաղտնահամակարգը աշխատելու է պարզ  իրերի  ինտերնետ  միջավայրում  և  ապահովելու  է  միաժամանակ  տարբեր  քանակի ինտերնետ իրերի անվտանգությունը, ուստի այդ գաղտնահամակարգը պետք է բավարարի ստորև թվարկված պահանջները. •  միաժամանակ ապահովի մի քանի պարզ ինտերնետ իրերի անվտանգությունը։ ", "SandGame-ի  հիմքում  եղած  լուրջ  տեսությունը  դեպի  հաղթանակ  տանող ճանապարհը  ավելի  դժվար  է  դարձնում,  երբ  հակառակորդները  պրոֆեսիոնալ խաղացողներն  են  լինում:  SandGame-ը  հնարավորություն  է  տալիս  յուրաքանչյուր խաղացողի  ստեղծել  իր  սեփական  հաղթանակի  տանող  ռազմավարությունը, սակայն  հաղթողը  կլինի  այն  մեկը,  որի  ռազմավարությունը  ավելի  լավ  կլինի: ", "Օրինակ,  ամենապարզ  ռազմավարություններից  մեկը  կարող  է  լինել  հետևյալ. ավազահատիկներ  ավելացնում  ենք  այն  գագաթներին,  որոնք  ավելի  մոտ  են անկայուն  վիճակի  ընկնելու  համար,  կամ  ավելի  հետաքրքիր  կլինի  մոդելը  փորձել բերել  կրիտիկական  վիճակներից  մեկին,  որի  դեպքում  անվերջ  անկայունության հասնելու համար անհրաժեշտ ավազահատիկների քանակը մոտ է նվազագույնին: ", "Օբյեկտների  արտապատկերումը  մի  հաթակում՝  քարտեզներում։  Մեծ տարածքում  տարբեր  տեսահսկման  համակարգերի  կամ  առանձին  տեսախցիկների կողմից իրականցվող գործողության  արդյունքում յուրաքանչյուրի կողմից հայտնաբերված  իր  օբյկետը  դիտարկվում  է  որպես  առանձին  միավոր։  Այդպիով՝ տարածքի  ամբողջական  պատկերը  չի  կառուցվում  և  մնում  է  անհայտ:  Սակայն գոյություն  ունեն  խնդիրներ,  որոնց լուծման  համար  անհրաժեշտ  է  տեսնել ամբողջական  պատկերը՝  դիտարկելով  տարբեր  տեսահսկման  համակարգերի  կողմից հայտնաբերված օբյեկտների փոխկապակցվածությունը։ ", "Նկար 27.Բիոլոգիական նեյրոնային ցանցում ինֆորմացիայի փոխանակում:9 Արհեստական նեյրոնային ցանցերի դեպքում կունենանք Նկար 28-ի պատկերը: ", "Նկար 28.Բիոլոգիական նեյրոնի պարզեցում: ", "Նկ.8. Շարժական բանալու կառավարման վահանակում նոր կարգաբերումների ավելացման պատուհանը Քայլ  2.  Շարժական  բանալու  միջոցով  ուղարկվող  և  ստացվող  հարցումները դասակարգվում  են  2  դասի՝  հեշային  և  գաղտնագրային.  հարցումներից  կախված կատարվում է կամ  հրամանների/հեշերի  արտապատկերում  կամ  տվյալների գաղտնագրում/վերծանում։ ", "Արհեստական նեյրոնային ցանցերն իրենցից ներկայացնում են փոխկապված և  փոխհամագործակցող (արհեստական  նեյրոնների)  պարզ  պրոցեսորների համակարգ:  Այդպիսի  պրոցեսորները  սովորաբար  բավականին  պարզ  են, հատկապես, համեմատած  անհատական համակարգիչներում կիրառվող պրոցեսորների հետ։ Նմանատիպ ցանցի յուրաքանչյուր պրոցեսոր գործ ունի միայն ազդանշանների  հետ,  որոնք  պարբերականորեն  ստանում  է,  և  ազդանշանների, որոնք  պարբերաբար  ուղարկում  է  այլ  պրոցեսորների։  Այնուամենայնիվ,  այդպիսի լոկալ  պարզ  պրոցեսորները  միասին  ընդունակ  են  կատարելու  բավականին  բարդ խնդիրներ։  Մեքենայական  ուսուցման  տեսանկյունից  նեյրոնային  ցանցը  իրենից ներկայացնում է  կերպարների  ճանաչման,  դիսկրիմինանտ  վերլուծության, կլաստերիզացիայի  մեթոդի  և  նմանատիպ  այլ  մեթոդների  լուծման  յուրօրինակ տարբերակ։ Մաթեմատիկական տեսանկյունից, նեյրոնային ցանցերի ուսուցումը ոչ գծային  օպտիմիզացման  բազմապարամետրական  խնդիր  է։  Կիբեռնետիկայի տեսանկյունից  նեյրոնային  ցանցը  կիրառվում  է  հարմարվողական/adaptive կառավարման խնդիրներում և որպես ալգորիթմ կիրառվում է ռոբոտատեխնիկայում։  Հաշվողական  տեխնիկայի  և  ծրագրավորման  զարգացման տեսակյունից  նեյրոնային  ցանցը  արդյունավետ  զուգահեռացման  խնդիրների լուծման միջոց է։ ", "բազում նույնատիպ օբյեկտների առկայության դեպքում: ", "Շարժական Բանալի ՊԻԻ ՊԻԻ ՊԻԻ Հրամանների Հրամանների արտապատկերում արտապատկերում Գաղտնագրային գործառույթներ Նկ.9. Գաղտնահամակարգի աշխատանքի սխեման Քայլ 1-ում շարժական բանալուն միացված պարզ ինտերնետ իրի կարգաբերումները ավելացնելիս  նկ.8-ում  ներկայացրած  «hրամաններ»  կարգաբերումը  պետք  է  նշվի  միայն այն դեպքում, երբ սարքի մոդելը առկա է համապատասխան դաշտի մոդելների ցուցակում, այլապես  անհրաժեշտ  է  ավելացնել  սարքը  ինքնուրույն՝  նշելով  սարքի  կողմից  ընդունվող բոլոր հրամանները, որոնք անմիջապես ուղարկվում են սերվերին։ ", "հոսքերի(բազմահոսքության) սկզբունքով աշխատող ալգորիթմ: ", "Նկար 29.Feedforward արհեստական նեյրոնային ցանց: ", "Այնուհետև կատարվում է ևս մեկ հարցում՝ ի պատասխան որի շարժական բանալին ստանում  է  գաղտնի  բանալին  և  այնուհետև  օգտագործում  է  այն  մուտքային  և  ելքային հարցումները սպասարկելու համար։ ", "Նկ.10. Շարժական բանալու կողմից կատարվող հարցումները Սերվերը,  ստանալով  նույնականացում  կատարած  սարքից  գաղտնի  բանալու ձևավորման  հարցում,  նախ  ձևավորում  է  N  *  M  չափի  ASCII-ի  սիմվոլներից  բաղկացած երկչափ  R  զանգվածը  (աղյուսակ  3)  օգտագործելով   «/dev/urandom/»  հրամանը,  որը անվտանգ  է  համարվում  գաղտնագրային  գործընթացներում  օգտագործելու  համար։ ", "Մշակված  մեթոդը  հայտնաբերում  է  մեծ  ճշտությամբ,    հայտնաբերում է  անգամ այն  թաքնված  օբյեկտները,  որոնք  ունեն  մեծ  գունային  նմանություն  ֆոնային պատկերին, որը մարդու աչքը ի վիճակի չի նկտել: Հայտնաբերելուց առաջ հարկավոր չէ  սահմանել  կամ  նկարագրել  փնտրվող  օբյեկտը,  մինչդեռ  գոյություն  ունեն օբյեկտների  հայտնաբերման  մի  շարք  համակարգեր,  որոնց  դեպքում  նախապես սահմանում են փնտրվող օբյեկտը կամ օբյեկտները [8], [48, 49]: Իսկ մշակված մեթոդը չի  սահմանափակում  փնտրվող  օյեկտները  ըստ  տեսակի:  Ալգորիթմը  մշակված  է հայտնաբերելու ցանկցած տեսակի և չափի օբյեկտ: ", "∏ (256 − 𝑖𝑖) 𝑀𝑀∗𝑁𝑁 𝑖𝑖=0 Այնուհետև պատահական սկզբունքով ընտրվում է նախօրոք գեներացված G մատրիցը, որը իր մեջ պարունակում է M x N չափի ինդեքսների զանգված, որտեղ յուրաքանչյուր ինդեքսը եզակի  է  և  գտնվում  է  0  <  Index  <  M  *  N  միջակայքում։  Այս  զանգվածը  ձևավորվում  է Համելտոնի կամ այսպես կոչված շախմատային ձիու շրջագայության խնդիրը լուծելիս, որը համարվում  է    NP    բարդության  խնդիր  և  ունի  լուծման  9,591,828,170,979,904  եղանակ։ ", "Հիմնականում  PU-ները  տրամաբանություն  մշակող  մոդուլներ  են,  որոնք օժտված են ֆունդամենտալ ֆունկցիայով, որը  իրենից ներկայացնում է մուտքային «կշռված»  տվյալների  գումարի  և  որոշակի  շեմային  արժեքի  վրա  հիմնված գործառույթով: Մաթեմատիկական առումով սա արտահայտվում է որպես 𝑢𝑢 𝑦𝑦𝑖𝑖 = 𝑓𝑓𝑖𝑖 �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 𝑗𝑗=1 � = 𝑓𝑓𝑖𝑖(𝑎𝑎𝑖𝑖) որտեղ , , ,  և ,  ատրիբուտները  համապատասխանաբար -ի  ելքային 𝑦𝑦𝑖𝑖 տվյալն  է, 𝑤𝑤𝑖𝑖𝑗𝑗 -ից 𝑥𝑥𝑗𝑗 կապուղղու  կշիռն  է, 𝑠𝑠𝑖𝑖 -ի  մուտքային  տվյալն  է, 𝑃𝑃𝑃𝑃 -ի  շեմային արժեքն է: ", "Նկար 2.1. Սկզբնական պատկերը: "]}
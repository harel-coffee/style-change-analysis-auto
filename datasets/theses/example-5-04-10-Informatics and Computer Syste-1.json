{"paragraphs": ["Առաջին քայլից սկսած  թափում կատարելու  դեպքում isBoardReady  փոփոխականին  վերագրում  ենք  false,  և  ամեն քայլից  հետո    ստուգում  փոփոխականի  արժեքը  ,  true  լինելու դեպքում  ավարտում  աշխատանքը:  Ամեն  5  քայլի  ավարտից հետո փոփոխականին վերադարձնում ենք true արժեքը: ", "Աշխատանքի  ավարտի  պահը  ֆիքսելու  երկրորդի  թերությունը  հետևյալումն է:  Եթե  մենք  կատարում  ենք  զուգահեռ  աշխատանք  ,  այսինքն  ամեն  հոսք կատարում  է  իրեն  հատկացված  աշխատանքը,  ապա  ամեն  հոսք  պարտավոր  է աշխատել  isBoardReady  փոփոխականի  հետ  թափում  կատարելու  դեպքում,  իսկ քանի  որ  բոլորը  միաժամանակ  միևնույն  հիշողության  հետ  աշխատել  չեն  կարող, ստիպված  պետք  է  շատերը  սպասման  վիճակի  անցնեն,  իսկ  դա  երկարացնում  է ալգորիթմի աշխատանքի ժամանակահատվածը: ", "Առաջին  և  երկրորդ  դեպքերը  պետք  է  ընտրվեն  կախված  խնդրից  և  ցանցի չափերից:  Նույն  տրամաբանությամբ  կարելի  է  իրականացնել չափանի խորանարդային  ցանցերի  վրա  դիտարկվող  ավազակույտի  մոդելի  աշխատանքի սիմուլացիայի զուգահեռացում: ", "Այժմ  ներկայացնենք  տարբեր  հզորությամբ  CPU-ների  և  GPU-ների  վրա փորձարկված արդյունքների վիճակագրական վերլուծությունը: ", "Երկչափ  ցանցերի  դեպքում  ունենք  համեմատական  վերլուծություն՝ պատկերված Գծապատկեր 2, 3, 4, 5-ում: "], "paragraph_source_docs": [1, 1, 1, 1, 1], "source_docs_file": "Informatics and Computer Systems.json"}
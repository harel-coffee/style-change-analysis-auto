{"paragraph_source_docs": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "paragraphs": ["  Q (Reverse Ping-pong addressing) -  տեսակի հասցեավորումը հակադարձ է Պինգպոնգ տեսակի հասցեավորմանը: ", "Թեստային ալգորիթմում կարող են օգտագործվել հետևյալ գործողությունները. - w – Գրել գործողությունը (անգլերեն - write operation), - r – Կարդալ գործողությունը (անգլերեն - read operation), - n  – Հապաղում  գործողությունը՝  գործողություն Չկա (անգլերեն  - NO operation), հիշողության    ժամանակաչափի  ազդանշանը  (CLK)  չի  կանգնեցվում  կատարելով    «n» քանակությամբ «դատարկ» գործողություն, -  d  –  Հապաղում  գործողությունը  (անգլերեն  -  delay  operation):  Հապաղում գործողությունը  կառուցված  է  որոշակի  N  քանակի  Հապաղում  գործողություններից    և իրականացված է որպես` d=n*N, օգտագործվում  են  «a»  և  «b»  տվյալների  օրինակները  (անգլերեն  -  Background  Pattern - 97 - (BP)): Ընդ որում, «b»  տեսակի տվյալի արժեքը միշտ հակադարձ է «a»  տվյալի արժեքին: ", "Ծրագրային հոսքում օգտագործվում են հետևյալ չորս տեսակի  «a» տվյալները.   Բոլորը զրո (0000),   Բոլորը մեկ (1111),   Շախմատաձև (0101) և   Հակադարձ Շախմատաձև (1010): ", "Թեստային  ալգորիթմի  նկարագրությունը  գտնվում  է «անուն».alg  ֆայլում  և պարունակում  է  լրացուցիչ  ևս  երեք  պարամետրեր:    Դրանք  են.  ա.  ԹԱ-ի  սկզբնական a = 0101 b = !a Q w a n b r a P w b r b n a U w b d9 b r b D r b d16 a r b w a D r a stop adress 0x9 inst_max_adr 0xf start_adr 0x2 Նկար 3.5.   ԱՀ-ի Թեստային ալգորիթմ  ֆայլի օրինակը հասցեն,  բ.  ԹԱ-ի  «կանգառ»  հասցեն  և  բ.  հիշողության  նմուշի  հասցեների  տիրույթի առավելագույն  հասցեի  արժեքը:  Այս  պարամետրների  արժեքները  ալգորիթմի  ֆայլում ներկայացվում  են  տասնվեցական  ձևաչափով: ", "Այս  պարամետրերի  արժեքները նույնպես  մշակվում  են  ԱՀ-ում:  Տվյալների  տասնվեցական  ձևաչափով  ներկայացման ընտրությունը  դրսևորվել  է  պատմականորեն  և  պայմանավորված  է  այն  բանով,  որ հիշողությունը  նախագծող  ճարտարագետները,  հասցեավորումը  նկարագրելիս  մեծ մասամբ  օգտագործում  են  տասնվեցական  ձևաչափը:  Նկար  3.5-ում  ներկայացված  է թեստային  ալգորիթմ  ֆայլի  օրինակը:  Կանգառ  հասցեն  օգտագործվում  է  ԹԱ-ի աշխատանքը հարկադրաբար կանգնեցնելու  նպատակով՝ այն կատարվում է, երբ ԹԱ-ի աշխատանքային  հասցեն հավասարվում  է  նշված  Կանգառ  հասցեի  արժեքին: ", "Հիշողության  նմուշի  առավելագույն  հասցե  պարամետրը  (instance_max_addr) օգտագործվում  է  այն  դեպքերում,  երբ  թեստային  ալգորիթմի  կողմից  հաշվարկվող - 98 - առավելագույն  հասցեի  արժեքը  կարող  է  գերազանցել  ՀՍ-ի  իրական՝  ֆիզիկական, հասցեի արժեքը. max_addr > instance_ max_addr : ", "Հաշվարկային Առավելագույն հասցեի հաշվարկման բանաձևն է. max_addr=2(#ADRi)  , որտեղ (#ADRi)  –  Հիշողության  նմուշի  տրամաբանական  հասցեների    ազդանշանների քանակն է, max_addr –     Հիշողության նմուշի հաշվարկվող առավելագույն հասցեն է, instance_max_addr - Հիշողության նմուշի ֆիզիկական առավելագույն հասցեն է: ", "ԱՀ-ում  օգտագործված  թեստային  ալգորիթմի  նկարագրման  ձևաչափը  լիովին ապահովում  է Մարշ տեսակի հանրահայտ թեստային ալգորիթմների մեծամասնության նկարագրման  հնարավորությունը: ", "ԹՆևՀԹԱՍ    ծրագրային  ԱՀ-ը  կատարում  է  թեստային  ալգորիթմի  ձևաչափի ձևափոխումը՝    SPICE  մոդելավորող  ծրագրային  գործիքին  հասկանալի,  վեկտորային ձևաչափի (SVP):  SVP  ֆայլը  պարունակում  է  տեղեկություններ  կատարվող գործողությունների,  և  դրանց  համապատասխան  տվյալների  մասին՝    ներկայացված թվային  կոդերի    տեսքով:  ԱՀ-ի  միջոցով՝  ավտոմատացված  ձևով,  ստեղծվում  է  SPICE մոդելավորման  աշխատանքը  կառավարող    SIM  ֆայլը:  Կառավարման  ֆայլի  մեջ ընդգրկված  են    մոդելավորման  մուտքային  տվյալները,  ազդանշանների  սկզբնական վիճակը  ապահովող  արժեքները,  աշխատանքային լարումների,  ջերմաստիճանի, աշխատանքային հաճախականության արժեքները, մոդելավորման համար անհրաժեշտ գրադարանների ճանապարհները և մի շարք այլ կառավարող տվյալներ: ", "Հավելված  6-ում  տրված  է  ԹՆևՀԹԱՍ    ծրագրային  ԱՀ-ի  կառավարման  ֆայլի օրինակը: ", "վերլուծումը և թերության դիմադրության ճշգրտման ալգորիթմը Թերությունները  GDSII  –ում  ներարկումից  և  թերություններ  պարունակող  SPICE ֆայլի  ստանալուց  հետո  ԱՀ-ի  հաջորդ  քայլն  է  հանդիսանում  գտնել  ստացված անսարքության  դիմադրության  այն  արժեքը,  որի  դեպքում  հետազոտվող  ԹԾԱ-ը - 99 - ալգորիթմը    կհայտնաբերի  ներարկված  անսարքությունը՝  ալգորիթմի  «զգալիությունը»: ", "Դիմադրության  հաշվարկման  այս  խնդիրը  դասվում    է  մեկչափանի  օպտիմալացման մեթոդի  խնդիրների  դասին:  Այս  մեթոդի  շարքին  են    պատկանում.  ոսկե  կտրվածքի, Ֆիբոնաչիի թվերի մեթոդը, պոլինոմինալ մոտարկման մեթոդը,  դիխոտոմիկ բաժանման մեթոդը  և  նրանց  մի  շարք  մոդիֆիկացիաները [28], [29]: ", "Այս  աշխատանքի սահմաններում  մենք  օգտագործում  ենք  դիխոտոմիկ  բաժանման  մեթոդի  ձևափոխված՝ մեր խնդրի մասնավոր դեպքին հարմարեցված տարբերակը: ", "Դիխոտոմիկ  բաժանման  մեթոդի  աշխատանքի  էությունը  հետևյալն  է  [29]. ենթադրենք ունենք հատված [A,B], որի վրա կա մեկ նվազագույն (մինիմում) (ընդհանուր դեպքում կենտ քանակի մինիմումներ): Համաձայն դիխոտոմիկ բաժանման մեթոդի (Տես՝ նկ.  3.6)՝  հատվածը  բաժանվում  է  երկու  կեսի  և  C  կետից  «q»  թույլատրելի  շեղումի մեծությամբ հաշվարկվում է նպատակային ֆունկցիայի արժեքը F(C+q) և F(C-q): ", "F(x) Նկար 3.6.   Դիխոտոմիկ բաժանման մեթոդը Եթե  պարզվի,  որ  F(C+q)>F(C-q),  ապա  մինիմումը  գտնվում  է  [A,C]  հատվածում:  Եթե F(C+q)<F(C-q),  ապա  մինիմումը  գտնվում  է  [C,B]  հատվածում:  Իսկ  եթե      F(C+q)=F(C-q), ապա  մինիմումը  գտնվում  է  [C-q,C+q]  հատվածում:  Այսպիսով,  հաջորդ  քայլում  [A,B] հատվածի  փոխարեն  պետք  է  հետազոտել  նեղացված  համապատասխան  հատվածը [A,C],  [C,B]  կամ  [C-q,C+q]:  Քայլերը  կրկնվում  են  այնքան,  մինչև  որ  հատվածի երկարությունը  դառնա  փոքր      թույլատրելի  շեղումի՝    «q»-ի,    արժեքից:    Այսպիսով, հնարավոր քայլերի քանակը N է, դա ոչ ավել, քան  log((B-A)/q)  թվին մոտ ամբողջ թիվ է: ", "Այս  մեթոդի  թերությունը  այն  է,  որ  նպատակային  ֆունկցիայի  արժեքը  պետք  է հաշվարկել երկու անգամ ամեն մի քայլի ժամանակ: ", "- 100 - SPICE մոդելավորում  Rmin և Rmax դեպքերի համար Այո Մոդելավորումը. - Rmin անսխալ է և -  Rmax սխալ է Ոչ SPICE մոդելավորում Rn-ի համար: ", "Հաջորդական ռեժիմ SPICE մոդելավորում Rn-ի համար: ", "Զուգահեռ ռեժիմ Այո Եթե n <= i Ոչ Այո Եթե n <= i Ոչ Ելքային ֆայլերի գեներացում: ", "Ավարտել Նկար 3.7.   Մոդելավորման Դիմադրության համապատասխանեցման ալգորիթմը ԹՆևՀԹԱՍ  ծրագրային ԱՀ-ում նպատակային ֆունկցիան ստացված SPICE ֆայլի մոդելավորումն է, որը, հիմնականում, ժամանակատար է  և պահանջում է հաշվողական մեծ ռեսուրսներ, ուստի մենք չենք կարող աշխատեցնել SPICE ֆայլի մոդելավորումը մեծ քանակով  դիմադրության  արժեքների  տիրույթի  համար:  Նկար  3.7-ում    տրված  է ԹՆևՀԹԱՍ  ծրագրային  ԱՀ-ում  իրականցված  անսարքության  դիմադրության  մշակման ալգորիթմի  բլոկ-սխեման:  Այս  խնդրի լավարկման  նպատակով  մշակվել  է  և օգտագործվում  է  դիմադրության  համապատասխանեցման  ալգորիթմը  (ԴՀԱ):  ԴՀԱ-ի հաջորդական  մշակման  ճյուղում  օգտագործվում  է  դիխոստոմիկ  բաժանման  մեթոդի հիմունքներով կառուցված ալգորիթմը: ԴՀԱ-ը իրականացված է  ԹՆևՀԹԱՍ  ծրագրային հոսքի  Վերլուծման  հանգույցում:  ԱՀ-ի  կառավարման  ֆայլում  տրվում  է  հետազոտվող անսարքության  դիմադրության  նվազագույն  Rmin  (մինիմալ)  և  առավելագույն  Rmax - 101 - (մաքսիմալ)      հաշվարկային  արժեքները  և  նախատեսված  իտերացիաների  քանակը (Տես՝ նկ.3.8):  «Իտերացիաների քանակը» պարամետրով ճարտարագետը սահմանում է քայլերի  քանակը,  որոնց  ընթացքում  ԱՀ-ը  պետք  է    կատարի  դիմադրության  հետ կապված  ԹԱ-ի  հետազոտությունները:  Այս  պարամետրը  համարժեք  է  Դիխոտոմիկ բաժանման մեթոդի N պարամետրին: Վերլուծման սկզբում կատարվում է մոդելավորում դիմադրության մինիմալ և մաքսիմալ արժեքների համար: Դրանից հետո, կախված այդ մոդելավորման  արդյունքներից,  վերլուծումը  շարունակվում  է  հաջորդական  կամ  էլ զուգահեռ    եղանակներով՝ ռեժիմներում: ", "resistor_min 93750 resistor_max 95000 iteration_number 10 Նկար 3.8.  Դիմադրության պարամետրերի նկարագրությունը կառավարման ֆայլում՝ օրինակ Զուգահեռ        ռեժիմ՝  դա  նախնական  մոդելավորման  արդյունքների  ստուգման եղանակ  է:    ԱՀ-ը  անցնում  է  այս  ռեժիմին  երբ  մոդելավորման  արդյունքները  Rmin  և Rmax  դիմադրությունների  համար  տվել  են  նույնատիպ՝  միաժամանակ  «սխալ»  կամ «անսխալ» արդյունքը: Զուգահեռ ռեժիմի  դեպքերն են. արժեքի  համար:  Դա  նշանակում  է  որ  մինիմալ  դիմադրության  արժեքի  կետը սխալ է սահմանված: ", "Rmax արժեքների համար միաժամանակ: ", "Նշված այս երկու դեպքում, ԱՀ -ը անցնում է հետազոտման – Զուգահեռ  ռեժիմ: Այս դեպքում  անսարքության  մոդելավորման  կետերի  քանակը  և  այդ  կետերին համապատասխան անսարքությունների դիմադրությունների արժեքները հաշվարկվում են հետևյալ ձևով. -  Մոդելավորման կետերի քանակը հավասար է իտերացիաների քանակին՝ «i» -ին: ", "Յուրաքանչյուր կետում մոդելավորման դիմադրության արժեքը՝ Rn-ը հավասար է. Rn = Rmin +  n * Rinc ,     որտեղ - 102 - - n {1…i} , և հաշվարկվում է հետևյալ բանաձևով. Rinc= (Rmax-Rmin)/i - Rinc - դա գումարվող դիմադրության արժեք է, որը հաստատուն փոփոխական է SPICE մոդելավորում Rn= Rmin+ n*Rinc Այո Եթե n <= i Ելքային ֆայլերի գեներացում: ", "Ոչ Ավարտել Նկար 3.9.    Դիմադրության համապատասխանեցման ալգորիթմը - Զուգահեռ ռեժիմի  աշխատանքի բլոկ-սխեման Զուգահեռ ռեժիմի բլոկ-սխեման ներկայացված է Նկար 3.9-ում: Զուգահեռ ռեժիմի նպատակն է կատարել մոդելավորման արդյունքների լրացուցիչ՝ վերահսկող ստուգում: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
{"paragraph_source_docs": [2, 2, 2, 4, 2, 2, 2, 2, 2, 2], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraphs": ["ռանգ,  ստանում  են  առավելագույն  ռանգ  ունեցող  շղթայի  ռանգը,  իսկ  նրանց  ելքային շղթային տրվում է  1-ով ավել ռանգ։ ", "սկզբնական վիճակում կլինի` Եթե  ci    տարրի  ռանգը  նշանակենք ,  իսկ  wi  շղթայի  ռանգը՝  r(wi),  ապա (3.3) որտեղ - -ը i -րդ տարրի մուտքային շղթաներից առավելագույն ռանգ ունեցողն է, իսկ –ը i -րդ տարրի ելքային շղթայի ռանգն է: ", "),  ապա  դա  նշանակում  է,  որ  գրաֆում  գոյություն  ունի  տարրերի  այնպիսի հաջորդականություն,  որը  կազմում  է  փակ  շրջան՝  ցիկլ։  Անհրաժեշտ  է  գտնել չռանգավորված տարրերի այդ ցիկլը: ", "ՀՆԹՑ-ի նախագծման  բնութագրերը գնահատող շաբլոնները առանձնացվում են  RTL կոմպիլյատորների  հիերարխիայի  յուրաքանչյուր  մակարդակի  համար  և  աշխատում  են մեկը  մյուսից  անկախ'  ծրագրային  համակարգի  հետ  աշխատելու  ճկունությունն ապահովելու համար  (Նկար  35): ", "Այս  քայլում  պետք  է  սկսենք  կամայական  տարրից՝ ,  որը  չունի  ռանգ` Եթե  տարրը  ռանգ  չունի,  դա  նշանակում  է,  որ  նրա  գոնե  մեկ  մուտքային  շղթա՝ ռանգ չունի, այլապես 2-րդ քայլում , տարրը կռանգավորվեր։ Գրանցում ենք ,  -ն և շարունակում հետևյալ կերպ։ ", "Հաշվի  առնելով,  որ  ունենք  ցանկացած  շղթայի  սկզբին  և  վերջին  միացված  բոլոր տարրերը,  հետևաբար՝  կգտնենք շղթայի  սկզբին  միացված  տարրը՝ -ն,  որը  չունի ռանգ,  հակառակ  դեպքում շղթան  կունենար  ռանգ:  Գրանցում  ենք  նաև տարրը  և կունենանք  մեր  որոնելի  ցիկլի  արդեն  2  տարրերի  հաջորդականություն՝ , ։ ", "Այսպես  շարունակ  շարժվում  ենք  այնքան  ժամանակ,  մինչև  հասնենք  արդեն  իսկ  մեզ մոտ գրանցված տարրը նորից գրանցելուն։ Այստեղ արդեն գտանք մեր որոնելի ցիկլերից մեկը։ ", ",  …    հանվում  է  1  շղթա, որը նշված տարրերի ցիկլի 2 տարր իրար էր կապում։ Արդյունքում՝ ցիկլը փոխարկվում է ուղղակի տարրերի հաջորդականության։ ", "Այս քայլից հետո  վերադառնում ենք 2-րդ քայլին: Այս ամենը կատարվում  է այնքան ժամանակ, մինչև 2-րդ քայլից հետո բոլոր տարրերը ռանգավորվեն։ ", "ռանգավորումից հետո կունենա հետևյալ տեսքը (աղ․  3.3): "]}
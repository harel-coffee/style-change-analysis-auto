{"paragraph_source_docs": [4, 1, 1, 1, 1, 1, 2, 3, 4, 1, 1, 0, 0, 3, 4, 2, 1, 1, 1, 1, 4, 1, 0, 1, 2], "paragraphs": ["Այսպիսով,  նանոչափական  հիշող  սարքերի  համար  թեստային լուծումներ գեներացնող  Բ\"Ո_  կոպիլյատորների  նախագծման  բնութագրերի  արագ  գնահատման մեթոդի  մշակման  խնդիրը  շարունակում  է  մնալ  արդիական:  Ավելին,  ներկառուցված հիշողությունների  ՀՆԹՅ-ի  բարդացման  պատճառով  բարդանում  է  նաև  Բ\"Ո_ կոմպիլյատորների  հիերարխիան  և ի  տարբերություն նախկին  կոմպիլյատորների  առաջ է  գալիս  ք^\"Ո_  կոմպիլյատորների  ամբողջ  հիերարխիայի  նախագծման  բնութագրերի արագ գնահատման  խնդիրը: ", "Հետազոտման  աշխատանքների  ընթացքում  հիշողության  կոմպիլյատորների միջոցով  գեներացվել  և  հետազոտվել  են  հիշողության  նմուշներ  հարյուրավոր  տարբեր չափսերի և  տեխնոլոգիական պրոցեսների համար (250, 180, 130, 90, 65, 55, 45, 28, 16, 14 նանոմետր),  զանազան  տեսակի  (արագագործ,  բարձր  խտության,  ցածր  հզորության), մեկ  և  ավելի  մուտքանի ՊԴՀՍ-եր:  Հիշողության  նմուշների  կառուցվածքների հետազոտման  արդյունքում  իրականացվել  է  հիշողության  սարքում  կառուցվածքային խճողումների  տեսակների  նկարագրումը  և  դասակարգումը:  Աշխատանքի  այս  փուլի արդյունքները ներկայացված են  արտոնագրում  [11]:  Ժամանակակից ՀՍ-ի նկարագրված կառուցվածքային խճողումների քանակը տասնինն է:  Բայց խճողումների տեսակների  այդ  քանակը  կարող  է  մեծանալ՝  ՀՍ-ի  նախագծման  ընթացքում, հիշողության  սարքերում  կառուցվածքային  նոր  լուծումների  կիրառմանը    զուգահեռ: ", "Ընդհանուր  դեպքում,  հիշողությունը  նկարագրող  մոդելը  բաղկացած  է  երկու  մասերից՝ հիշողության  վարքագծային  և  կառուցվածքային    մասերից  [11]:  Այս  աշխատանքի սահմաններում  մենք  կդիտարկենք  միայն  հիշողության  մոդելի    կառուցվածքային - 42 - մոդելի  գեներացման  հետ  կապված  խնդիրները:  Կառուցվածքային  մոդելը  կազմող կառուցվածքային  խճողման  տիպերը  և  դրանց  հատկությունները  մանրամասնորեն ներկայացված են [11]-ում: Թվարկենք կառուցվածքային խճողումներից մի քանիսը՝ բառային և բիթային գծերի միջև, Նշենք,  որ  հիշողության  մոդելի  կառուցվածքային  խճողումների  տրոհումը  տեսակների թույլ  է  տալիս  արդյունավետ  կերպով լուծել  հիշողությունների  թեստավորման, ախտորոշման և նորոգման խնդիրները՝ օգտագործելով միայն այդ պահին  պահանջվող, որոշակի կառուցվածքային միավորների խումբը: ", "Մեկ  այլ  կարևոր  խնդիր  է  հիշողության  մոդելի  ներկայացման  ձևաչափի ընտրությունը: Մոդելի  ձևաչափը պետք է բավարարի հետևյալ պահանջներին. ա)  մոդելի    ձևաչափը  պետք  է  հնարավորություն  ընձեռի      դյուրին  կերպով նկարագրել  ինչպես  ներկայումս  օգտագործվող,  այնպես    էլ  մոտակա  ապագայում հիշողություններում  տեսականորեն  կանխատեսելի    կառուցվածքային  խճողումների տեսակները, - 43 - բ)  ձևաչափը  պետք  է  հնարավորություն  տա  պարամետրացված  ձևով  նկարագրել խճողումների տեսակները, գ)  այդ  ձևաչափով  ներկայացված  ինֆորմացիան  պետք  է  հեշտությամբ  մշակվի  և ինտեգրացվի կիրառական  այլ ծրագրային միջոցների կողմից, տարբեր ԱՀ-երում: ", "Հետազոտությունների  արդյունքում՝  ՀՍ-ի  կոմպիլյատորներում  կառուցվածքային մոդելի  ներկայացման  ձևաչափ  է  ընտրվել  սցենարների    նկարագրման  նպատակով ստեղծված  TCL  (Tool  Command  Language)  լեզուն, իսկ  հիշողության  նմուշների կառուցվածքային մոդելի նկարագրության համար օգտագործել է  տեքստային ձևաչափը [11]:  TCL  ծրագրավորման լեզուն  մեծ  տարածում  ունի  էլեկտրոնային  սարքեր նախագծող  ընկերություններում  և լայնածավալ  օգտագործվում է  սարքերի թեստավորման  բնագավառում՝  որպես թեստավորման սցենարներ նկարագրող գործիք [28]:  Մինչ  TCL  լեզուն  օգտագործելը  հիշողության  կոմպիլյատորներում    խճողման մասին  ինֆորմացիան  ներկայացվում  էր  բազմաթիվ  աղյուսակների  տեսքով՝  DOC  կամ TXT  ֆայլերում:  Ընդհանուր  առմամբ,  մուտքային  տվյալների  DOC ֆայլերում աղյուսակային  ներկայացումը  անհարմար  ձևաչափ  է  հանդիսանում  ավտոմատացման Compiler information MIG Graphic tool Compiler scramble.tcl file Նկար 1.22.   Հիշողության  կոմպիլյատորի խճողման ֆայլի  գեներացումը համար:  Բայց  մյուս  կողմից  TCL  լեզվով  հիշողության  խճողումների  տեսակները նկարագրելը (ծրագրավորելը),  այնուհետև  այդ  մոդելում  ծրագրային  սխալների վերացումը իր հերթին, բարդ գործընթաց է և նախագծող ճարտարագետից պահանջում է բարձր  որակավորում  և  հատուկ  գիտելիքների  առկայություն:  Հիշողության  խճողման ինֆորմացիայի  ստանդարտացման  և  ներդրման  աշխատանքների  սահմաններում՝ ճարտարագետի  աշխատանքը  հեշտացնելու  նպատակով  ստեղծվել  է  կառուցվածքային մոդելի  գեներատոր  ԱՀ    MIG  (անգլերեն՝  Memory  Information  Generater)  ծրագրային գործիքը [17] (Տես՝  նկ.  1.22),  որը  հնարավորություն  է  տալիս  գրաֆիկական - 44 - ինտերակտիվ  միջավայրում  նկարագրել  հիշողության  կոմպիլյատորի  խճողման տեսակները  և  այնուհետև  ավտոմատ ձևով գեներացնել նկարագրությանը համապատասխան  TCL  կոդը՝  scramble.tcl  ֆայլը:  MIG  ծրագրային  ԱՀ-ի  նկարագրումը դուրս    է  այս    աշխատանքի  սահմաններից,  բայց  հարկ  է  նշել,  որ  այն  (MIG  ԱՀ-ը) հիշողության    խճողման  ինֆորմացիայի  ստանդարտացման  [11]  և  կիրառման  առաջին արդյունքն է հանդիսանում: ", "MIG  գործիքը  էականորեն  հեշտացնում  է  հիշողության  կոմպիլյատորի  խճողման նկարագրման  գործընթացը  և  բացառում  է  սխալները  TCL  կոդի  գեներացման ընթացքում:  Իհարկե,  կոմպիլյատորի  խճողման  TCL  կոդի  վերջնական  տարբերակը՝ հիշողության  սարքերի  կառուցվածքային  մոդելը,  հետագայում  անցնում  է՝  բոլոր տեսակի  մոդելների  համար  պարտադիր  պայման  հանդիսացող  [12], [28],  [29], համապատասխանության ստուգման փուլերով: ", "Ինչպես արդեն նշվել է, ժամանակային տեղաբաշխման մեթոդները երկուսն են՝ ուղու վրա  հիմնված  և  շղթայի  վրա  հիմնված  մեթոդներ:  Արդյունաբերական  էլեկտրոնային նախագծման  ավտոմատացման համակարգերում կիրառվող ժամանակային - 35 - տեղաբաշխման  ալգորիթմները,  որպես  կանոն,  աշխատում  են  ուղու  վրա  հիմնված մեթոդներին  համապատասխան՝  իրագործելով  բազմակրկնություններ,  երբ  փորձ  է արվում  փոքր  ժամանակային  պահուստով  շղթաներից  կազմված  ուղիների  վրայի տարրերի  վերատեղաբաշխումների  ճանապարհով  փոքրացնել  դրանք  կապող շղթաների  երկարությունները՝  դրանով  իսկ  կրճատելով  այդ  ուղիների  հապաղումները [34-37]։ ", "•  Վերահսկվողն  այն  ուսուցման  տեսակն  է,  որի  դեպքում  ցանցին  տրվում  են մուտքային  և  պահանջվող  ելքային  արժեքների  ուսուցողական  զույգերի  խմբեր: ", "•  Մշակել  մեթոդ նանոչափական  հիշող  սարքերի  համար  թեստային լուծումներ գեներացնող կոմպիլյատորների  հիերարխիայի նախագծման բնութագրերի  արագ գնահատման  համար: ", "Անսարքությունների  դասերը  [25],  որոնց  համար  նախագծվում  էին  այդ  ալգորիթմները, դրսևորվում են հիշողության հասցեներին դիմելիս կանոնավոր հաջորդականությամբ: [24]- - 45 - ում  ժամանակակից հիշողության  սխեմաներում  առաջացող  անսարքությունների որոշակի  դասերի  հայտնաբերման  համար  առաջարկվում  է  ալգորիթմ,  որը  պետք  է կիրառի  արժեքի  պահպանման  և  ընթերցման  գործողությունները  ֆիզիկապես  զույգ (կենտ)  համարներ  ունեցող  տողերի  (սյուների)  վրա  գտնվող  բջիջներում:  Նման  տիպի ալգորիթմների  ճշգրիտ  իրականացման  համար  անհրաժեշտ  է  իմանալ  հիշողության տրամաբանական  և  ֆիզիկական  հասցեների  համապատասխանությունը:  Հիշողության հասցեի  խմբի  (address  bus)  մուտքերին  միացած  ազդանշանները  տրամաբանորեն բաժանվում  են  երկու  մասի.  մի  մասը  մուտք  են  հանդիսանում  բջիջների  երկչափ զանգվածում  ֆիզիկական  տողերի, իսկ մյուս մասը`  ֆիզիկական  սյան ապակոդավորման  սխեմաների  համար:  Տրամաբանական  հասցեի  մյուս  մասը,  որը մուտք  է  հանդիսանում  ֆիզիկական  սյան  ապակոդավորող  սխեմայի  համար, կանվանենք  տրամաբանական  սյան  հասցե:  Հասցեների  խճողումը  նկարագրող ֆունկցիան կարելի է ներկայացնել հետևյալ տեսքով (12). ADR(BKj, CMi,a1,a2,…amax) = Fadr {N, C, P1,P2,…,Pm}      , որտեղ (12) BKj – բանկերի քանակն է՝ հիշողության կոմպիլյատորում, CMi -  սյուների  ապակոդավորիչի  գործակիցներն  են՝  հիշողության կոմպիլյատորում, a1,a2,…amax  - հիշողության տրամաբանական հասցեներն են P1,P2,…,Pm - հիշողության ապակոդավորիչի Ֆիզիկական հասցեներն են: ", "Աղյուսակ  1.4-ում  տրված  է  հասցեների  խճողումը  ընդհանուր դեպքում աղյուսակային  տեսքով  ներկայացումը:  Լրացնելով  աղյուսակի  դաշտերը  հիշողության բանկերի  (BK)  և  սյուների  ապակոդավորման  (CM)  արժեքների  համար  կստանաք հիշողության  հասցեների խճողումը պատկերող աղյուսակը: ", "Էլեկտրոնային  փոստարկղի  պարունակությանը  կարելի  է  հասանելիություն ստանալ  ստանդարտ  արձանագրությունների  (protocol)  օգնությամբ։  Գոյություն  ունեն էլեկտրոնային  փոստերի  հետ  աշխատող  հավելվածներ,  որոնք  ծանուցման  ինֆո- կոմունիկացիոն  լուծումներ  են  առաջարկում։  Այս  համակարգերը  հասանելիություն  են ստանում  օգտատիրոջ  փոստարկղին՝  նրա  էլեկտրոնային  հասցեի  և  գաղտնաբառի միջոցով10։ Դրանք, ստանդարտ արձանագրությունների միջոցով՝ ինչպիսիք են POP311-ը կամ  IMAP12-ը,  պարբերաբար  դիմումների  շնորհիվ  կարողանում  են  տեղեկանալ փոստարկղում հայտնված նոր նամակների մասին: ", "Այս  մեթոդով  աշխատող  համակարգերից  առավել  տարածված  են  փոստային ծրագրային  կլիենտները  [12]։  Ամենից  շատ  տարածված  փոստային  կլիենտներից ուսումնասիրվել է «Microsoft» ընկերության կողմից մշակված «Outlook»13 ինտերնետային ծրագրային փաթեթը։ ", "Սիգմոիդ ֆունկցիան մոնոտոն է և տարածվում է դիֆերենցելի ամբողջ տիրույթում, որի հետևանքով լայն կիրառություն է ստացել արհեստական նեյրոնային ցանցերում: ", "Նանոչաւիական  հիշող սարքերի  համար  1Հ1՜Լ  թեստային լուծումներ  գեներացնող կոմպիլյատորների  նախագծման բնութագրերի  արագ գնահատման  մեթոդի  մշակումը նախագծման  բնութագրերի  և  մուտքային  պարամետրերի  միջև կախվածությունն  արտահայտող մոդելը Ինչպես  ներկայացվեց  1  գլխում  հիշող  սարքերի  համար  թեստային  լուծումներ գեներացնող կոմպիլյատորների  նախագծման  բնութագրերը  հնարավոր  է գնահատել երկու հիմնական  մոտեցումների  միջոցով:  Առաջին  մոտեցման  դեպքում  ք^\"Ո_ կոմպիլյատորների  կողմից  գեներացված  բոլոր  հնարավոր  նմուշների  նախագծման բնութագրերը  գնահատվում  են  սինթեզի  գործիքների  միջոցով:  Այս  մոտեցումը ապահովում  է  բարձր  ճշտություն,  սակայն  պահանջվում  են  մեծ  ժամանակային ռեսուրսներ,  ինչպես  նաև  մեծ  ծավալի  հիշողություն  բոլոր  հնարավոր  նմուշների նախագծման  բնութագրերը  հիշելու  համար:  Երկրորդ  մոտեցումը  հնարավորություն  է տալիս  նմուշների  գեներացման  ժամանակ  մշակված մոդելների  օգնությամբ գնահատել ք^\"Ո_  նկարագրությունների  նախագծման  բնութագրերը:  Այս  մոտեցումն  ավելի արագագործ է,  սակայն  ճշտությամբ զիջում  է առաջինին: ", "(1.14) վերին սահմանները [39]: ", "Սյուների  խճողման  պատճառ  կարող  են  դառնալ  սյուների  ապակոդավորիչի կառուցվածքը կամ էլ սյուների ոլորապտույտը հիշողության զանգվածում: Հիշողության զանգվածի  տարբեր  մասեր  կարող  են  ունենալ  տաբեր  սյուների  խճողում,  արդյունքում թեստավորման  BP-ները  այդ  մասերում  մեկը  մյուսից    կտարբերվեն:  Հիշողության կոմպիլյատորի սյուների խճողումը նկարագրող ֆունկցիայի տեսքն է՝ C k = Fcol {In , CM c} ,        որտեղ (14) C k - դա նմուշի տրամաբանական սյան  հասցեն է և  k  {0,1,…, (#PC-1)}, In – դա նմուշի ֆիզիկական Մ/Ե հասցեն է և  n  {0,1,…, (#NB-1)}, CM c  - դա սյուների ֆիզիկական  համարն է և  c  {0,1,…, (#CM-1)}, - 49 - Սյուների  խճողումը  սահմանվում  է  յուրաքանչյուր  Մուտք/Ելք  հանգույցի  սյան  համար անհատականորեն:    Աղյուսակ  1.7-ում  տրված  է  սյուների  խճողումը    աղյուսակային ներկայացման ընդհանուր ձևը: ", "Սյուների խճողման աղյուսակային ներկայացման ձևը Աղյուսակ 1.7 Col Col I/On Col (CM-1) TCL  «col_scramble_logical_to_physical» պրոցեդուրան, ստանալով Մուտք/Ելք-ի համարը և հարցվող սյունի համարը, վերադարձնում է թվերի զույգ հաջորդականություն՝  առաջին թիվը Մուտք/Ելք-ի «n»-ի համարն է իսկ երկրորդ թիվը համապատասխան  ֆիզիկական սյունի համարն է: Օրինակ {(0 0) (0 1) (0 2) (0 3) (1 3) (1 2) (1 1) (1 0) (2 0) (2 1) (2 2) (2 3)} նշանակում  է,  որ  ՀՍ-ը  ունի  երեք  Մուտք/Ելք  (n={0,  1,  2}  )  յուրաքանչյուրում  չորս  սյուն (CM=4):  Ընդ  որում,  սյուների  ֆիզիկական  դասավորվածությունը  ըստ  Մուտք/Ելք-ի հետևյալն  է.I/O  0  {0  1  2  3},  I/O  1  {3  2  1  0},  I/O  2  {0  1  2  3}:  Ինչպես  տեսնում  ենք  I/O1-ի սյուները ֆիզիկապես դասավորված են հակառակ համարակալությամբ: Իսկ մեկ այլ proc col_scramble_logical_to_physical { phys_IO log_col } { TCL  պրոցեդուրա «col_scramble_physical_to_logical»  ապահովում է հկադարձ՝ ֆիզիկականից  դեպի  տրամաբանականը,  սյուների  դասավորման  տեղեկության global scramble_db տրամադրումը: ", "proc col_scramble_physical_to_logical { phys_IO phys_col } { global scramble_db - 50 - Մ/Ե բիթային գծերի դասավորության խճողումը Մ/Ե  T  և  B բիթային  գծերի  դասավորության  խճողում  նկարագրում  է  բիթային գծերի  բաշխումը  հիշողության  զանգվածի  և  Մուտքային/Ելքային    հանգույցների  միջև: ", "Բիթային  գծերի  դասավորվածությունը հիշողության  զանգվածի  մեկ  տողում Հիշողության զանգվածը WL Բջիջ 1 Բջիջ 2 Մ/Ե i Մ/Ե i+1 Նկար 1.23. Մ/Ե բիթային գծերի բաշխումը կառուցվում է տողում բջիջների բոլոր բիթային գծերի բաշխման միջոցով  (Տես՝ նկ. 1.23), որտեղ i=(0,  1,…(NB-1)):  Համաձայն  նկ.  1.8-ի  և  աղ.  1.1-ի,  բիթային  գծերի դասավորվածությունը ՀՍ-ի բջջում նկարագրվում  է բանաձևով՝ , որտեղ (15) Vlogic  - բջիջի տրամաբանական արժեքն է Vphysical – բջիջի բիթային գծի ֆիզիկական արժեքն է Իսկ բիթային գծերի բաշխվածությունը զանգվածի տողում կնկարագրվի բանաձևով՝ RBL = {FBL0, FBL1,… FBL(#PC-1) (16) PC  -  դա  հիշողության  սյուների    քանակն  է  և  հաշվարկվում  է  ըստ  (3)  բանաձևի:  ՀՍ-ի տողում  T և B բիթային գծերի հնարավոր չորս տեսակի բաշխվածությամբ՝ ա) {TB TB TB TB},  բ)  {BT  BT  BT  BT},  գ)  {TB  BT  TB  BT},  դ)  {BT  TB  BT  TB}:  Մ/Ե  T  և  B բիթային  գծերի բաշխվածությունը յուրահատուկ է յուրաքանչյուր հիշողության նմուշի համար: Մ/Ե T և - 51 - physicalicphysicalicBLVtoinverseisVifBBVtoequalisVifTBFloglog,, B  բիթային  գծերի  դասավորության  խճողման  նկարագրման  աղյուսակային  ձևը ներկայացված է աղյուսակ 1.8-ում: ", "Իսկ  հիշողության  բառերի  քանակի  աճի  պատճառով  առաջանում  է  հիշողության սյուների  և/կամ  տողերի  վերծանիչի  կարգայնության  2  հիմքով  լոգարիթմական  աճ: ", "Մ/Ե  T  և  B  բիթային  գծերի  խճողումը  իրականացվում  է  TCL  «io_bl_mirroring» պրոցեդուրայով:  Ստանալով  որպես  մուտքային  տվյալները  Մուտք/Ելք  հանգույցի  և համապատասխան  սյունի  ֆիզիկական  համարները՝  «io_bl_mirroring»  պրոցեդուրան վերադարձնում է T և B բիթային գծերի դասավորվածությունը: ", "Եզրակացություն։  Այսպիսով՝  հասցեատիրոջ  նախաձեռնությամբ  ծանուցման մեթոդը հնարավոր է իրականացնել նաև ծրագրային փոստային կլիենտների օգնությամբ։ ", "I/O i - 52 - Բջիջ 1 Բջիջ 2 WL WL Բջիջ 1 Բջիջ 2 Նկար 1.24.  Սյուների պարզ ոլորապտումը Նկար  1.24-ում  ներկայացված  է  սյուների  ոլորապտման  պարզ  օրինակը:  Նկարում պատկերված  ոլորապտումը կոչվում է պարզ, քանի որ այն կատարվում է անմիջական հարևան  սյուների  միջև  և  առանց  բիթային  գծերի  ոլորապտման:  Աղյուսակ  1.9-ում ներկայցված է սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը, Աղյուսակ 1.9 Սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը Ոլորապտվող I/O i տողի հասցեն Column0  Column1  …  Column(CM-1) <Row1> <Row2> <Rowk> որտեղ <Row1> ցույց է տալիս այն տողը, որից վերև կատարվել է սյուների ոլորապտումը, իսկ  «Column»  դաշտում  նշվում  է՝  համապատասխան  սյան  համար՝  կ՞ա  ոլորապտում, թ՞ե ոչ, և եթե ընթացիկ սյան համար կա ոլորապտում, ապա նշվում է այն սյան համարը, որի  հետ  կատարվել  է  ոլորապտումը:  Հեշտության  համար,  սյուների  ոլորապտման զույգերը  կարող  են  նկարագրվել  բանաձևով:  Օրինակ՝  սյուների  ոլորապտման  հասցեն կարող է հաշվարկվել համաձայն բանաձևի՝ Cj,  Cj  , որտեղ  Cj ոլորապտըտվող սյան - 53 - համարն է, իսկ  ՝ շեղման հաստատուն գործակիցն է, այդ ժամանակ  Cj   ցույց կտա այն  սյան  հասցեն,  որի  հետ  կատարվել  է    ոլորապտումը:  Հասկանալի  է,  որ  սյուների ոլորապտումը  կարող  է  իրականացված  լինել  հիշողության  զանգվածի  մի  քանի  {1, տարբեր Մ/Ե հանգուցներում սյուների նկատմամբ նույնպես: ", "Ստանդարտ բջիջների գրադարանի տվյալներից օգտագործվում են՝   տարրերի   երկրաչափական չափսերը՝ , i= , որտեղ և համապատասխանաբար տարրի երկարությունը և բարձրությունն են,   տարրերի  տեսակարար  դինամիկ  հզորությունները  գրադարանի անվանական արագագործության դեպքում՝ ,   թվային  ստանդարտ բջիջների  գրադարանի  աշխատանքային հաճախությունը: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
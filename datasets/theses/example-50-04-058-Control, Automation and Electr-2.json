{"source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraph_source_docs": [2, 0, 2, 4, 2, 0, 2, 2, 2, 0, 2, 2, 2, 0, 1, 2, 1, 2, 2, 2, 2, 1, 4, 2, 0, 3, 3, 2, 3, 2, 2, 1, 2, 2, 3, 1, 2, 2, 1, 1, 3, 0, 2, 2, 2, 0, 2, 2, 2, 2], "paragraphs": ["ՈՒղու  վրա  հիմնված  մեթոդների  առավելությւնն  է  գլոբալ  օպտիմումին  հասնելու պոտենցիալ հնարավորությունը, իսկ  թերությունն է մեծ ալգորիթմական բարդությունը: ", "Աղյուսակ ցուցադրված  են  հատկանիշների  և  համակարգերի համապատասխանությունները։  Որոշ  հատկանիշներ  առկա են  դիտարկված համակարգերից  մի  քանիսում  և  բացակայում  են  մյուսներում,  օրինակ,  որևէ համակարգում  նամակն  ուղարկողի  ու  հասցեատիրոջ  նախաձեռնությամբ  ծանուցման հնարավորությունները  համատեղ  իրականացված չեն։  Կան  նաև  այնպիսի հատկանիշներ,  որոնք  իրականացված  չեն  որևէ  համակարգում,  սակայն  ֆունկցիոնալ առումով  կարող  են  պահանջված  լինել՝  հատկապես  ներքին  ցանցերում  առավել տեղայնացված  խնդիրների  լուծման  համար։  Օրինակ՝  ներքին  ցանցերում  կիրառման հնարավորությունը,  արգելափակման  հնարավորությունը,  հայատառ  տեքստերի տրանսլիտերացիան, բաց աղբյուր տարբերակով հասանելիությունը։ ", "Վերոհիշյալ երկու մոտեցումներն ունեն մեկ ընդհանուր թերություն, այն է, որ դրանք հաշվի  չեն  առնում  թվային  սխեմաների  տրամաբանությունը  սխեմայի  տարրերի աշխատանքի  տրամաբանական  հաջորդականությունը  տեղաբաշխելիս:  Հետևաբար, երկու  դեպքում  էլ  թույլ  է  արտահայտված  տեղաբաշխման  արդյունքի  և  սխեմայի աշխատանքի տրամաբանական կապը: ", "Առաջին  դեպքում  անորոշ գործակիցներն (a,  է>) որոշելու համար կիրառվում է գծային ռեգրեսիա:  Իսկ  փոքրագույն քառակուսիների  սխալանքը հաշվվում  է հետևյալ բանձևով [43]' «2 = Տ ն ւ № ՜  (a + i   * x,))2  (19) Երկրորդ  դեպքում  անորոշ գործակիցները  (ao,  ai... an)  որոշելու  համար  կիրառվում  է պոլինոմիալ ռեգրեսիա:  Այս  դեպքում փոքրագույն քառակուսիների սխալանքը հաշվվում է հետևյալ բանաձևով [43]՝ R2  = 'ԼՆւ№  ՜  Օօ + a1xi+ ...+ a 1xik))2,  որտեղ i=0,1,...,n  (20) թեստային  լուծումներ  գեներացնող ք^\"1\"Լ  կոմպիլյատորների  նախագծման  բնութագրերի արագ հիմնված մեթոդի մեթոդի Նկար 20  /?7՜Լ  կոմպիլյատորի նախագծման բնութագրերի գնահատման մեթոդի իրականացման թլոկ-սխեման' փոքրագույն քառակուսիների մեթոդի  կիրառմամթ հիշող  սարքերի  համար  թեստային  լուծումներ  գեներացնող  ք^\"1\"Լ  կոմպիլյատորի ընտվում  են  մոտարկման  կետեր: ", "ԻՍ  ֆիզիկական  նախագծման  ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական առանձնահատկությունների  հաշվառման  առաջարկվող  մոտեցումը  ենթադրում  է հետևյալ խնդիրների հաջորդական լուծում.   նախագծվող  սխեմայի  տրամաբանական  մակարդակի  փականային  Verilog նկարագրության փոխակերպում ազդանշանների հոսքի գրաֆի (ԱՀԳ-ի),   սխեմայի տարրերի ռանգավորում,   տարրերի  տեղաբաշխումը՝  համաձայն  դրանց  ռանգավորման,  այսինքն՝ «փափուկ» բլոկի ստացում,   ստացված  «փափուկ»  բլոկի  տարրերի  վերատեղաբաշխում՝  հաշվի  առնելով կոնստրուկտիվ սահմանափակումները, այսինքն՝ «կոշտ» բլոկի ստացում։ ", "Մյուս  կողմից,  ոչ  սմարթ  բջջային  հեռախոսները  շարունակում  են  կիրառվել օգտատերերի  որոշ  խմբերի  կողմից։ Ժամանակակից  սարքավորումները  ավանդական բջջային  ծառայություններից  բացի,  օժտված  են  բազմաթիվ  հնարավորություններով (օրինակ՝  բարձր  ճշտությամբ  տեղորոշում),  որոնց  կիրառումը  որոշ  բնագավառներում առաջացնում  է  անվտանգության  ապահովման  բազմաթիվ  խնդիրներ [2]։  Հատկապես պետական,  ռազմական  և  բիզնես  ոլորտների  աշխատակիցները,  առավել  բարձր տեղեկատվական անվտանգության նպատակով գերադասում են օգտագործել այնպիսի բջջային  հեռախոսներ,  որոնք  ունեն  ոչ  բարդ  ծրագրային  ապահովում  և  չունեն համացանցին միանալու հնարավորություն: Օրինակ, պաշտպանության բնագավառում աշխատակազմին  ծառայության  ընթացքում  թույլատրվում  է  կիրառել  միայն  ոչ  սմարթ բջջային հեռախոսներ։ Այդուհանդերձ, չնայած բջջային կապի շուկայում սմարթֆոնների գերակայությանը,  ոչ  սմարթ  բջջային  հեռախոսների  մասնաբաժինը  կազմում  է ընդհանուր թվի գրեթե մեկ երրորդը [3]: ", "Տրամաբանական սխեմայի Verilog նկարագրից ազդանշանների հոսքի գրաֆի ստացման ավտոմատացված միջոցի մշակումը Ազդանշանների հոսքի գրաֆը բաղկացած է հանգույցներից (գագաթներից) և ուղղորդված կողերից, որտեղ ուղղորդված կողերը ներկայացնում են տվյալների կախվածությունը։ Նկ․ 2․ 1-ում պատկերված է (ԱՀԳ-ի) պարզագույն մոդել։ ", "- 46 - ա) բ) գ) Նկ․  2.1․   ԱՀԳ-ի  պարզագույն օրինակ ԱՀԳ-ում  հանգույցները  ներկայացնում  են  տվյալների  գործողություններ,  օրինակ՝ հաշվողական գործողություններ [42,43]։ Որոշ կողեր վերջանում են ինչ-որ հանգույցում, բայց  կարող  են  չսկսվել  որևէ  հանգույցից  և  հակառակը։  Հետևաբար,  դրանց  կարելի  է Նկ․  2.2․   ԱՀԳ-ում  կողերի  դասակարգումը՝  ա) մուտքային, բ)  միջանկյալ, գ) ելքային դասակարգել 3 տեսակի՝  մուտքային, միջանկյալ և ելքային (նկ․ 2․ 2)։ ", "ԱՀԳ-երը  կարող  են  ներկայացվել  ծառերի  տեսքով,  այսինքն՝  ացիկլիկ  գրաֆի տեսքով։  Դա  թույլ  է  տալիս  ավելի  հեշտ  վերլուծել  գրաֆը,  բայց  սահմանափակում  է դրանց  օգտագործումը։  Հիմնականում  տվյալների  հոսքի  գրաֆն  օգտագործում  են կոմպիլյատորներում։  Անկախ  այն բանից՝ կատարվում են  այդ բոլոր գործուղությունները  հատ  առ  հատ,  թե  մի  քանիսը  միաժամանակ,  գործողությունների - 47 - ցանկացած  հերթականություն  ընդունելի  է,  եթե  դրանք  բավարարում  են  տվյալների կախվածության  պահպանմանը։  Նկատենք  նաև,  որ  ՏՀԳ-ն  ինքն  իրենով  վերջավոր  է․ այն  ոչ  միայն  ունի  վերջավոր  քանակով  հանգույցներ,  այլև  չունի  ցիկլեր,  հետևաբար՝ ՏՀԳ-ում  ցանկացած  տվյալների  ճանապարհ    ունի  վերջավոր  երկարություն։  Տվյալների հոսքի  գրաֆի  ավելի  կոնկրետացված  եղանակ  է  ազդանշանների  հոսքի  գրաֆը  (ԱՀԳ), որը  սովորաբար  օգտագործվում  է  ազդանշանների  մշակման (signal  processing) համար[44]: ԱՀԳ-ն ցիկլիկ ուղղորդված գրաֆ է։  Նկ․  2.3 -ում ցույց է տրված, որ ԱՀԳ-ում ավելանում  է  նոր  հանգույցի  տեսակ՝  հապաղում,  որը սիմվոլով  հանգույցն  է։  Եթե ընդունենք,  որ  այս  հապաղումը  t1  է  մուտքային  S  ազդանշանի  համար,  ապա գործողության արդյունքը ընդհանուր հապաղումով կլինի` (2.1) ԻՍ-ների  ժամանակային  տեղաբաշխում  կատարելու  դեպքում  նշված  հապաղման հանգույցները չեն  կիրառվել,  բայց  փոխարենը  նրանք  հաշվի  են  առնվում միջմիացումների երկարությունների հետ միասին։ ", "վերլուծություն։ ", "Ղեկավարման  հոսքային  մոդելը  ծրագրավորման  մոդել  է,  որտեղ  հրամանները, պրոցեդուրաներն  ու  ֆունկցիաները  կատարվում  են  միայն  այն  ժամանակ,  երբ  բոլոր մուտքային  տվյալները  (փոփոխականներ,  արգումենտներ)  պատրաստ  են։  Ծրագրեր գրելու (մոդելների ստեղծման) համար օգտագործվում են գրաֆիկական լեզուներ, որոնց միջոցով իրականացվում է տվյալների գործընթացների՝ ֆունկցիոնալ սխեմաների, բլոկ - 48 - սխեմաների,  տեսքի  վերափոխման  նկարագրությունը։  Դիտարկենք  տրամաբանական մակարդակի  նկարագրության  վերափոխման  օրինակ,  հիմնված  ISCAS85  գրադարանի c17 verilog նկարագրության վրա [46]։ Ունենք` nand NAND2_1 (N10, N1, N3); nand NAND2_2 (N11, N3, N6); nand NAND2_3 (N16, N2, N11); nand NAND2_4 (N19, N11, N7); nand NAND2_5 (N22, N10, N16); nand NAND2_6 (N23, N16, N19։ ", "G1 G3 G3 G4 Ազդանշանների հոսքի գրաֆը պատկերված է նկ.2.4-ում։ ", "NAND2_0 G8 NAND2_4 G16 NAND2_1 G9 NAND2_5 G17 G2 G5 NAND2_2 G12 NAND2_3 G15 Նկ․ 2.4․  ISCAS85 գրադարանի c17 verilog տրամաբանական նկարագրության ազդանշանների հոսքի գրաֆը Վերլուծելով նկ․ 2․ 4-ը, կարելի է նկատել, որ ցանկացած տեղեկատվական հոսքում (G1,G8,G16…)  տվյալները  տարածվում  են  ազդանշանային  աղբյուրներից  դեպի ընդունիչները  (NAND2_0,  NAND2_4…)։  Ակնհայտ  է,  որ  մեկ  հոսքում  կարող  են  լինել ճյուղավորումներ, զուգահեռ ալիքներ և հակադարծ կապեր։  Զուգահեռ հոսքերը կարող են  լինել  մեկը  մյուսից՝  կախված  և  անկախ։  Ազդանշանների  հոսքի  գրաֆը  այսպիսի տեսքով  ներկայացնելու  համար  օգտագործվում  են  մի  քանի  տեսակ  բլոկներ։  Դրանցից են՝ ազդանշանների  աղբյուրները, ազդանշանների ընդուիչները և միջանկյալ բլոկները, որոնք  հանդիսանում  են  առաջին  երկուսի  համախումբը։  Այդ  բլոկներն  իրենց  հերթին լինում  են  մաթեմատիկական  գրրծողություններ՝  հաշվողական,  տրամաբանական, մատրիցային,  ոչ  գծային  և  այլն։  Verilog  նկարագիր  սինթեզելու  համար  պետք  է  օգտվել - 49 - SAED90  [47]  կամ  այլ  գրադարանից,  որտեղ  նշված  են  ԻՍ-երի  տրամաբանական նկարագրության բոլոր տեսակի բլոկները՝ NAND, AND, NOT, OR, NOR և այլն։ ", "թույլ կտան էլեկտրոնային նամակի միջոցով մեկ կամ մի քանի հեռախոսահամարներով միաժամանակ ուղարկել բջջային հաղորդագրություններ։ ", "Դրանից  հետո,  VPG  գործիքը,  իր  հերթին,      կոմպիլյատորի  scramble.tcl  ֆայլից, ստանում  է  գոտիների  բաշխումը՝ յուրաքանչյուր  SDV  կոնֆիգուրացիայի  համար (vpg.straps  անվանումով):  Այսպիսով, յուրաքանչյուր  կոնֆիգուրացիայի  համար ստացվում  են  գոտիների  բաշխումը  նկարագրող  երկու  ֆայլ՝  մեկը  GDSII  ձևաչափից, մյուսը  հիշողության  կառուցվածքային  մոդելի  (scramble.tcl)  ֆայլից:  Ստացված  ֆայլերի համեմատության  միջոցով  (Տես՝  նկ.  2.6),    SIV-ը  ստեղծում  է  արդյունքները  ամփոփող - 67 - ելքային ֆայլը և գեներացնում  է ամփոփիչ հաղորդագրություն SDV ստուգման ընթացիկ վիճակի մասին: Նկար 2.7-ում տրված են  MPT և VPG ֆայլերի օրինակները: ", "առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց Տրամաբանական  մոդելավորման  ժամանակ  օգտագործվում  են  ֆունկցիոնալ մոդելների  բաղադրիչներ՝  տարրեր։  Ֆունկցիոնալ  մոդելը  հանդես  է  գալիս  «սև  արկղի» տեսքով,  որի  համար  մուտքային  և  ելքային  ազդանշանների  միջև  կապը  տրվում  է բուլյան հավասարումներով կամ ճշտության աղյուսակներով [48]։ Այդպիսի մոդելներում ներքին կառուցվածքը չի հաշվի առնվում։ Կոմբինացիոն տրամաբանական տարրական մոդելներից  են՝  AND,  OR,  NOT,  NAND  և  այլն,  որոնք  համապատասխանում  են  բուլյան ֆունկցիաներին։  Ժամանակային  հապաղումները հաշվի  առնող  մոդելներում ստեղծվում  են  ազդանշանների  հապաղումների  մեծություններ՝  տարրերի  մեկից  մյուսն անցում կատարելիս։ ", "- 68 - VIG MC check.rtb ASV configuration file ASV configuration file ASV configuration file MC scramble.tcl VPG GDS of ASV instance GDS of ASV instance GDSII of ASV instance MIG Pattern  file(IPP) Pattern  file (IPP) Pattern file (IPP) MPT SVP&SIM   files SVP&SIM   files SVP&SIM   files Programmed GDS Programmed GDS Programmed GDSII LVS rule deck LVS Fail Pass ASV END VOG Log Analysis SPICE simulation SPICE file SPICE file SPICE file SPICE model Նկար 2.9.   Հիշողության կառուցվածքային խճողումների ստուգման ASV ԱՀ-ի բլոկ-սխեման Նկար 2.9-ում ներկայացված է ASV-ի ստուգման   բլոկ-սխեման:  Ի սկզբանե նշենք, որ  հիշողության  հասցեների  խճողումների  ստուգման  գործընթացը  (ASV  ստուգումը) ավելի  ժամանակատար  է,  քան  հիշողության  գոտիների  բաշխման  ստուգումը  (SDV), քանի  որ    այն  իր  մեջ  ընդգրկում    է  երկու  հաջորդաբար  կատարվող  և    բավականին ժամանակատար  գործողություններ՝  ա)  նմուշի  GDSII  ձևաչափից  նմուշի  SPICE - 69 - ձևաչափի  սխեմատիկայի  ֆայլի  դուրս  բերումը  (ինչպես  նշել  ենք,    դա  կոչվում  է    LVS գործողություն),  և  բ)  LVS-ի  աշխատանքի  արդյունքում  ստացված  նմուշի    SPICE  ֆայլի մոդելավորումը:  ASV-ի  դեպքուն  VGP  գործիքը յուրաքանչյուր  նմուշի  համար գեներացնում է՝ (IPP)) (Տես՝ նկ. 2.10), ա)  ծրագրավորման  օրինակների  ֆայլերը  (անգլերեն՝  Instance  Programming  Pattern բ)  SPICE  մոդելավորման  համար  անհրաժեշտ՝  վեկտորային  օրինակների  մուտքային ֆայլերը (անգլերեն՝ SPICE vector pattern (SVP)),  և գ) SPICE մոդելավորող ծրագիրը աշխատեցնող՝ պարամետրերի ֆայլերը: ", "Մոդելավորման  եղանակն ընտրվում է՝ հաշվի առնելով խնդրի դրվածքը։ Եղանակների հիմնական  առանձնահատուկություններից  են՝  սխեմայում  ազդանշանի  ժամանակի տարածումը հաշվի  առնելու և համակարգչով մոդելն իրականացնելու հնարավորությունները  [48]։  Ազդանշանի  ժամանակային  հոսքի  եղանակից  կախված մեթոդները լինում  են  սինխրոն (առանց  սխեմայի  տարրերում  ժամանակային հապաղումները  հաշվի  առնելու)  և  ասինխրոն  (հապաղումների  հաշվառմամբ)  [49]։ ", "Նկ.2.5-ում բերված սխեմայի տարրերի մաթեմատիկական մոդելը կլինի՝ :                                                (2.2) Այդ  դեպքում  տրված  սխեման (նկ․ 2․ 5)  ունի  հետևյալ  տրամաբանական հավասարումների համախումբը՝ (2.3)-ում ներկայացված արտահայտությունները ԻՍ-ի փականային մակարդակի verilog (2.3) նկարագրության համար կլինեն՝ nand NAND1(e,a,b);  nand NAND2(f,e,c); nand NAND3(g,d,h);  nand NAND4(h,f,g)։ ", "NAND1 and NAND2 and NAND4 and NAND3 and Նկ․  2.5․     Տրամաբանական  սխեմայի օրինակ - 51 - Ավելի  ընդհանուր  մաթեմատիկական  մոդելը  կարելի  է  ներկայացնել  հետևյալ կերպ` , (2.4) որտեղ -ն  մուտքային  փոփոխականների  վեկտորն  է, -ն՝  ելքային  և  միջանկյալ փոփոխականների վեկտորը ժամանակի t պահին, -ն՝ սխեմայի մուտքային և ելքային փոփոխականների  վեկտորը  ժամանակի՝ պահին, -ը՝  դիսկրետ փոփոխականների  փոխակերպման  օպերատորը  [48]:  Փոփոխականները՝ և վոկտորներում  դիսկրետ  մեծություններ  են։  Տրամաբանական  մոդելավորման  մեջ կիրառվում  են  մոդելներ՝  փոփխականների  հնարավոր  տարբեր  քանակի  արժեքներով։ ", "Երկուական համակարգի մոդելներում և -ն բուլյան փոփոխականներ են։ ", "Ինչպես  տեսնում  ենք,  հիշողության  հիմնական  սյուներից  և  տողերից  ոչ  մեկը  չի պարունակում  ամբողջովին  զրոյական  արժեք,  և  տողերի  (սյուների)  արժեքները  չեն կրկնվում, որը իր հերթին  ապահովում է  խճողումների վերծանման միանշանակությունը:  Այս ստուգող հավաքածուն ապահովում է խճողումների հետևյալ տարրերի  ստուգումները.  հիշողության  հասցեավորման  խճողման,  ֆիզիկական  և տրամաբանական տողերի և սյուների համապատասխանության, ինչպես նաև ստուգում է  հավասարակշռող  և  պահեստային  տողերի  և  սյուների  դիրքերի  բաշխման ճշտությունը:  Նշված  խճողումների  ցանկացած  անհամապատասխան  նկարագրումը Նկար 2.11.   ASV ԱՀ-ի hիմնական անկյունագծային  ստուգող հավաքածուն scramble.tcl  ֆայլում  բերում  է  մոդելավորման  սխալ  արդյունքի:  Կախված  նուշի ֆիզիկական չափսերից՝ անհրաժեշտություն է առաջանում մեկ նմուշի համար կիրառել մեկից  ավելի  ծրագրավորման  ֆայլեր:  Հաշվարկները  ցույց  տվեցին,  որ  մեկ  նմուշի խճողումների  լիովին  ստուգման  համար,  վատագույն  դեպքում,  բավական  է  ունենալ երեք  ծրագրավորող  հավաքածու:  Հավելված  2-ում  տրված  է  SIV  հոսքի`  իրական հիշողության  նմուշի (NW=64, NB=8, CM=4,  PR=16, PC=32 ) IPP-ի  ֆայլի օրինակը: ", "Ըստ  հետազոտության  արդյունքների [^\"Ո_  կոմպիլյատորների  հիերարխիայի յուրաքանչյուր  պարամետրի  հետ  կապված  նախագծման  բնութագրերի  վարքագծերը բաժանվում  են  երկու  խմբի'  գծային  և  պոլինոմիալ:  Հետևաբար,  վերահսկող ուսուցման մեթոդի պարզել  արդյոք ունեն կիրառել բազմանդամային  ինտերպոլացիա,  հակառակ  դեպքում'  գծային Դասակարգման  դեպքում  ելքային  ֆունկցիան  ընդունում  է  դիսկրետ  արժեքներ'  y  e {0,1} ..................................... . ................................. ... he( x ) = g ( 6 Tx),  z  =   6Tx,  g ( z ) = ֊ ֊ z Հաջորդ  քայլում Նկար 22  “Sigmoid” ֆունկցիայի  տեսքը [51] անհրաժեշտ  է  պարզել  նախագծման  բնութագրին  բնութագրող համար  հայտնի վերևում հետևում համար  անհրաժեշտ  է  կիրառել  ռեգրեսիոն  անալիզի  վերահսկող  ուսուցման  մեթոդը մոդելավորումն  է:  Այս  մեթոդը օգտագործովում  է  կանխատեսման  և  փոփոխականների վարքից գոյություն  ունեն  ռեգրեսիայի  տարբեր  մեթոդներ:  Նկար  23-ում  ներկայացված  են ռեգրեսիայի  մոդելների  տեսակները: ", "Տրամաբանական մոդելավորման մեթոդների դասակարգումը Հապաղումների հաշվառմամբ Ըստ սզդանշանների կոդավորման տեսքի Ըստ ծրագրի իրականացման եղանակի Ըստ հերթականության Սինխրոն Երկուական Կոմպիլյացիոն Միջանցիկ Ասինխրոն Բազմարժեքային Ինտերպրետացիոն Պատահարային Նկ․ 2․6․  Տրամաբանական մոդելավորման մեթոդների դասակարգումը - 52 - Կախված  ազդանշանների  տարածման  հապաղման  հաշվառման  մեթոդից՝ տրամաբանական  մոդելավորման  մեթոդները  լինում  են  սինխրոն,  երբ  հաշվի  չեն առնվում տրամաբանական տարրերի հապաղումները, և ասինխրոն, երբ դրանք հաշվի չեն առնվում: ", "• Մշակել  մեթոդ,  որի  միջոցով  համակարգի  հետ  ինտեգրման  համար փոստային սերվերից կպահանջվի  ոչ ռիսկային և ստանդարտ գործողություններ։ ", "Նկ. 3.11-ում պատկերած է 8PSK ազդանշանի համաստեղության դիագրամը: ", "Նկ. 3.11 8PSK ազդանշանի համաստեղության դիագրամը Այսպիսով՝  պարզ  է  դառնում,  որ  այս  երեք  մոդուլացման  տեսակները  տարբերվում են  միմյանցից  իրենց  փուլերի  քանակով,  ինչը  երևում  է  դրանց  համապատասխան համաստեղության դիագրամներում ներկայացված սիմվոլների բաշխվածությունից։ ", "Սինխրոն  մոդելավորումը  հանգում  է  դրանց՝  մեկը  մյուսից  հետո  հաջորդաբար հաշվարկին։  Տրամաբանական  արտահայտության  հաշվարկումը  ներկայցնում  է -ի տրամաբանական  արժեքի  հաշվարկումը՝  հայտնի տրամաբանական արժեքներով։ ", "Ամպլիտուդային  մոդուլացված  ASK  ազդանշանները  բնութագրվում  են  հետևյալ հավասարմամբ [68]՝ որտեղ  =1,  2,  …,  M, –  ամպլիտուդային  անդամն  է,  որը  կարող  է  ընդունել  M դիսկրետ արժեքներ, իսկ  -ն ազդանշանի փուլի կամայական հաստատուն արժեքը: ", "- 53 - Ռանգավորման  ժամանակ  հաշվի  է  առնվում,  որ  սխեմայի  մոդելավորումը  սկսելու պահին դրա բոլոր մուտքային ազդանշանները հայտնի են, և դրանց բոլորին տրվում է 0 ռանգ  r  =  0:  Օրինակ,  նկ․   2․ 6-ում  բերված  սխեմայի  ազդանշանների  որոշման հերթականությունը կլինի հետևյալը՝ , , , որտեղ –ն  սխեմայի  մուտքային  ազդանշաններն  են, -ը  տարրերի ելքային  ազդանշաններն  են  (սխեմայի  ելքային  և  ներքին  փոփոխականներն  են), -ը տարրերի ռանգը։ ", "Ռանգավորումը  սկսվում  է  այն  բանից,  երբ  բոլոր  մուտքային  փոփոխականներին տրվում  է  0  ռանգ,  որից  հետո  որոշվում  են  1-ին  ռանգի  տարրերը,  1-ին  ռանգի  շղթայի փոփոխականները,  2-րդ  ռանգի  տարրերը  և  այդպես  շարունակ (ալգորիթմի աշխատանքը  նկարագրված  է  3-րդ  գլխում)։  Արդյունքում՝  սխեմայի  բոլոր  տարրերը տեղաբաշխվում են ռանգերի աճման կարգով (նկ․  2․ 7)։ ", "Իրականցման տեսակետից այս խնդրի դրվածքը ուղիղ հակադարձ է հիշողության կառուցվածքային  մոդելի  ստուգման  խնդրին:  Եթե  SIV-ի  ժամանակ  ունենք    նմուշի GDSII  ձևաչափը,  և  այն  նկարագրող  մոդելը  և  խնդիր  է  դրվում  մեկ-երկու՝  նախապես արդեն հայտնի, ծրագրավորող հավաքածուների  միջոցով ստուգել  մոդելի համապատասխանությունը  այդ  նմուշի  գրաֆիկական  ներկայացմանը,  ապա  SIE  ԱՀ-ի - 74 - գաղափարն  է՝  յուրաքանչյուր  նմուշի  դեպքում  ստանալ  ծրագրավորող  օրինակների վերջնական հավաքածու, որոնց միջոցով ա) ծրագրավորելով GDSII ֆայլը՝  ստանալ ծրագրավորված GDSII ֆայլեր, բ) ծրագրավորված GDSII ֆայլերից գեներացնել SPICE ֆայլեր, գ) մոդելավորել այդ SPICE ֆայլերը, դ)  SPICE  մոդելավորման  արդյունքները  մշակելուց  հետո  ստանալ  նմուշի խճողումների մասին տեղեկությունները և ե) գեներացնել նմուշի կառուցվածքային մոդելը: ", "- 54 - Այսպիսով,  նկարագրվել  և  կարևորվել  է  սխեմայի  տարրերի  ռանգավորումը՝  որպես սխեմատեխնիկական  առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց։ ", "Ինտեգրալ սխեմաների ֆիզիկական կառուցվածքների ներկայացումը «փափուկ» և «կոշտ» բլոկների տեսքով Ռանգավորումից  հետո  լուծվում  է  տարրերի  տեղաբաշխման  խնդիրը՝  սկզբում «փափուկ» և այնուհետև «կոշտ» բլոկների տեսքով։ ", "ազդանշան,  որոնցից  յուրաքանչյուրը  ներկայացնում  է  մեկ  սիմվոլ՝  կազմված  երկու Հաճախականային  մոդուլացման  առավելություններից  է  համարվում  աղուկների հանդեպ  կայուն  լինելը,  քանի  որ  դեմոդուլյատորը  իր  գործառույթի  ընթացքում դետեկտում  է  տրված  ազդանշանի  հաճախականությունների  փոփոխությունները  և հետևաբար  ամպլիտուդայի  տատանումները  կարելի  է  անտեսել:  Հակառակ  կողմից, քանի  որ  հաճախականային  մոդուլացված  ազդանշանը  պարունակում  է  տարբեր բիթից: ", "SIE  ԱՀ-ի  աշխատանքը  ապահովելու  համար  նախագծվել  են  հետևյալ  լրացուցիչ երկու գործիքները, որոնք կատարում են հետևյալ գործողությունները. -  Pattern  Generater  գործիքը  որպես  մուտք  ընդունում  է  նմուշի  կոնֆիգուրացիայի ֆայլը,  որի  հիման  վրա  գեներացնում  է  նմուշի  ֆիզիկական  կառուցվածքին համապատասխանող ծրագրավորման ֆայլերը: ", "- 55 - ԻՍ-երի  ինտեգրման  աճին  զուգընթաց՝  դրանցում  ավելանում  է  մտավոր սեթփականության (ՄՍ) բլոկներով իրագործվող ֆունկցիոնալությունը, որը ներկայումս կարող է հասնել ամբողջ ֆունկցիոնալության ավելի քան 90%-ին: [52, 53] «Կոշտ» ՄՍ-ն հանդես  է  գալիս  ավարտված  ֆիզիկական  նախագծի  տեսքով,  որի  դեպքում  հայտնի  են ինչպես էլեկտրական , այնպես էլ ֆիզիկական պարամետրերը: «Փափուկ» ՄՍ-ն հանդես է գալիս սարքավորումների նկարագրման Verilog կամ VHDL լեզվով գրված սինթեզվող մոդուլի  տեսքով:  Այն,  «կոշտ»  բլոկի  համեմատ,  ավելի  հեշտ  է  ենթարկվում տեխնոլոգիական  մասշտաբավորման,  սակայն  ավելի  դժվար  է  իրագործել  դրա բնութագրումը:  Ներկայումս  սկսել  են  ավելի  հաճախ  կիրառել  բավականին  մեծ «փափուկ»  բլոկներ,  այդ  թվում՝  պրոցեսորներ,  քանի  որ  դրանց  նախագծումը տնտեսապես  շատ  շահավետ  է,  և  փոխհատուցվում  են  դրանց  հետագա  ներդրման լրացուցիչ  ծախսերը:  «Փափուկ»  ՄՍ-ների  արդյունավետությունը  առավել  ընդգծվում  է ինտերֆեյսային բլոկների  պարագայում, քանի որ  այս դեպքում հաճախ անհրաժեշտություն  է  առաջանում  դրանց  որոշակի  ձևափոխության՝  կախված օգտագործվող կապուղիների տեսակից և ճարտարապետությունից: ", "Այդ բլոկներն ունեն հետևյալ հատկությունները «Փափուկ» մակրոսները՝ մակրոսները,   ֆիզիկական  կառուցվածքի  տեսանկյունից  ավելի  ճկուն  են,  քան  «կոշտ»   ավելի անկախ են կոնկրետ արտադրական գործընթացից,   ունեն  թերություն  որոշ  չափով  անկանխատեսելի  են՝  կատարողականության, ժամանակային, տարածքային կամ հզորության  առումներով,   ֆիզիկական  նախագծման  մեջ  հնարավորություն  է  տրվում  արտաքին ելուստների տեղաբաշխման մանիպուլացման: ", "ա. զրոյական բ. անկյունագծային Նկար 2.15.   Ծրագրվորման ֆայլերի օրինակները միջոցով,  կատարում  է  նմուշի  գրաֆիկական  GDSII  ֆայլի  ծրագրավորում  ԾՕ-րի համաձայն,  որի  արդյունքում  ստացվում  են  ԾՕ-րի  քանակությամբ    ծրագրավորված GDSII ֆայլեր: ", "գործիքը,  մշակելով  ծրագրավորված  GDSII  ֆայլերը,  ստանում  է յուրաքանչյուր ծրագրավորված  նմուշին  համապատասխանող SPICE  ֆայլերը:  Հաջորդ  քայլում կատարում են  այդ  ֆայլերի մոդելավորումը:  Մոդելավորման ընթացքում իրականացվում  է  հիշողության  նմուշից  միայն  «կարդալ»  գործողությունը,  որի արդյունքում  ստացված  և  համապատասխան  ձևով  մշակված  տեքստային    ֆայլերը պարունակում  են  նմուշի  մոդելը  ստանալու  համար  անհրաժեշտ  կառուցվածքային տարրերի, տիպերի մասին  ինֆորմացիան: ", "Նկ. 3.14 16QAM ազդանշանի համաստեղության դիագրամը Թվային  16QAM-ի  միջոցով  հնարավոր  է  ավելի  շատ  տեղեկատվություն  փոխանցել քան  BPSK,  QPSK,  8PSK  ազդանշանների  միջոցով:  Նկ.  3.14-ից  երևում  է,  որ  I  և  Q հարթության ամեն քառորդ մասում պատկերված չորս սիմվոլների համար ազդանշանի ամպլիտուդան  ունի  երեք  արժեք,  քանի  որ  երկու  սիմվոլների  համար  վերջինիս արժեքները հավասար են։ ", "էլեկտրոնային փոստի ստանդարտ դաշտերի կիրառմամբ։ ", "«Փափուկ»  բլոկից  «կոշտ»-ի  անցումը  հանգեցնում  է  բլոկի  երկրաչափական  ձևի ընտրության:  Այս  ընտրությունը  կատարվում  է  մակերեսի  հաստատունության պայմանով՝ ձևի կորի հիման վրա (նկ. 2.10)։ ", "Իրագործելիության սահմանը Իրագործելիության սահմանը wh = A h = A/w A=const (0,0) (0,0) Նկ․ 2․10․  «Փափուկ» բլոկից «կոշտ» բլոկն անցման «ձևի» կորը (ա) և կողերի տարբեր  հարաբերակցություններով  ներկայացվող  «կոշտ»  բլոկների տարբերակները (բ) ին «Փափուկ»  բլոկից  «կոշտին»  անցման  ժամանակ  առաջ  է  գալիս  յուրաքանչյուր մակարդակում գագաթների դասավորությունը որոշելու  խնդիր [54]:  Այդ դասավորությունը  պետք  է  լինի  այնպիսին,  որ  շղթաների  հատումների  քանակը  ձգտի նվազագույնի,  ինչն  էլ,  իր  հերթին,  նպաստում  է  ամբողջ  սխեմայում  միջմիացումների երկարությունների նվազմանը: ", "Նախ  նշենք,  որ  շղթաների  հատումների  քանակը  կախված  է  ոչ  թե  տարրերի վերջնական կոորդինատներից, այլ տվյալ ռանգում տարրերի հարաբերական դիրքերից: ", "Գոյություն  ունեցող  ծանուցման  համակարգերի  հետազոտության  մասում քննարկել ենք նման համակարգերում արտաքին ինտերֆեյսի իրականացման մի քանի տարբերակներ։ ", "Սակայն  այդ  խնդիրը  NP-բարդության  է  արդեն  իսկ  ընդամենը  երկու  ռանգ  ունեցող գրաֆի դեպքում[55]։ ", "- 58 - Հիմնականում շղթաների հատումների քանակի նվազեցման խնդիրը ոչ թե լուծվում է գլոբալ՝  ամբողջ  գրաֆի  համար,  այլ  լոկալ՝  բոլոր  հարևան  տարրերի  զույգերի  համար: ", "Փորձերը  ցույց  են  տալիս  [55],  որ  երկու  ռանգերի  համար  շղթաների  հատումների քանակի  նվազեցման  խնդիրը  բավականին  հեռու  է  օպտիմալ  լինելուց  [54,  56]:  Ավելի ընդունելի,  հատումների  գլոբալ  քանակը  նվազեցնելու  համար,  դիտարկվում  են  բոլոր հարևան ռանգերը և հատումների նվազեցումը դրանց միջև: Այդ մոտեցումներն ունեն մի քանի մոդիֆիկացիաներ, որոնք տարբերվում են հետևյալ չափորոշիչներով.   Ռանգերի  ֆիքսման  մեթոդի  ընտրություն:  Երկու  հարևան  ռանգեր  դիտարկելիս մի  ռանգի  տարրերը  կարելի  է  համարել  ֆիքսված  և  ընտրել  տարրերի  օպտիմալ դասավորություն  մյուս  ռանգի  համար:  Կարելի  է  նաև  Ri  ռանգը  դիտարկելիս ֆիքսված համարել Ri+1 և Ri-1 ռանգերը: ", "  Հերթականության  ընտրություն,  ըստ  որի  դիտարկվելու  են  տվյալ  ռանգի գագաթները:  Ռանգերը  կարող  են  դիտարկվել  ձախից  աջ  կամ  հակառակը, հնարավոր է նաև դիտարկման ուղղությունների փոփոխություն: "]}
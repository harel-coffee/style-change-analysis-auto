{"paragraphs": ["  Memory Programming Tool (MPT) գործիքը որպես մուտք ստանում է հիշողության նմուշի  գրաֆիկական  GDSII  ներկայացումը  և  նմուշի  ծրագրավորող  ֆայլերը: ", "MPT գործիքը, միաձուլելով նմուշի  GDSII ֆայլը և ծրագրավորող բջիջները՝ ըստ ծրագրավորման  ֆայլում  տրված  բջիջների  արժեքների  բաշխմանը,  ստանում  է հիշողության նմուշի «ծրագրավորված» GDSII ֆայլը, որի հիշողության զանգվածի ամեն  մի  բջիջ  ծրագրավորված  է  նախապես,  հստակորեն  որոշված  «0»  կամ  «1» արժեքով:  Բացի  այդ,  MPT  գործիքը,  ստանալով  համապատասխան  հրաման, նմուշի  GDSII  ֆայլում  հետազոտում  է  կառուցվածքային  գոտիների  բաշխումը  և ավտոմատ  ձևով  գեներացնում  է  նմուշում  գոտիների  կառուցվածքային տվյալները  (Տես՝  աղ.  1.11)  պարունակող  ֆայլը:Layout  vs.  SPICE  (LVS)  գործիքը որպես  մուտք  ստանալով  հիշողության  նմուշի  «ծրագրավորված»  GDSII  ֆայլը, գեներացնում  է  նրա  SPICE  նկարագրությունը:  Սխեմայի  SPICE լեզվով նկարագրությունը  թույլ  է  տալիս  ավտոմատ  կերպով  մոդելավորել  հիշողության - 63 - էլեկտրական    սխեման`  մուտքին  տալով  համապատասխան  ազդանշանները,  և ելքային ազդանշանները համեմատել սպասվող արժեքների հետ: ", "Հիշողության նմուշի ծրագրավորումը իրականցվում է յուրաքանչյուր հիշողության կոմպիլյատորի  համար  անհատապես  ստեղծվող  «0»  և  «1»  վիճակը  ծրագրավորող բջիջների միջոցով: ", "Նկ. 3.8  –ի հաշվարկը LabVIEW միջավայրում Նկ.  3.8-ում  պատկերված  կոդում  նույնպես  սկզբում  առանձնացվում  են  ազանշանի հաջորդական  սեգմենտները։  Յուրաքանչյուր  սեգմենտի  համար  իրականացվում  է Ֆուրյե ձևափոխություն և առանձնացվում են մագնիտուդների արժեքները։ Ազդանշանի կրողի  հաճախականության  իմացության  դեպքում  հնարավոր  է  այս  բնութագրող հատկանիշի  հաշվարկն  իրականացնել  ցածրհաճախականային  ազդանշանի  սպեկտրի տվյալների  հիման  վրա։  Հետևաբար,  ծրագրում  կենտրոնական  հաճախականության հաշվարկն  իրականացվել  է  ոչ  թե  (3.26)  հավասարման  միջոցով,  այլ  մշակվել  է հաշվարկի այլ միջոց՝ որպես կենտրոնական հաճախականություն վերցնելով սեգմենտի կետերի  քանակի  կեսին  համապատասխանող  արժեքը։  Այնուհետև  առանձնացվում  են ցածր  և  բարձր  կողային  շերտերը  և  հավասարում (3.22)-ի  համապատասխան իրականացվում  են  հաշվարկները։  Վերջում  բոլոր  սեգմենտների  համար  ստացված արժեքները միջինացվում են։ ", "Նմանապես, բջջի տոպոլոգիան նույնպես սիմետրիկ (նժարի նման հավասարակշռված) է  բջջի  տոպոլոգիայի  կենտրոնի  նկատմամբ: ", "Այսպիսով,  կարևորվում  է  ԻՍ-երում  տարրերի  ժամանակային  ուղղորդմամբ տեղաբաշխումը՝ որպես սխեմատեխնիկական առանձնահատկությունների հաշվառմամբ  ֆիզիկական  կառուցվածքի  ստացման  միջոց։  Ներկայումս  գոյություն ունեցող  ժամանակային  ուղղորդմամբ  տեղաբաշխման  մեթոդները[3,20,40]  ունեն որոշակի թերություններ: Առաջարկվում է նոր մոտեցում՝ ԻՍ ֆիզիկական նախագծման ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական  առանձնահատկությունների հաշվառման համար։ ", "Անալոգային կապի համակարգերում նույնիսկ չնչին կողմնակի ազդեցությունը կարող է զգալի  աղավաղել  ազդանշանը,  որից  հետո  դա  չի  կարելի  վերականգնել  ազդանշանի ուժեղացման  միջոցով,  քանի  որ  աղմուկն  անմիջականորեն  կապված  է լինում անալոգային ազդանշանի հետ: ", "Բջիջիների  սահմանագիծը Տեքստային ինֆորմացիա Բջջի սկզբնակետը Ծրագրավորող միացում Նկար 2.4. Հիշողության ծրագրավորման L և R բջիջների տոպոլոգիայի օրինակը նկարագրությունը Բացի նշված ծրագրերից, SIV հոսքում ծրագրավորված հիշողության նմուշի SPICE ձևաչափի  էլեկտրական  սխեման  ստանալու  համար  օգտագործվում  է  Layout  Vs  SPICE (LVS)  իրականացնող՝  տարբեր  ընկերությունների  կողմից  մշակված  ծրագրեր  (օրինակ calibre,  Hercules,  ICV):    Այնուհետև,  ստացված    SPICE  ֆայլի  մոդելավորման    համար օգտագործվում է  SPICE մոդելավորման գործիքը (HSPICE, HSIM, UltraSIM կամ XA), որն իր  մուտքին  ստանում  է  SPICE  լեզվով  նկարագրությունը,  հիշողությունից  ընթերցելու գործողության համար անհրաժեշտ մուտքային ազդանշանները և սպասվող արժեքների բազմությունը, գեներացնում է սպասվող և ընթերցված արժեքների համեմատությունների արդյունքը պարունակող ֆայլը: ", "ԱՀԳ-երը  կարող  են  ներկայացվել  ծառերի  տեսքով,  այսինքն՝  ացիկլիկ  գրաֆի տեսքով։  Դա  թույլ  է  տալիս  ավելի  հեշտ  վերլուծել  գրաֆը,  բայց  սահմանափակում  է դրանց  օգտագործումը։  Հիմնականում  տվյալների  հոսքի  գրաֆն  օգտագործում  են կոմպիլյատորներում։  Անկախ  այն բանից՝ կատարվում են  այդ բոլոր գործուղությունները  հատ  առ  հատ,  թե  մի  քանիսը  միաժամանակ,  գործողությունների - 47 - ցանկացած  հերթականություն  ընդունելի  է,  եթե  դրանք  բավարարում  են  տվյալների կախվածության  պահպանմանը։  Նկատենք  նաև,  որ  ՏՀԳ-ն  ինքն  իրենով  վերջավոր  է․ այն  ոչ  միայն  ունի  վերջավոր  քանակով  հանգույցներ,  այլև  չունի  ցիկլեր,  հետևաբար՝ ՏՀԳ-ում  ցանկացած  տվյալների  ճանապարհ    ունի  վերջավոր  երկարություն։  Տվյալների հոսքի  գրաֆի  ավելի  կոնկրետացված  եղանակ  է  ազդանշանների  հոսքի  գրաֆը  (ԱՀԳ), որը  սովորաբար  օգտագործվում  է  ազդանշանների  մշակման (signal  processing) համար[44]: ԱՀԳ-ն ցիկլիկ ուղղորդված գրաֆ է։  Նկ․  2.3 -ում ցույց է տրված, որ ԱՀԳ-ում ավելանում  է  նոր  հանգույցի  տեսակ՝  հապաղում,  որը սիմվոլով  հանգույցն  է։  Եթե ընդունենք,  որ  այս  հապաղումը  t1  է  մուտքային  S  ազդանշանի  համար,  ապա գործողության արդյունքը ընդհանուր հապաղումով կլինի` (2.1) ԻՍ-ների  ժամանակային  տեղաբաշխում  կատարելու  դեպքում  նշված  հապաղման հանգույցները չեն  կիրառվել,  բայց  փոխարենը  նրանք  հաշվի  են  առնվում միջմիացումների երկարությունների հետ միասին։ ", "- 65 - Կառուցվածքային մոդելի ստուգումը իրականացնող SIV հոսքը, նույնպես,  բաղկացած է երկու  անկախ՝  ա)  հիշողության  գոտիների  բաշխումը  ստուգող  (անգլերեն  Straps MIG scramble.tcl Fail Fail SDV END SIV ASV END Pass SDV ASV Pass Նկար 2.5. SIV ԱՀ-ում Հիշողության Կառուցվածքային մոդելի ստուգման բլոկ-սխեման Distribution  Verification  (SDV))  և  բ)  հիշողության  կառուցվածքային  խճողումները ստուգող (անգլերեն Address Scramble Verification (ASV)) մասերից (Տես՝ նկ. 2.5): ", "Ինչպես  արդեն  սահմանել  էինք,    հիշողության  զանգվածը  հիշողության  նմուշի տոպոլոգիայի  այն  մասն  է,  որը  կառուցված  է  հիշողության    բջիջներով:  Հիշողության բջիջները պարունակող հանգույցներն են՝ -  հիշողության զանգվածը՝   մակերևույթը (memory area), -  պահեստային սյուները և տողերը (redundancy columns and rows), -  և  հիշողության  մակերևույթը  հավասարակշռող,  լրացուցիչ  միավորները  (dummy rows and dummy columns): ", "Նմուշի տոպոլոգիայի մնացած բոլոր մասերը անվանում են գոտիներ: ", "Կառուցվածքային  մոդելի  գոտիների  բաշխման  ստուգումը  իրականցվում  է  SDV հոսքի  միջոցով:    Սկզբում,  VIG  ծրագիրը,  վերլուծելով  մոդելի  scramble.tcl  ֆայլում նկարագրված  գոտիների  բաշխումը  և  դրան  համատեղ,  հիշողության  կոմպիլյատորի տիրույթի  նկարագրությունը,  գեներացնում  է՝  անհրաժեշտ  քանակությամբ  ստուգող - 66 - նմուշների  կոնֆիգուրացիաների ֆայլերը: Այդ կոնֆիգուրացիաների ֆայլերի քանակը և նմուշների տեսակները այնպես են ընտրված, որ ապահովում են  կոմպիլյատորի ՆՀՍ-ի VIG MC check.rtb SDV configuration file SDV configuration file SDV configuration file MC scramble.tcl VPG GDS of SDV instance GDS of SDV instance GDSII of SDV instance MIG vpg.strap  file vpg.strap  file vpg.strap  file MPT Fail Pass VOG Compare SDV END mpt.strap  file mpt.strap  file mpt.strap  file Նկար 2.6. Հիշողության գոտիների ստուգման SDV ԱՀ-ի բլոկ-սխեման գոտիների բաշխման  լիարժեք ստուգումը: ", "Կոնֆիգուրացիոն  ֆայլերի  հիման  վրա  MC  գործիքով  գեներացվում  են  SVD ստուգման նմուշների GDSII ֆայլերը (Տես` նկ. 2.6): Հետագայում, այդ ֆայլերը մշակվում են  MPT  գործիքի  միջոցով,  որի  արդյունքում  գեներացվում  են    նմուշի  գոտիների բաշխումը նկարագրող՝ տեքստային ձևաչափով և  mpt.straps անվանումով, ֆայլեր: ", "Դրանից  հետո,  VPG  գործիքը,  իր  հերթին,      կոմպիլյատորի  scramble.tcl  ֆայլից, ստանում  է  գոտիների  բաշխումը՝ յուրաքանչյուր  SDV  կոնֆիգուրացիայի  համար (vpg.straps  անվանումով):  Այսպիսով, յուրաքանչյուր  կոնֆիգուրացիայի  համար ստացվում  են  գոտիների  բաշխումը  նկարագրող  երկու  ֆայլ՝  մեկը  GDSII  ձևաչափից, մյուսը  հիշողության  կառուցվածքային  մոդելի  (scramble.tcl)  ֆայլից:  Ստացված  ֆայլերի համեմատության  միջոցով  (Տես՝  նկ.  2.6),    SIV-ը  ստեղծում  է  արդյունքները  ամփոփող - 67 - ելքային ֆայլը և գեներացնում  է ամփոփիչ հաղորդագրություն SDV ստուգման ընթացիկ վիճակի մասին: Նկար 2.7-ում տրված են  MPT և VPG ֆայլերի օրինակները: ", "առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց Տրամաբանական  մոդելավորման  ժամանակ  օգտագործվում  են  ֆունկցիոնալ մոդելների  բաղադրիչներ՝  տարրեր։  Ֆունկցիոնալ  մոդելը  հանդես  է  գալիս  «սև  արկղի» տեսքով,  որի  համար  մուտքային  և  ելքային  ազդանշանների  միջև  կապը  տրվում  է բուլյան հավասարումներով կամ ճշտության աղյուսակներով [48]։ Այդպիսի մոդելներում ներքին կառուցվածքը չի հաշվի առնվում։ Կոմբինացիոն տրամաբանական տարրական մոդելներից  են՝  AND,  OR,  NOT,  NAND  և  այլն,  որոնք  համապատասխանում  են  բուլյան ֆունկցիաներին։  Ժամանակային  հապաղումները հաշվի  առնող  մոդելներում ստեղծվում  են  ազդանշանների  հապաղումների  մեծություններ՝  տարրերի  մեկից  մյուսն անցում կատարելիս։ ", "- 68 - VIG MC check.rtb ASV configuration file ASV configuration file ASV configuration file MC scramble.tcl VPG GDS of ASV instance GDS of ASV instance GDSII of ASV instance MIG Pattern  file(IPP) Pattern  file (IPP) Pattern file (IPP) MPT SVP&SIM   files SVP&SIM   files SVP&SIM   files Programmed GDS Programmed GDS Programmed GDSII LVS rule deck LVS Fail Pass ASV END VOG Log Analysis SPICE simulation SPICE file SPICE file SPICE file SPICE model Նկար 2.9.   Հիշողության կառուցվածքային խճողումների ստուգման ASV ԱՀ-ի բլոկ-սխեման Նկար 2.9-ում ներկայացված է ASV-ի ստուգման   բլոկ-սխեման:  Ի սկզբանե նշենք, որ  հիշողության  հասցեների  խճողումների  ստուգման  գործընթացը  (ASV  ստուգումը) ավելի  ժամանակատար  է,  քան  հիշողության  գոտիների  բաշխման  ստուգումը  (SDV), քանի  որ    այն  իր  մեջ  ընդգրկում    է  երկու  հաջորդաբար  կատարվող  և    բավականին ժամանակատար  գործողություններ՝  ա)  նմուշի  GDSII  ձևաչափից  նմուշի  SPICE - 69 - ձևաչափի  սխեմատիկայի  ֆայլի  դուրս  բերումը  (ինչպես  նշել  ենք,    դա  կոչվում  է    LVS գործողություն),  և  բ)  LVS-ի  աշխատանքի  արդյունքում  ստացված  նմուշի    SPICE  ֆայլի մոդելավորումը:  ASV-ի  դեպքուն  VGP  գործիքը յուրաքանչյուր  նմուշի  համար գեներացնում է՝ (IPP)) (Տես՝ նկ. 2.10), ա)  ծրագրավորման  օրինակների  ֆայլերը  (անգլերեն՝  Instance  Programming  Pattern բ)  SPICE  մոդելավորման  համար  անհրաժեշտ՝  վեկտորային  օրինակների  մուտքային ֆայլերը (անգլերեն՝ SPICE vector pattern (SVP)),  և գ) SPICE մոդելավորող ծրագիրը աշխատեցնող՝ պարամետրերի ֆայլերը: ", "Պետք է ընդգծել, որ  ASV ստուգման  մոդելավորման  ժամանակ   ստացված  SPICE ֆայլի միջոցով իրականացվում է բացարձակապես «կարդալ» գործողության մոդելավորումը: ", "IPP  ծրագրավորման  ֆայլը  իրենից  ներկայացնում  է  տեքստային  ֆայլ,  որը  իր  մեջ Պահեստային սյուները Հիշողության զանգվածի XXXXXXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXX Նկար 2.10.   IPP ֆայլի օրինակը Հիշողության զանգվածի Հավասարա- կշռող տողերը ընդգրկում է տրամաբանական զրոների և մեկերի հավաքածուներ: Այդ հավաքածուները ունեն  նմուշի  զանգվածի  ֆիզիկական  կառուցվածքին  համապատասխան  քանակու- թյամբ  տողեր  և  սյուներ:  IPP  ծրագրավորման  ֆայլերը  մուտքային  տեղեկություններ  են տրամադրում    MPT-ի գործիքի համար: Նկար 2.10 -ում  պատկերված է IPP-ի օրինակը: ", "Համաձայն  այդ  օրինակի՝  հիշողության  նմուշը  ունի    4  տող,  16  սյուն,  2    պահեստային սյուներ  և  2  հավասարակշռող՝  պարապ  տողեր:  Հիշողության  հիմնական  զանգվածից դուրս  գտնվող    պահեստային  և    հավասարակշռող    տողերին  և  սյուներին  պատկանող բջիջների  արժեքները  պարտադիր  ձևով  ծրագրավորվում  են  տրամաբանական  զրո արժեքով:  Իսկ  IPP  ֆայլի  առաջին  տողի  բջիջները  ստանում  են  այնպիսի  արժեքներ, որոնք  կապահովեն  տրամաբանական  զրոյական  արժեքների  ծրագրավորումը  նմուշի - 70 - ֆիզիկական առաջին  տողում  (Տես՝  նկ.  2.10):  Այդ  առաջին  տողը  հնարավորություն  է տալիս  բացահայտել  հիշողության  զանգվածի  բիթային  գծերի  խճողումը  (T,  B): ", "Ֆիզիկական երկրորդ տողից սկսած  IPP-ը պարունակում է    անկյունագծային ստուգող հավաքածու, որը նմուշի ֆիզիկական կենտրոնի առանցքի նկատմամբ և անկյունագծով նրանից  վերև  գտնվող  բջիջներում  ապահովում  է  տրամաբանական  «1»  արժեքներ,  իսկ առանցքից  ներքև  անկյունագծով  գտնվող  բջիջներում`  «0»  արժեքներ  (Տես`  նկ.  2.11): ", "էլեկտրոնային փոստի հետ դինամիկ կերպով համագործակցության  հնարավորության  ապահովում։  Հաջորդ  խնդիրը  փոստային սերվերի հետ ինֆորմացիոն կապի հաստատման մեխանիզմի իրականացումն է։ Այն անհրաժեշտ  է,  երբ  համակարգը  պետք  է լինի  առանձնացված  փոստային սերվերներից  և  միևնույն  ժամանակ  ապահովի  նամակի  հասցեատիրոջ նախաձեռնությամբ ծանուցման հնարավորություն։ ", "Ինչպես  երևում  է  ASV  ստուգման  բլոկ-սխեմայից  (Տես՝  նկ.  2.9),  MPT    գործիքը ծրագրավորում է նմուշի GDSII ֆայլերը՝ այդ նմուշների IPP-ի ֆայլերին համաձայն: ", "- 71 - Այնուհետև,  անցկացնելով յուրաքանչյուր  ծրագրավորված  GDSII  ֆայլը  LVS ծրագրով ստանում ենք  ծրագրավորված GDSII–ին համապատասխան SPICE ֆայլը, որը հետագայում  և  ենթարկվում  է  մոդելավորմանը:  Մոդելավորումը  կատարվում  է համաձայն  SVP  ֆայլի,  որը  գեներացնում  է  VPG  ծրագիրը,  և  որը  իր  մեջ  ծածկագրված ձևով  պարունակում է scramble.tcl  ֆայլից  ստացված  խճողումների  մասին ինֆորմացիան:  SVP  ֆայլում  նկարագրվում  են  մոդելավորման  ընթացքում  փոփոխվող ազդանշանները  և  այդ  ազդանշանների    արժեքների  փոփոխումը,  որը  կատարվում  է մոդելավորման  ժամանակային  տիրույթում:  Իսկ հիշողության  սարքի  մնացած ազդանշանները  մնում  են  անփոփոխ  և  նկարագրվում  են  մոդելավորման պարամետրերի՝  SIM  ֆայլում:  ASV  ստուգման  ընթացքում  կատարվում  է  միայն «կարդալ» (հիշողության սարքից)  գործողության մոդելավորումը: ", "signal CLK ADR[0~3] Q[0~3] Բիթային գծերի խճողում YA, սյուների ապակադավորիչի տեսակը՝ 2x4  {0,1,2,3} Ֆիզիկական 0 տող՝ միշտ զրոյական արժեք YA, սյուների ապակադավորիչի  խճողումը Ֆիզիկական 1 տողի արժեքը XA, տողերի ապակադավորիչի տեսակը՝ 2x4  {0 ,1,3,2} XA, տողերի ապակադավորիչի խճողումը Նկար 2.12.   ԱՀ-Ի SVP ֆայլի օրինակը և դաշտերի մեկնաբանումը Ներկայացված  SVP ֆայլի օրինակում (նկ. 2.12),  փոփոխման են ենթարկվում CLK, ADR[0~3]    և  Q[0`3]  ազդանշանները,  ընդ  որում  հասցեների  (ADR[0~3])  փոփոխման հերթականությունը կատարվում է սյուների և տողերի ապակոդավորիչների խճողմանը համաձայն, իսկ ելքային ազդանշանները (Q[0~3]) նկարագրված են բիթային գծերի, այդ գծերի  և  սյուների    ոլորապտումների  խճողումներին  համաձայն:  Լավագույն  դեպքում, երբ    scramble.tcl  ճիշտ  է  նկարագրված,  մոդելավորման  արդյունքը  սխալի  չի  բերում: "], "paragraph_source_docs": [1, 1, 1, 3, 1, 2, 3, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
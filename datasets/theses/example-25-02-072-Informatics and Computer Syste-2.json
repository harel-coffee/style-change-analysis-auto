{"paragraphs": ["Նկար 2.7․  Երեք օբյեկտների առկայությունը ներկայացված կարմիր շրջանակներում, պատկերում: ", "Նկար 37.SandScheduler համակարգում շրջաններով տեսաբերում: ", "Ֆոնային զատման այս մեթոդի արագագործությունը հավասար է Գլուխ 1-ում նկարագրված հայտնաբերման մեթոդի արագությանը ( )։ ", "Հայտնաբերման որակի  և  արագագործության բարձրացման համար իրագործվել է ֆոնային զատման մեթոդի ձևափոխություն։ Իրականացվել են հետևյալ երեք փուլերը։ ", "Պատկերների  բուրգի  կառուցումը.  Բուրգի  հիմք  է  հանդիսանում  տեսաշարից վերցված  օրիգինալ  կադրը,  որը  ենթարվում  է -գործողության,  ապա  պատկերը փոքրացվում  է գործակցով  մի  քանի  անգամ  (Նկար  2.9)։  Սա  թույլ  է  տալիս զգալիորեն  նվազեցնել  պատկերում  աղմուկը  և  ֆոնային  զատման  միջոցով պատկերների  համեմատման  ժամանակ  համեմատել  փոքր  պատկերներ,  որն  էլ  իր հերթին կնպաստի ալգորիթմի արագագործությանը։ ", "Նկար 2.9․ Պատկերների բուրգը: ", "Նկար 39.SandScheduler համակարգը որոշ անջատված հանգույցներով: ", "Ցանցի  կառուցումը  բուրգի  վերջին  շերտում․  Տեսահսկման  ժամանակ պատկերում  փոքր  օբյեկտները  հետաքրքրություն  չեն  ներկայացնում։  Օգտատերը հնարավորություն  ունի  սահմանելու  իրեն  անհրաժեշտ  չափը։  Ֆոնում  սահմանված չափից փոքր օբյեկտները կանտեսվեն համակարգի կողմից: Չափը սահմանելուց հետո ցանցը կկառուցվում է ըստ նշված չափի (Նկար 2.10)։ ", "Նկար 2.10․ Ցանցի կառուցումը պատկերում: ", "Օբյեկտների  հայտնաբերումը․ Դիտարկվում  է ցանցի յուրաքանչյուր կետ, եթե կետի  գունային  {R,G,B}  արժեքը  տարբերվում  է  ֆոնից,  ապա  այն  հանդիսանում  է օբյեկտի  կետ։  Տվյալ  կետի  համար  դիտարկվում  են  8  հարևան  կետերը  և համեմատվում ֆոնային պատկերի հետ (նկար 2.11): ", "SandScheduler  ծրագրային  փաթեթի  միջոցով  հնարավոր  է  ուսումնասիրել ավազակույտի  և  rotor-router  մոդելների  պիտանելությունը  և  կարևորությունը կլաստերային  համակարգերում,  և  դրանց  առավելությունների  մեջ  համոզվելու դեպքում կարելի է արդեն SandScheduler-ում բաշխիչի նկարագրված  աշխատանքը իրականացնել իրական կլաստերային համակարգերում: ", "Մշակված  նեյրոնային  ցանցերը  հնարավորություն  են  տալիս  ժամանակի շահման  ավազակույտի  մոդելի  վրա  նկարագրվող  «մինիմում  ավազահատիկներ  և մաքսիմալ  հեռավորություն»  խնդրի  շրջանակներում՝  փոխարինելով  մոդելի սիմուլացիան նկարագրված և մշակված նեյրոնային ցանցով: ", "(2.12) որտեղ -ը  ֆոնում  առկա  օբյեկտների  քանակն  է, -ը  մշակված  մեթոդում յուրաքանչյուր  պիքսելի  համար  A-H  ստուգումների  քանակն  է, -ը  պատկերի չափերը, –ը  նմուշի  չափերը,  իսկ -ը  ալգորիթմի  բարդությունն  է,  որը  իրենից ներկայացնում  է  էտալոնային  և  ձևափոխված  պատկերների  միջև  պիքսելային համեմատումների ընդհանուր քանակը: Բանաձևից երևում է, որ -ը զգալիորեն փոքր է,  քան -ը  և    առաջին  գլխում  նկարագրված  նմուշային  համապատասխանեցման ալգորիթմի՝ բարդությունը։  Հետևաբար,  օբյեկտի  հայտնաբերման  համար  մշակված իտերացիոն մեթոդը  արագագործ է նախորդ մեթոդների  համեմատ, որը հետագայում կապացուցվի նաև փորձերի միջոցով։ ", "Եզրակացություն.  Այսպիսով՝  մշակվել  է  մեթոդ,  որը  տեսաշարում  հայտնաբերում  է օբյեկտները,  որոնք  կարող  են  լինել  թաքնված  (մարդու  աչքի  համար  աննկատ  և ֆոնային  պատկերին  մեծ  գունային  նմանություն  ունեցող)  և  անհայտ  (նախապես չսահմանված):  Ընդ որում՝ օբյեկտը կարող է լինել թե՛ անշարժ, թե՛ շարժման մեջ: ", "Մշակված  մեթոդը  հայտնաբերում  է  մեծ  ճշտությամբ՝  հաշվի  առնելով հանարավոր լույսի  կամ  եղանակի  փոփոխությունը  նկարահանման  ընթացքում: ", "Դիտարկենք ներկայացված «CA Simulator» ծրագրային  փաթեթի գործարկման  արդյունքների և  գոյություն  ունեցող լուծումների  միջև տարբերությունը: Մասնավորապես, դիտարկվել է NetLogo միջավայրը, որը, լինելով բազմաագենտ  համակարգերի  ծրագրավորման  միջավայր  և  ունենալով  հարուստ գրադարան,  ամենահայտնի  և  ֆունկցիոնալ  առումով  ամենահարուստն  է  մինչև այժմ  գոյություն  ունեցող  լուծումների  միջև:  Այնուամենայնիվ  «CA  Simulator»-ը, օժտված  լինելով  բազում  ֆունկցիոնալ  հատկություններով,  ոչ  միայն  լրացնում  է ամենահայտնի  լուծումներում  հանդիպող  բացթողումները,  այլ  և  ներառում  է,  բայց չի  սահմանափակվում  արդի  լուծումների  ֆունկցիոնալ  հնարավորություններով, ինչպիսիք են, օրինակ՝ բազմաօգտատեր միջավայրի ապահովումը գլոբալ ցանցում, եռաչափ  ցանցի  կառուցումը  և  տեսաբերումը,  ինչպես  նաև  տեսաբերվող  ցանցի դիտման  անկյունների  փոփոխությունները,  դիտարկվող  ցանցի  շերտերի  և ենթամասերի  առանձակի  տեսաբերումը,  մոդելի  ինչպես  կետային,  այնպես  էլ մասնակի փոփոխությունները պատահական  և կոնկրետ սկզբունքով, ֆիզիկական և ինֆորմացիոն բնութագրիչների հաշվարկը և այլն: ", "Տեսահսկման  համակարգերում  շատ  հաճախ  տեսախցիկի  տեսադաշտում հայտնվում  են  դիտարկվող  օբյեկտներից (թիրախներից)  զատ  այլ  օբյեկտներ (անվանենք  կեղծ  թիրախներ),  որոնք  դիտարկման  համար  հետաքրքրություն  չեն ներկայացնում  և  խանգարում են իրական օբյեկտների հայտնաբերմանը: ", "Այսպիսով,  ներկայացրած  արձանագրության  շնորհիվ,  հարցումից  կախված, ինֆորմացիան  փոխանցվում է ցանցի հանգույցին, որը. •  իրեն  հասանելի  մասնաբաժնի  համար  իրականացնում  է  վերծանում  և  դրան համապատասխան գործառույթ, •  ձևավորում  է  վերծանված  մասնաբաժնի  հեշը,  որը  հավելվում  է  վերոհիշյալ հաղորդագրության մեջ՝ գաղտնիքի մասնաբաժնի  ամբողջականության վերահսկման նպատակով։ ", "Այս  ենթավերնագրում  ներկայացվում  է  կեղծ  թիրախների  զատման  ընդհանուր մշակման  քայլերն  ու  հիմնական  որոշման  կանոնները  վերը  նշված  տեսահսկման մասնավոր համակարգերի համար  [53]: ", "Կեղծ  թիրախների  առկայությունը  հանգեցնում  է  հայտնաբերման  սխալ արդյունքի և  ալգորիթմի  ավելորդ ժամանակի ծախսի:  Տվյալ մեթոդը նպատակաուղղված է իրագործել հետևյալ կետերը․ •  Որոնել կեղծ թիրախները։ ", "Հիմնվելով  բաժին  2,1-ում  նկարագրված չափանի  խորանարդային ցանցերում  աստղային  ծածկույթները  նկարագրող  բանաձևի  վրա,  կատարվել  է չափանի խորանարդային ցանցերում ավազակույտի աբելյան մոդելի աշխատանքի զուգահեռացումը:  Ինչպես  նշվել  է  բաժին  1,2-ում,  արդեն  գոյություն  ունեն ավազակույտի    մոդելի  սիմուլացիայի  արագագործությանը  նպատակաուղված ծրագրային փաթեթներ: ", "•  Զատել կեղծ թիրախները, իրական թիրախի հայտնաբերման ժամանակ։ ", "Մասնավոր  տարածքներում,  որտեղ  օբյեկտի  ներթափանցումը  արգելված  է, տեղադրված  են  անվտանգության  տեսախցիկներ,  որոնց  միջոցով  վերահսկվում  է տարածքը:  Այսպիսի  տարածքներում  կարող  են  ներթափանցել  տարբեր  օբյեկտներ, օրինակ՝  մարդ,  կենդանի,  ավտոմեքենա,  տրակտոր  և  այլ  օբյեկտներ:  Այսպիսի դեպքերում  նախապես  հնարավոր  չի  կանխատեսել  և  տարանջատել  ներթափանցող օբյեկտի  տեսակը:  Նախորդ  ենթագլխում՝  2.1.1-ում,  նկարագրված  մեթոդի  միջոցով հնարավոր  է  հայտնաբերել  ցանկացած  օբյեկտ,  որը  կհայտնվի  տարածքում,  քանի  որ ալգորիթմը  ֆիքսում  է  ցանկացած  փոփոխություն  տեսախցիկի  տեսադաշտում  [47]: ", "Բաց  վերահսկվող  տարածքներում,  ինչպիսիք  են  բակերը,  ֆերմաները,  հնարավոր  է այնպիսի  օբյեկտների  առկայություն,  որոնք  բնական  կլիմայական  պայմաններում կարող  են  շարժվել:  Օրինակ՝  վերահսկվող  տարածքում  հանրավոր  է  ծառի առկայություն,  որը  կարող  է  տատանվել  քամու  առաջացման  դեպքում:  Տանտանման արդյունքում ծառի  առաջացրած շարժումը կբերի  պատկերի  պիքսելների փոփոխության:  Փոփոխությունը  անմիջապես  ֆիքսվելով  ալգորիթմի  կողմից,  կբերի նոր  օբյեկտի  առկայության  նախանշանի:  Փոփոխված  տարածքը  կճանաչվի  որպես օբյեկտ: Սա կկանգնեցնի երկու խնդրի առաջ: ", "•  Ավելորդ օբյեկտների հայտնաբերմումը կհանգեցնի սխալ արդյունքի •  Ալգորիթմի ժամանակի ավելորդ ծախսի Դիտարկենք  մի  օրինակ,  որի  դեպքում  անվտանգության  տեսախցիկի  միջոցով վերահսկվում  է  այնպիսի  տարածք,  որտեղ  օբյեկտի  ներթափանցումը  արգելված  է (Նկար 2.12ա): "], "paragraph_source_docs": [2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 2, 2], "source_docs_file": "Informatics and Computer Systems.json"}
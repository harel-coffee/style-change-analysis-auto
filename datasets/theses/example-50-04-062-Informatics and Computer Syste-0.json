{"source_docs_file": "Informatics and Computer Systems.json", "paragraph_source_docs": [0, 0, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0], "paragraphs": ["Այսպիսով    շարժական  բանալու  հարցման    արդյունքում  ձևավորվում  է  գաղտնի բանալու  ձևաչափը,  որը  բաղկացած  է  M  *  N  բիթ  ծավալ  ունեցող  պատահականության սկզբունքով  ձևավորված  R  մատրիցից,  R  մատրիցի  երկարությամբ  G  մատրիցից,  N  և  M փոփոխականներից, որոնց ծավալը կազմում է 2 բիթ։ Վերոհիշյալ ձևաչափը ներկայացված է աղյուսակ 5-ում։ ", "Աղյուսակ 4․ Հրամանների և հեշերի արտապատկերումը Հրամաններ ………  ……………………... Stotal  CANCEL_MAKING Բանալու  ձևավորման  հարցմանը  ուղարկվող  պատասխանում,  բացի  ձևավորված բանալուց, հարցման գլխամասին ավելացվում է նաև այդ բանալու 128 բիթ երկարությամբ եզակի նույնականացման նշիչից՝ PKID-ին։ Այսպիսով ֆայլի ընդհանուր ծավալը համարժեք է    W  =  |R|  +  |G|  +  2  բանաձևի  արժեքին,  որտեղ  |R|,  |G|  և  |PKID|  համապատասխան տվյալների  երկարություններն  են։  Դասական  տարբերակում,  որտեղ  M  =  N  =  8,  ծավալը դառնում է  W = 130։ Արդյունքում գաղտնի բանալու ձևավորման գործընթացն ավարտելուց հետո  այդ  բանալին  և  PKID  ուղարկվում  են  որպես  պատասխան  բանալու  ձևավորման հարցման համար։ ", "Ինչպես  գիտենք,  բիթային  XOR-ը  կատարում  է  համեմատությունը  երկու պիքսելների(բիթերի) միջև՝ արդյունքում վերադարձնելով 1, եթե երկու բիթերը տարբեր են,  և  0,  եթե  դրանք  նույնն  են:  Նկար  2.3-ում  XOR  բիթային  համենատության արդյունքում վերադարձված 1-ը արտահայտված է սպիտակ գույնով, իսկ 0-ն՝ սև: ", "Դասակարգման արդյունքում պարզ է դառնում հարցման տեսակը, որը կարող է լինել կամ հեշային,  կամ  գաղտնագրային։  Հեշային  հարցման  պարագայում  հարցման  մեջ  պետք  է առկա  լինեն  նաև  KFI(KeyFramIndex),  PKID,  Salt  և  VH(ValidationHash)  տվյալները,  որոնք օգտագործում են հարցման վավերականացման համար։ ", "𝑃𝑃𝑃𝑃 Մուտքերի  արդյունքում  ստացված արժեքը  փոխակերպվում  է -ի 𝑓𝑓𝑖𝑖 ելքային  ֆունկցիայի  միջոցով,  որը  որոշում  է  ընթացիկ  ազդանշանի  մեծությունը: ", "𝑃𝑃𝑃𝑃 𝑎𝑎𝑖𝑖 Նեյրոնային  ցանցեր  կառուցելու  համար  օգտագործվել  են  մի  շարք  ակտիվացման ֆունկցիաներ,  որոնցից  քայլ/step  ֆունկցիան  ամենապարզն է:  Քայլ/step ակտիվացիոն  ֆունկցիայի  միջոցով -ի  ելքային  տվյալները  կարող  են  ընդունել կամ կամ ,  կախված  ակտիվացիոն  ֆունկցիայի  արժեքից  ցածր  կամ  բարձր 𝑃𝑃𝑃𝑃 լինելուց (Նկար 32): Այլ կերպ ասած, ունենք հետևյալը. 𝑦𝑦𝑖𝑖 = � որտեղ եթե հակառակ դեպքում 𝑎𝑎𝑖𝑖 > 0 𝑢𝑢 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Այնուամենայնիվ, աղմուկը  զտելու համար, հետևաբար բարելավվելու և իրական 𝑗𝑗=1 կայուն  վիճակի  հասնելու  նկատառումներով  որոշ  նեյրոնային  ցանցերի  համար սովորաբար օգտագործվում է սիգմոիդ ակտիվացումը, արտահայտված Նկար 33-ի ձևով. որտեղ 𝑦𝑦𝑖𝑖 = 𝑓𝑓𝑖𝑖(𝑎𝑎𝑖𝑖) = −𝑐𝑐𝑎𝑎𝑖𝑖 𝑢𝑢 𝑗𝑗=1 𝑎𝑎𝑖𝑖 = �� 𝑤𝑤𝑖𝑖𝑗𝑗𝑥𝑥𝑗𝑗 − 𝑠𝑠𝑖𝑖 Նկար 32.Քայլ/Step ակտիվացիոն ֆունկցիա: ", "𝑁𝑁 𝐶𝐶𝑘𝑘   = � 𝑃𝑃𝑃𝑃𝑖𝑖 𝑙𝑙=0 ⊕ 𝐾𝐾𝐾𝐾𝑖𝑖; (2.9) Այնուհետև  կատարվում  է  բացահայտած  հրամանի  հեշավորում`  օգտագործելով  P 𝐶𝐶𝑖𝑖   = (𝐶𝐶𝑘𝑘 ∗ 𝐶𝐶𝑁𝑁) ⊕  KFI; տողը  որպես  բանալի։  Հարցման  մարմնում  առկա  VH  հեշի  արժեքի  և  Hp(C  +  Salt)  հեշի արժեքի հավասարության դեպքում հարցումը համարվում է վավեր, և շարժական բանալին նոր հարցում է կատարում  այդ հրամանով  համապատասխան ինտերնետ իրին։ Հակառակ դեպքում  հարցումը  համարվում  է  անվավեր։  Գոյություն  ունի  անվավեր  հարցումների սահմանափակում,  որի  գերազանցման  դեպքում  կատարվում  է  հաջորդ  բանալու հաշվարկումը։ ", "Այստեղ -ն  հաստատուն  է,  որը  սահմանում  է -ի  աշխատանքում ներկայացված  շեմի  մակարդակը:  Այս  տեսակի  գործառույթի  առաջարկած  որոշ 𝑐𝑐 𝑃𝑃𝑃𝑃𝑖𝑖 առավելություններ  հետագայում  ավելի  պարզ  կդառնա  ( հայտնի  է  նաև  որպես «ջերմաստիճան»):  Որոշ  դեպքերում  դրա  արժեքը  կարող  է  սահմանվել արհեստականորեն  բարձր  մակարդակի  վրա,  որը  կստիպի  նեյրոնային  ցանցին ավելի  լավ  կատարել  աշխատանքը,  այսինքն  կբարձրանա  հավանականությունը ավելի կայուն վիճակին հասնելու: ", "𝐶𝐶𝑖𝑖 Մինչ  հարցում  ուղարկելը  նաև  գեներացվում  է  պատահական  ascii ∗ 𝐶𝐶𝑁𝑁 KFI  = (𝐶𝐶𝑘𝑘 ∗ 𝐶𝐶𝑁𝑁) ⊕   𝐶𝐶𝑖𝑖 ∶ սիմվոլներից  բաղկացած  10  բիթ  երկարությամբ  SALT-ը  և  կատարվում  է  հրամանի հեշավորում  օգտագործելով  KK  բանալին։  Որպես  հեշավորման  հաղորդագրություն օգտագործվում  է  Ci  հրամանի  SALT-ի  միավորումը,  որը  բացառում  է  հեշ  արժեքի  կապի բացահայտումը։ Ստացված հեշը, KFI և SALT-ը ուղարկվում է շարժական բանալուն։ ", "Մասնավորապես, մեր կողմից առաջարկվող տարբերակում  [61] ընտրվել են բազմաշերտ բաղադրիչ(multilayer perceptron) տիպի նեյրոնային ցանցերի տեսակը մեկ մուտքային և մեկ ելքային նեյրոններով: Նեյրոնային ցանցերում օգտագործվել են  Bias  նեյրոնները,  որպես  փոխանցման  ֆունկցիա  ընտրվել  է  սիգմոիդ  տիպը, մինչդեռ  ուսուցողական  կանոնը  մշակվում  է  back-propagation  մեթոդաբանության հիման վրա: ", "𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛  =  𝑗𝑗  ∗  𝑁𝑁  +  𝑖𝑖 Արդյունքում  հնարավոր  է  դառնում  կիրառել  առաջին  փուլում  նկարագրված  նույն գործողությունները  ձևափոխված  մատրիցի  վրա  և  ստանալ  տարբեր  բանալիներ  առանց կրկնվելու հավանականության։ ", "Երկրորդ  փուլի  ընթացքում  կրկնվում  են  առաջին  փուլում  կատարած  բոլոր գործողությունները մինչ «transpose» փոխարկումը, որի փոխարեն օգտագործվում է մեկ այլ փոխարկում հետևյալ բանաձևերով ։ ", "կստանանք բանաձև 2-ի միջոցով, 2-րդի համար՝ բանաձև 3-ի, 3-րդի համար՝ բանաձև (2.2) (2.3) (2.4) (2.5) Պատկերի  համար  կախված  տեղանքից  և  հնարավոր  եղանակային փոփոխություններից՝  որոշվում  է  σ  ընդհանուր  շեմային  գործակիցը  տեսախցիկը առաջին անգամ տեղադրելիս: ", "(𝑁𝑁  −  𝑖𝑖  −  1)   ∗  𝑁𝑁  +  𝑗𝑗 համար  կատարվում  է  մատրիցի  «transpose»  փոխարկումը  և  սյուների  փոխարկում։  Սյան փոխարկման  համար  ամեն  փոխարկվող  մասնիկին  համապատասխան  մասնիկը հաշվարկվում է հետևյալ կերպ ։ ", "𝑖𝑖  ∗  𝑁𝑁  +  𝑁𝑁  −  𝑗𝑗 –  1 մասնիկների փոխարկում ըստ տեղերի, այնուհետև` ըստ սյուների։ ", "Հաշվի  առնելով rotor-router  համակարգի  առանձնահատկությունները նկարագրված բաժին 2.3-ում, նկատվել է դրա նպատակահարմար կիրառումը նաև կլաստերային  համակարգերում:  Արդյունքում  ստացվել  է  կանխատեսումների տեսանելի  արդյունք  SandScheduler-ի  միջոցով,  որոնցից  է,  օրինակ՝  2.3  բաժնում բերված հիփոթեզը: ", "Առաջարկված հեշավորման դասի վրա հիմնված հրամանների փոխանակման համակարգը համեմատվել  է  նաև  այլ  հայտնի  ալգորիթմների  հետ  արագագործության  առումով,  որի արդյունքները  ներկայացված  են  աղյուսակ  7-ում։  CMP  (Command  Message  Protocol)  դա առաջարկված գաղտնահամակագրի կարճ հապավումն է։ ", "Նաև  կատարվել  է  գաղտնահամակարգի  կայունության  վերլուծություն։  Ութը սիմվոլներից  բաղկացած  բանալին  հատարկման  տարբերակով  գտնելու  համար անհրաժեշտ է կատարել առավելագույնը 264 քանակի փորձ, որը հաշվարկվում է հետևյալ բանաձևով՝ :  Հաշվի  առնելով  այն  փաստը,  որ  գոյություն  ունի  անվավեր հարցումներից սահմանափակում, որից հետո կատարվում է բանալու վերահաշվարկ, այս 𝑀𝑀∗𝑁𝑁 𝑖𝑖=0 ∏ (256 − 𝑖𝑖) տարբերակով բանալու դուրս բերումը կարելի է  համարել գրեթե անհնար։ Հարցման մեջ առկա տվյալները առանց փակ բանալու իմացության չեն տրամադրում տեղեկատվություն ուղարկվող  հրամանների  մասին  և  ունեն  պահանջված  գաղտնակայունություն, մասնավորապես՝  VH  հեշը  ունի  2n  բարդության  աստիճան։  R  և  G  մատրիցի  հնարավոր տարբերակների  մոտավոր  քանակն  հավասար  է  համապատասխանաբար -ի և 253-ի։ ", "Այստեղից  կարելի  է  եզրակացնել,  որ  հատարկման  տարբերակով  փակ  բանալու բացահայտման համար անհրաժեշտ առավելագույն քանակը հավասար է 2565։ ", "Նկ.11. Փուլերի ընթացքում R մատրիցի ձևափոխման օրինակը Աղյուսակ 7. Առաջարկված գաղտնահամակարգի արագագործության համեմատականը Կատարման քանակը Ժամանակը միլիվայրկյաններով AES 128 RSA 1024 CMP SHA 256 CMP SHA 384 CMP SHA 512 Եթե  հարցումը  պարունակում  է  այնպիսի  տվյալներ,  որոնք  հրամաններ  չեն,  ապա իրականացվում  է  համապատասխան  վերահասցեավորում`  օգտագործելով  HTTPS արձանագրությունը, որի կապի հաստատման գործառույթի (handshake)  ընթացքում որպես գաղտնագրման  ալգորիթմ    ընտրվում  է  AES։  Շարժական  բանալին,  ստանալով  անլար ցանցին  միացած  սարքավորումներից  հարցումներ,  նախքան  վերահասցեավորումը ստուգում է  այդ հարցումների վերջնական հասցեներին համապատասխան կարգաբերումների  գոյությունը։  Եթե  այդպիսի  կարգաբերումներ  գոյություն  չունեն, հարցումն ուղարկվում է առանց փոփոխության[44]: ", "HTTPS արձանագրության մեջ օգտագործվող AES ալգորիթմի արագացման համար օգտագործվել  են  Intel  AES-NI  լրացումները,  որը  թողարկվել  է  հատուկ  Intel  ընկերության պրոցեսորների,  մասնավորապես՝  շարժական  բանալու  սարքի  համար։  Շնորհիվ  այդ լրացումների  հնարավոր  է  AES  ալգորիթմում  օգտագործվող  հաշվողական  մի  քանի հրամաններ  կատարել`  օգտագործելով  ընդամենը  մեկ  հատուկ  հրաման:  Հատուկ հրամաններից  են  ՝  AESENC(AES  Encrypt  Round),  AESENCLAST  (AES  Encrypt  Last  Round), AESDEC  (AES  Decrypt  Round),  AESDECLAST(AES  Decrypt  Last  Round),  AESKEYGENASSIST (AES Key Generation Assist), AESIMC(AES Inverse Mix Columns): ", "Նկար 35.SandScheduler ծրագրային փաթեթ: ", "Վերոհիշյալ պահանջներին համապատասխանում են Intel-ի կողմից արտադրվող և համեմատաբար  բարձր  հաշվողական  ռեսուրսներ  ունեցող  ինտերնետ  իրերը:  Տվյալ սարքերը տրամադրում են համապատասխան միջավայր` տեխնիկական փոփոխություններ և լրացումներ կատարելու համար։ Գոյություն ունեցող հավելվածների միջոցով հնարավոր է  հեշտությամբ  փոխել  այդ  սարքերի  կարգավորումները  և  կառավարել  բոլոր  ծրագրային գործընթացները: Տվյալ սարքերում հնարավոր է տեղադրել Ubilinux, որը  հնարավորություն է  տալիս  առանց  բարդությունների  ինտեգրել  անլար  ցանցային  կապի  համար նախատեսված ծրագրային փաթեթները: ", "•  Հետազոտվել են տարատեսակ ինտերնետ իրեր՝ միմյանց հետ փոխազդելու եզակի գլոբալ  հասցեավորման  սխեմայի  և  ծառայությունների  տրամադրման  մեխանիզմների բացահայտման նպատակով: ", "SandScheduler համակարգի տեսքը պատկերված է Նկար 38-ում, որտեղ ՛Create'  կոճակով ստեղծվում է համապատասխան չափի մատրից/կլաստեր: ", "համապատասխանաբար  նաև  խնդիրների  տեղաբաշխման  պրոցեսը ստեղծելով նշված քանակությամբ մատրիցներ, և վերջում տպում է ստացված միջին արդյունքները «Statistics» բաժնում համար  պահանջվում են գրաֆի  տարբեր ներկայացումներ, կա երկու տեսակ ներկայացում. a.  Մեծ  շրջաններ,  որը  հարմար  է  ավազահատիկների  փլուզումը  ցույց տալու համար նկար 37 b.  Մեծ ուղղանկյուններ, որը հարմար է ցույց տալու խնդիրների բաշխման անիմացիան, որտեղ յուրաքանչյուր վանդակ պետք է ցույց տա իր մեջ գտնվող,  կատարվող  և  հերթի  մեջ  գտնվող  խնդիրները  նկար  35: ", "Նկար 37.SandScheduler համակարգում շրջաններով տեսաբերում: ", "•  Գնահատվել  է  մեթոդի  պիտանիությունը՝  հիշողության,  հաղորդակցման,  հաշվո- ղական գերբեռնվածության և հարձակումների նկատմամբ կայունության առումներով: ", "•  Մշակվել է գաղտնագրման նոր համակարգ պարզ ինտերնետ իրերի համար: Տվյալ համակարգը,  ստուգելով  հարցումներում  առկա  տվյալները,  գործածում  է,  կամ գաղտնագրային  կամ  արտապատկերման  միջոցով  հրամանների  նույնացման գործառույթը։  Առաջարկած  գաղտնահամակարգն  աշխատում  է  պարզ  ինտերնետ իրերից անկախ. այսինքն` չի պահանջում գոյություն ունեցող սարքի ապարատային կամ ծրագրային փոփոխություն: ", "Պատկերների  բուրգի  կառուցումը.  Բուրգի  հիմք  է  հանդիսանում  տեսաշարից վերցված  օրիգինալ  կադրը,  որը  ենթարվում  է -գործողության,  ապա  պատկերը փոքրացվում  է գործակցով  մի  քանի  անգամ  (Նկար  2.9)։  Սա  թույլ  է  տալիս զգալիորեն  նվազեցնել  պատկերում  աղմուկը  և  ֆոնային  զատման  միջոցով պատկերների  համեմատման  ժամանակ  համեմատել  փոքր  պատկերներ,  որն  էլ  իր հերթին կնպաստի ալգորիթմի արագագործությանը։ ", "Նկար 2.9․ Պատկերների բուրգը: ", "Այդ  նպատակով  միջավայրի  գործառույթների  ավտոմատացման  համար առաջարկվում է ներմուծել հանգույցներին հաղորդվող հաղորդագրությունների` աղյուսակ գաղտնիքի (մյուսների համար անվերծանելի)  մասնաբաժինը։ ", "Աղյուսակ 8. Հաղորդագրության ձևաչափը Առանձին հանգույցների գաղտնագրված տվյալները Գլխամաս E1 E2 E3 E4 E5 Hashcas, N1 -Nm Առաջարկվող  մոդելն  օգտագործում  է  իրերի  ինտերնետ  միջավայրի  համար մշակված  արձանագրությունը  և  ձևաչափը,  որը  հնարավորություն  է  տալիս  իրագործել՝ գործառույթների կառավարումը, տվյալների գաղտնագրումը, սխալների հայտնաբերումը և գործառույթների չեղարկումը։ ", "Գործառույթների  կառավարումը  կատարվում  է  ձևաչափում  նկարագրված հաջորդականության  շնորհիվ,  որը  M  չափի  զանգված  է  բաղկացած  168  բայթ երկարություն ունեցող Ni տեղեկատվությունից (աղյուսակ 9), որտեղ առաջին 128 բայթը եզակի նշիչ (UID) է կամ IP6 հասցե։ Հասցեին հաջորդող 32 բայթ երկարությամբ Լ տվյալը ցույց  է  տալիս  ձևաչափի  մարմնում  գտնվող  գաղտնագրված  տեղեկատվության  չափը: ", "Վերջին  8  բայթը՝  D-ն,  ցույց  է  տալիս  համապատասխան  ինտերնետ  իրի  գործառույթի խորությունը գործառույթների ծառում։ ", "Աղյուսակ 9. Հաղորդագրության գլխամասի ձևաչափը N1 գործառույթ N2 գործառույթ Nm գործառույթ UID| IP6 UID | IP6  L UID | IP6 Տվյալների գաղտնագրումը  կատարվում է 1-ից մինչև N քանակի բանալիներով, որտեղ  N  պարամետրը  փոքր  կամ  հավասար է  ցանցում  առկա  ինտերնետ  իրերի  թվին։ ", "Մեթոդի  արագագործությունը  ուղիղ  համեմատական  է  կատարվող  ընդհանուր պիքսելային ստուգումների հետ։ ", "ՎԵՐԼՈՒԾՈՒԹՅՈՒՆԸ և ԳՆԱՀԱՏԱԿԱՆԸ Ատենախոսության  չորրորդ  գլխում  զետեղված  են  ինքնակազմակերպվող համակարգերի  ուսումնասիրմանը  նվիրված  ծրագրային  փաթեթների  և  արդեն գոյություն ունեցող լուծումների միջև համամետական վերլուծությունը: ", "Lstart = L0 + L1 +···+ Li-1,  Lend = Lstart + Lend,           D(Ni) = Lstart, …, Lend                               (3.1) Հարցում ուղարկող հանգույցը գտնվում է D–1 կամ D +1 խորության վրա, որտեղ D- ն տվյալ հանգույցի խորությունն է։ Նկարագրած ձևաչափի կիրառումը հնարավորություն է տալիս ապահովել ինտերնետ իրերին պատկանող տեղեկատվական անվտանգությունն այլ ինտերնետ իրերից։ ", "Սխալների  հայտնաբերումը  և  գործառույթների  չեղարկումը    կատարվում  է՝ հիմնվելով գաղտնագրված տեղեկատվության վերծանման արդյունքի վրա։ Ինչպես նշվել է, ինտերնետ իրերին պատկանող տեղեկատվության վերծանման համար անհրաժեշտ է D–1 ինտերնետ իրերին պատկանող բաց տվյալի հեշը և տվյալ ինտերնետ իրի բանալին։ ", "Ալգորիթմը չի սահմանափակում փնտրվող օյեկտները ըստ տեսակի: ", "Նշենք  նաև,  որ    «CA  Simulator»  փաթեթի  միջոցով  կարելի    է  կատարել բազմաթիվ  տարանջատված  համատեղ  հետազոտություններ,  և  պահպանել հետազոտությունների  ընթացքում  կամայական  պահին  մոդելի  վիճակը՝  հետագա ինչպես  համատեղ,  այնպես  էլ  միանձնյա  հետազոտությունների  համար:    «CA Simulator»-ը ստեղծվել է օգտագործելով .Net միջավայրը և C# լեզուն, իսկ սերվերի տեղակայման  համար  ընտրվել  է  Microsoft  Azure-ը:  Իրականացման  ընթացքում պահպանվել  են  ՕԿԾ-ի  (OOP)  բոլոր  ստանդարտները  և  SOLID-ի  սկզբունքները, որոնք  խիստ  անհրաժեշտ  են  այնքանով,  որ  հնարավորություն  են  ընձեռում  ավելի դյուրին կերպով կատարել համակարգի ֆունկցիոնալ ընդլայնումը և հավելումը այլ բջջային ավտոմատերի մոդելներով: ", "Այսպիսով,  ներկայացրած  արձանագրության  շնորհիվ,  հարցումից  կախված, ինֆորմացիան  փոխանցվում է ցանցի հանգույցին, որը. •  իրեն  հասանելի  մասնաբաժնի  համար  իրականացնում  է  վերծանում  և  դրան համապատասխան գործառույթ, •  ձևավորում  է  վերծանված  մասնաբաժնի  հեշը,  որը  հավելվում  է  վերոհիշյալ հաղորդագրության մեջ՝ գաղտնիքի մասնաբաժնի  ամբողջականության վերահսկման նպատակով։ ", "Այս  ենթավերնագրում  ներկայացվում  է  կեղծ  թիրախների  զատման  ընդհանուր մշակման  քայլերն  ու  հիմնական  որոշման  կանոնները  վերը  նշված  տեսահսկման մասնավոր համակարգերի համար  [53]: ", "Կեղծ  թիրախների  առկայությունը  հանգեցնում  է  հայտնաբերման  սխալ արդյունքի և  ալգորիթմի  ավելորդ ժամանակի ծախսի:  Տվյալ մեթոդը նպատակաուղղված է իրագործել հետևյալ կետերը․ •  Որոնել կեղծ թիրախները։ ", "Այն  դեպքում,  երբ  հանգույցը,  որին  փոխանցվել  է  վերոհիշյալ  ձևաչափի հաղորդագրությունը  և,  որն  իր  կարգային  համարը չի  հայտնաբերում  այդ հաղորդագրության  մեջ,  ուստի  ազատ  է  գաղտնիքի  որևէ  մասնաբաժին  վերծանելուց, կառավարումը փոխանցում է հաջորդ հանգույցին՝ ապահովելով միայն հեշավորումը։ ", "Հեշ  արժեքների  ստուգման  անհաջողության  դեպքում  տվյալ  հանգույցի գործառույթի  ամբողջ  շղթան,  չեղարկման  հետ,  ազդանշան    է  ուղարկում  նույն հաջորդականությամբ։ ", "Հաջողության  դեպքում  հանգույցը  որոշում  է  ստացված  հաղորդագրությունը փոխանցել անհրաժեշտ հանգույցին՝ ըստ UID-ի։ Ամեն հաջորդ հանգույցում ձևավորված հեշերի  շղթան  երաշխիք  է՝  ցանցի  գործողությունների  վավեր  լինելը  հավաստիացնելու համար։ ", "Այսպիսով,  առաջարկվել  են  իրերի  ինտերնետ  միջավայրի  համար  մշակված արձանագրությունը, ձևաչափը, որն ունակ է տեղեկություն հաղորդել այլ հանգույցների՝ տվյալ  հանգույցում  անոմալիաների    իրազեկման  համար  և  արգելակել  ամբողջ համակարգի  աշխատանքը՝  թույլ  օղակի  գործոնով    բացառել  համակարգի  հետագա գործողությունը։ Առաջարկված մեթոդը, որպես հեշային ֆունկցիա կարող է օգտագործել ցանկացած գաղտնակայուն հեշ ֆունկցիաներից մեկը, բայց հաշվի առնելով ինտերնետ իրերի  առանձնահատկությունների  փաստը,  առաջանում  է  գոյություն  ունեցող  հեշ ֆունկցիաները  հետազոտելու  և  տվյալ  մեթոդին  համապատասխան  հեշ  ֆունկցիա գտնելու անհրաժեշտություն։ ", "Տեղեկատվության  անվտանգության  ապահովման  համար  կարևոր  նշանակություն ունի hեշ ֆունկցիաների կիրառումը: Տվյալ ոլորտում առաջարկված  լավագույն լուծումներից կարելի  է  առանձնացնել    քաոսային  տեսության  վրա  հիմնված  հեշ  ֆունկցիաները:  Այդ ֆունկցիաներն  օգտագործում  են  միաչափ  արտապատկերումներ,  ինչպիսիք  են լոգիստիկային և տենտային արտապատկերումները, կամ կիրառում են բարդ բազմաչափ արտապատկերումներ, որոնք, որպես կանոն, անվտանգ չեն և  հիմնականում հեշտությամբ են  գրոհի ենթարկվում [45]։ "]}
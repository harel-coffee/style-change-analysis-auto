{"paragraph_source_docs": [1, 1, 2, 2, 1, 0, 1, 4, 1, 0, 1, 2, 3, 2, 3, 1, 1, 0, 0, 1, 1, 1, 1, 4, 3, 1, 2, 1, 1, 2, 3, 2, 1, 1, 1, 0, 1, 4, 1, 2, 3, 3, 3, 1, 4, 2, 3, 2, 1, 4], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraphs": ["Բայց  այդ    հաջորդական  մշակման  շնորհիվ,  հնարավոր  է  դառնում.  ա)  ապահովել մշակման  արդյունքների  միանշանակությունը,  և,  որ  շատ  կարևոր  է,  բ)  բացառել    PA աշխատանքի  ընթացքում    անորոշ  իրավիճակների  ի  հայտ  գալը,  որը  տեսականորեն հնարավոր է զուգահեռ մշակման դեպքում: ", "SIE ԱՀ-ում  մեկ այլ կարևոր խնդիր է կիրառվող ԾՕ-ների քանակի լավարկումը: ", "Վերոհիշյալ  մեթոդներից  մեկը  հիմնված  է  տեսակավորման  ալգորիթմների  վրա  [57, նվազագույնի:  Հեշտ  է  նկատել,  որ  ընտրված  երկու  տարրերի  համար՝  u  ∈  R2  և  v  ∈  R2, դրանց  հարևան  տարրերի  հետ  հատումների  քանակը  կախված  է  միայն  այդ  երկու տարրերի  հարաբերական  դիրքերից:  Այսպիսով,  կարող  ենք  դիտարկել  հատումների - 59 - քանակը՝ փոխելով տրված ռանգում տարրերի հարաբերական դիրքերը: Հենց տարրերի հարաբերական դիրքերը փոխելու վրա էլ հիմնված են  տեսակավորման ալգորիթմներն օգտագործող  մեթոդները:  Այդպիսի  մեթոդները  պետք  է  արագ  հաշվեն  հատումների պոտենցիալ  քանակը:  Դա  կարող  է  կատարվել  ուղակի  O(|W|2)  ժամանակում  կամ լավարկել մինչև O( ), որտեղ KUV-ն հատումների քանակն է, որն առաջանում է u և v տարրերի  զույգի  միջոցով:  Հնարավոր  հատումների  հաշվարկը  յուրաքանչյուր  զույգի դեպքում  պետք  է  կատարել  միայն  մեկ  անգամ  (դա  էլ  հենց  տալիս  է  տարրերի բազմության դասավորությունը): ", "Տեսակավորման մեթոդների վրա հիմնված ալգորիթմներից մեկն իր էությամբ նման է պղպջակների  մեթոդին  (bubble  sort)  [57,  59]:  Հերթականությամբ  դիտարկվում  են հարևան գագաթների բոլոր զույգերը, և դրանք տեղերով փոխվում են, եթե այդ դեպքում հատումների  թիվը  կփոքրանա:  Գործընթացն  ավարտվում  է,  երբ  հերթական  լրիվ դիտարկումից  հետո  (բոլոր  տարրերով  անցնելուց  հետո)    հատումների  քանակը  չի նվազում  (չկարգավորված  զույգ  չի  գտնվում):  Այս  ալգորիթմի  բարդությունը  O(|R2|2)  է, քանի որ վերջնական կարգավորություն ստանալու համար կարող են անհրաժեշտ լինել մինչև անգամ |R2| դիտարկումներ: Այսպիսի ալգորիթմի ընտրությունը խիստ կախված է նախնական  դասավորության  ընտրությունից,  քանի  որ  դիտարկվում  և  տեղափոխվում են միայն իրար հարևան տարրերը: ", "- 82 - Հակառակ դեպքերում, բացի հիմնական անկյունագծային ԾՕ-ից՝ գեներացվում են նաև լրացուցիչ ԾՕ-ներ: Օրինակ՝ երբ  տողերի քանակը մեծ է սյուների քանակից #PR > #PC (Տես՝ նկ. 2.19 բ., գ.), կամ երբ սյուների քանակը մեծ է տողերի քանակից #PC > #PR  (Տես՝ #PC = #PR #PC = #PR /2 #PR = #PC /2 նկ. 2.19 դ., ե.): ", "Համեմատելով  երկու  տարբերակները,  համակարգում  նպատակահարմար  է ունենալ  ներքին  փոստային  սերվեր։  Դա  թույլ  կտա  ունենալ  արագ  հասանելիություն ստացված  նամակներին  և  խուսափել  հավելյալ  ցանցային  կապից  ու  դրանից  բխող պոտենցիալ խնդիրներից՝ կապի խափանում, ժամանակային հապաղումներ և այլն։ ", "Ինչպաս  և  SIV-ի  դեպքում՝    SIE  ծրագրային  ԱՀ-ի  աշխատանքի  կառավարումը կատարվում  է    ղեկավարման  ֆայլի  միջոցով:    Հավելված  5  –ում  ներկայացված  է  SIE ծրագրային ԱՀ-ի ղեկավարման ֆայլի օրինակը: ", "Ա յժմ  դ ի տ ա ր կ ե ն ք   հիշողութ յա ն  Հ Ն Թ Յ -ի   խ մբա վորմա ն  մե թ ո դ ը '  հա շվի  ա ռ ն ե լո վ տ րվ ա ծ  ա ռ ա վելա գույն  հզորութ յա ն  սպ ա ռմա ն  և  տ ա րրերի  քա ն ա կ ի   ա րժ եքները, հիշողութ յա ն  դ ո մ ե ն ն ե ր ը   և  օ պ տ ի մ ա լ  թ ե ս տ ա վորմա ն  ժ ա մա նա կը: ", "SIV-ի հոսքի օգտագործման փորձնական տվյալները ՍՊԴԿ SDV SDV GDSII  ֆայլերի SDV-ի մշակման կոմպիլյատոր կոնֆիգուրա- գեներացման ընդհանուր Աղյուսակ 2.1 ցիաների ժամանակը ժամանակը քանակը (զուգահեռացման գործակից=16) ts90nm 1p11HS 512K ts90nm 1p11HD 512K ts65nm 1p11HS 512K ts65nm 2p22HD 512K ts45nm 1p11 512K ts32nm 1p11 1M ts28nm 2p22 1M ts22nm 1p11 1M ts14nm 1p11 1M մոտ 2 ժամ մոտ 3 ժամ մոտ 2.2 ժամ մոտ 2.4 ժամ մոտ 4.5  ժամ մոտ 4.5 ժամ մոտ 3.5  ժամ մոտ 4.2 ժամ մոտ 4.4 ժամ մոտ 5.5 ժամ մոտ 5.2 ժամ մոտ 6.3 ժամ մոտ 6.3 ժամ մոտ 7 ժամ մոտ 7.1 ժամ մոտ 8.2 ժամ մոտ 8.5 ժամ մոտ 10 ժամ Հարկ է նշել, որ ժամանակակից հիշողության կոմպիլյատորների SDV ստուգման կոնֆիգուրացիաների  քանակը  հասնում  է  մի  քանի  հարյուրների  (Տես՝  աղ.  2.1),  ուստի - 84 - շատ կարևոր է  դառնում հնարավորինս ավտոմատացնել, արագացնել  GDSII   ֆայլերի գեներացումը  և  մշակումը:  Այդ  նպատակով  SIV-ում  իրականացված  է    նմուշների գեներացման  աշխատանքների  զուգահեռ  կատարումը:  Բացի  այդ,  իր  աշխատանքի սկզբում  նախապես  համեմատվում  և  գեներացման  հերթից  դուրս  են  հանվում  արդեն գեներացված կոնֆիգուրացիաները:  Ցավոք,  ներկայումս անհնար  է լիովին ավտոմատացնել  արդյունքների  վերջնական  մշակման  աշխատանքները,  այն  կարելի  է պարզեցնել, հեշտացնել [27-29]՝  առավելագույնս նվազեցնելով մեխանիկորեն մշակվող ինֆորմացիայի  քանակը  և  տրամադրելով  մշակմանը  անհրաժեշտ  ինֆորմացիան առավելագույնս  ընթերցելի  տեսքով:  Աղյուսակ  2.1-ից  երևում  է,  որ  GDSII  ֆայլերի գեներացման  ժամանակի  և  այդ  ֆայլերի  քանակի  աճման  կախվածությունը  գծային  չէ: ", "Համակարգի  մուտքային  ինֆորմացիոն  աղբյուրը  էլեկտրոնային  նամակներն  են։ ", "Աղյուսակ  2.2-ում  տրված  են  հիշողության  կոմպիլյատորների  բնութագրերը  և դրանց համապատասխան  ASV  ալգորիթմի  աշխատանքի ժամանակային գնահատականները, որտեղ  «K» դա –կիլոբիթ է իսկ  «M» - մեգաբիթ: ", "|R1|  =  n,  |R2|  =  2,  և  R1-ի  տարրերի  այնպիսի  x1  դասավորություն,  որ  avg(G,x1)/ opt(G,x1) համեմատական է n1/2: ", "Ազդանշանների տվյալ հիմնական բնութագրող հատկանիշը մշակվել է հատուկ M- PSK և M-QAM մոդուլացման տեսակների տարբերակման համար: Ինչպես արդեն նշվել է  և  երևում  է  հավասարում (3.28)-ից  M-PSK  մոդուլացված  ազդանշանների ակնթարթային  ամպլիտուդան չի  փոփոխվում:  Միևնույն  ժամանակ  M-QAM մոդուլացումների  դեպքում՝  ինչպես  երևում  է  հավասարում  (3.35)-ից,  ակնթարթային ամպլիտուդայի  արժեքները  փոփոխական  են՝  օրինակ  16QAM  մոդուլացման  դեպքում (նկ. 3. 14) բացարձակ ամպլիտուդան ունի երեք արժեք: ", "Այս  մեթոդի ձևափոխված տարբերակը կիրառվել է այս  աշխատանքում, որի ավելի մանրամասն նկարագրությունը ներկայացված է 3․ 4 գլխում։ ", "Տվյալ բնութագրի ծրագրային իրականացումը պատկերված է նկ. 3.20-ում: ", "Աղյուսակ 2.3 SIE-ի հոսքի աշխատանքի տևողությունը NW  NB  CM  PR PC NPP ST (minutes)  TT (minutes) - 86 - Աղյուսակ 2.3  (շարունակություն) SIE-ի հոսքի աշխատանքի տևողությունը   NW (Number of Words) – Բառերի քանակը հիշողությունում,   NB (Number of Bits) – Հիշողության Մուտքերի/Ելքերի քանակը,   CM (Column Mux) – Սյուների փոխանջատիչի երկարությունը,   PR, PR=NW/CM - Ֆիզիկական տողերի քանակը հիշողությունում,   PC,  PC=NBxCM - Ֆիզիկական սյուների քանակը հիշողությունում,   NPP (Number of Programming Patterns) – գեներացված Ծրագրավորման   ST (Simulation Time in minutes) - նմուշի SPICE ֆայլի մոդելավորման ժամանակը   TT (Total Time in minutes)  TT=NPPxST - Ընդհանուր ժամանակը րոպեներով: ", "օրինակների քանակը, րոպեներով, Փորձերի  ընթացքում  նկատվեց,  որ  չնայած  նրան,  որ    մոդելի  դուրսբերման ժամանակը  կախված է  հիշողության  պատրաստման  տեխնոլոգիայից,  ԱՀ-ի աշխատանքի  տևողությունը  հիմնականում  կախված  է  նմուշի  կոնֆիգուրացիայի պարամետրերից  (NW,  NB,  CM,  BK)  և  կատարվող  մոդելավորման  աշխատանքի տևողության ժամանակից: ", "Յուրաքանչյուր նամակի համար որոշվում է այն գործողությունների ցանկը, որոնք անհրաժեշտ  են  տվյալ  հրահանգի  կատարման  համար,  որից  հետո  զուգահեռաբար սկսվում է հրահանգների կատարման գործընթացը։ ", "Նկար 2.2. Մուտքային ինֆորմացիայի ֆիլտրման և դասակարգման հաջորդական գործընթացը Այսպիսով՝ մուտքային տվյալների մշակման մեխանիզմը թույլ է տալիս ստացված տարատեսակ  էլեկտրոնային  նամակներից  զտել  միայն  համակարգի  համար ընդունելիները։  Նամակները  նախ  անցնում  են  ֆիլտրման  գործընթացով՝  ըստ համակարգի  սահմանված  չափորոշիչների,  այնուհետև  որոշվում  է յուրաքանչյուր նամակին համապատասխանող հրահանգը, որից հետո այն ուղարկվում է կատարման (Նկար 2․2)։ ", "Ինչպես  և  SIV  ԱՀ-ի  դեպքում,  SIE  ԱՀ-ի  կառավարումը,  մուտքային  պարամետրերի արժեքների  փոխանցումը  ծրագրերին,  նույնպես,  իրականացված  է  կառավարող տեքստային ֆայլի միջոցով: ", "Եզրակացություն Այս գլխում ներկայացվել են մեր կողմից մշակված և իրականացված. -  SIV ավտոմատ ծրագրային համակարգի նկարագրությունը, որը հնարավորություն է  տալիս  կատարել  հիշողության  կոմպիլյատորի  կառուցվածքային  գոտիները  և կառուցվածքային  խճողումները  նկարագրող  ֆայլի  ճշտության  ստուգումը: ", "Ներկայացված են ծրագրային ԱՀ-ի  ֆունկցիոնալ, կառուցվածքային սխեմաները; -  SIE ավտոմատ ծրագրային համակարգի նկարագրությունը, որը հնարավորություն է տալիս ստանալ Ստատիկ պատահական դիմումով հիշողության (ՍՊԴՀ) նմուշի կառուցվածքային  մոդելը  այդ  հիշողության  նմուշի  արտադրության  մեջ օգտագործվող  GDSII  ձևաչափով  ներկայացված  ֆայլից:  Ներկայացված  են ծրագրային  ԱՀ-ի    ֆունկցիոնալ,  կառուցվածքային  սխեմաները,  մոդելի  դուրս բերման հետ կապված հիմնախնդիրները, բարդությունները և սահմանափակումները: ", "Բերված են կատարված փորձերի արդյունքների տվյալները: ", "Մշակվել  է  մեթոդ  ք^\"1\"Լ  կոմպիլյատորների  նախագծման  բնութագրերի  արագ գնահատման  համար'  հիմնված  ռեգրեսիոն  անալիզի  ւիոքրագույն  քառակուսիների մեթոդի  վրա,  որը  բարելավում  է  գնահատման  սխալը:  Մշակված  մեթոդն  առաջին անգամ  ընդլայնվել  է  ք^\"1\"Լ  կոմպիլյատորների  ամբողջ  հիերարխիայի  նախագծման բնութագրերի արագ գնահատման  համար: ՀՆԹՑ-ի նախագծման բնութագրերի  արագ գնահատման  մեթոդի իրականացման ժամանակատարությունը պակասեցնելու համար մշակվել է մեթոդի  ընդլայնում,  որը  հիմնված է մեքենայական  ուսուցման  վրա: ", "Նկ. 3.23 – հաշվարկի ծրագրային կոդը Նկ.3.23-ում պատկերված կոդում ակնթարթային փուլի բաշխվածության քանակը նշված արժեքների  տիրույթներում  որոշվում  է  LabVIEW  ծրագրավորման  միջավայրի «Histogram  VI»  վիրտուալ  գործիքի  միջոցով [86]։  Այնուհետև  հաշվարկվում  է հիստոգրամի  հաջարդականության  միջին  արժեքը։  Հաջորդականության  բոլոր անդամները  ներմուծվում  են  For  օղակման  մեջ,  որտեղ  կատարվում  է  հիստոգրամի հաջորդականության  յուրաքանչյուր  անդամի  համեմատությունը  հաշվարկված  միջին արժեքի հետ և ելքում ստացվում են այն արժեքները, որոնք մեծ են այդ միջին արժեքից։ ", "Բացի այդ, համաձայն գրականությանը, ըստ իրենց վարքագծի բնույթի և բջիջների մեջ  հայտնվելու,    դրսևորման  ձևի,  թերությունները  լինում  են  և  դասակարգվում  են որպես  «փափուկ»  և  «կոշտ»:  «Կոշտ»  (անգլերեն՝  “hard”  defect)  թերություն  է  անվավում այն  թերությունը,  որի  վարքագիծը  հաստատուն  է  և  չի  փոփոխվում  ժամանակի ընթացքում  նաև  հիշողության  սարքի  սնուցման լարումը  անջատել-միացնել գործողությունից  հետո:  «Փափուկ»  են  կոչվում (անգլերեն  “soft”  defect) այն թերությունները,  որոնք  հայտնվում  և  անհետանում  են  և՛  ՆՀՍ-ի  աշխատանքի ընթացքում  և՛  սարքի  սնուցման  լարումը  անջատել-միացնելու  գործողությունից  հետո [32-35]:  Ակնհայտ  է,  որ «փափուկ»  թերությունների  արդյունքում  հայտնված անսարքությունները  ժամանակավոր  բնույթ  են  կրում  և  անհետանում  են  հիշողության բջջում  այդ թերության  դրդապատճառը  վերանալու  հետ  միաժամանակ  [36-40]: ", "կառուցվածքների  տեսքով    ներկայացումը։  Ուսումնասիրվել  են  «փափուկ»  և «կոշտ»  բլոկների հատկությունները։ ", "Մինչդեռ «Փափուկ» և «Կոշտ» անսարքությունների ազդեցության հետևանքով վնասված - 90 - ՆՀՍ-ի  աշխատունակությունը  վերականգնելու  համար    կատարվող    մոտեցումները  և գործողությունները տարբերվում  են  մեկը  մյուսից  [7]:  Այս  ատենախոսության սահմաններում, մենք  դիտարկում ենք միայն «Կոշտ»՝ հաստատուն վարքագիծ ունեցող թերությունների հետևանքով առաջացած անսարքությունները: ", "Իրատեսական թերությունների մոդելները մշակելը և թերությունների գրադարանը ունենալու  մեկ  այլ  առավելություն  է  այն,  որ  այն  հնարավորություն  է  տալիս  ստուգել թեստային  ալգորիթմները  իրական  թերությունների  գրադարանի  սահմաններում: ", "առանձնահատկությունների տեսանկյունից՝ հրատապ է դառնում, տրամաբանական  տարրերի  աշխատանքային  հզորություններից  ելնելով,  դրանց տեղաբաշխման  մեթոդների  մշակումը:  Եթե  ընդունենք,  որ  հզորության  ստատիկ բաղադրիչը գործնականում կախված չէ սխեմայի աշխատանքի տրամաբանությունից,  ապա  տարրերի  տեղակայման  փուլում  հզորությունների գնահատման  համար  կարող է  օգտագործվել  միայն  հզորությունների դինամիկական բաղադրիչը: ", "Այսպիսով՝  դիտարկվել  են  թվային  մոդուլացման  տեսակների  նույնականացման համար նախատեսված ազդանշանների հիմնական բնութագրող հատկանիշները, որոնք համապատասխանաբար նախատեսված են տարբերակել՝ – 2FSK, 4FSK և մնացած մոդուլացման տեսակները – BPSK, 2ASK, 4ASK և մնացած մոդուլացման տեսակները – 2ASK, 4ASK և մնացած մոդուլացման տեսակները – 2ASK և 4ASK մոդուլացման տեսակները – 2FSK և 4FSK մոդուլացման տեսակները – PSK և QAM մոդուլացման տեսակները – BPSK, QPSK, 8PSK մոդուլացման տեսակները – 16QAM, 32QAM, 64QAM մոդուլացման տեսակները Վերոնշյալ հիմնական բնութագրող հատկանիշների գործառույթների ուսումնասիրման  արդյունքում,  պարզվել  է,  որ  ա)  մշակված հիմնական  բնութագրի միջոցով հնարավոր է նաև տարբերակել M-FSK ազդանշանները մնացած մոդուլացման տեսակներից,  բացառությամբ  M-PSK  տեսակները,  քանի  որ  այդ  մոդուլացման տեսակների դեպքում ակնթարթային ամպլիտուդայի միջին արժեքը հավասար կլինի 1- ի,  իսկ  մնացածի  դեպքում  այն  1-ից  փոքր  թիվ  է։  M-PSK  մոդուլացման  տեսակներից հնարավոր  է  տարբերակել  M-FSK  մոդուլացումները բնութագրող  հատկանիշի միջոցով ստացված փուլի կարգի  մասին  տեղեկատվության  միջոցով, որը  միշտ  հստակ արժեք  ունի  փուլային  մոդուլացված  ազդանշանների  համար,  բ)  մշակված հիմնական  բնութագրի  միջոցով  հնարավոր  է  նաև  իրականացնել  Ազզոուզի  և  Նանդիի կողմից  առաջարկված բնութագրերի  գործառույթը,  քանի  որ  ազդանշանի  փուլը BPSK  ազդանշանի  համար  կունենա  երկու  արժեք,  իսկ  2ASK  և  4ASK  ազդանշանների համար  1  արժեք,  ինչը  հնարավորություն  է  տալիս  տարբերակել  BPSK,  2ASK,  4ASK ազդանշանները  մնացած  մոդուլացման  տեսակներից  և  2ASK,  4ASK  մոդուլացումները BPSK  մոդուլացման  տեսակից,  գ)  մշակված բնութագրող  հատկանիշի  միջոցով իրականացնել բնութագրի գործառույթը, քանի որ ազդանշանի ամպլիտուդան 2ASK ազդանշանի  համար  ունի  երկու  արժեք,  իսկ  4ASK  ազդանշանի  համար  4  արժեք,  ինչը հնարավորություն  է  տալիս  տարբերակել  2ASK  և  4ASK  ազդանշանները։  Հետևաբար, մշակված  հիմնական  բնութագրող  հատկանիշների  միջոցով  հնարավորություն  է առաջանում  սույն  աշխատանքում  դիտարկված  թվային  մոդուլացման  տեսակների նույնականացման  համար  նախատեսված  ութ  բնութագրող  հատկանիշների  փոխարեն կիրառել չորս հատկանիշ։ ", "- 65 - ՀԱՇՎԱՌՄԱՄԲ ԻՆՏԵԳՐԱԼ ՍԽԵՄԱՆԵՐԻ ՖԻԶԻԿԱԿԱՆ ՆԱԽԱԳԾՄԱՆ ԱՎՏՈՄԱՏԱՑՄԱՆ ԵՆԹԱՀԱՄԱԿԱՐԳԻ ԱԼԳՈՐԻԹՄԱԿԱՆ ԵՎ ԾՐԱԳՐԱՅԻՆ ԱՊԱՀՈՎՈՒՄԸ ավտոմատացված ֆիզիկական նախագծման հիմնական փուլերը Սխեմատեխնիկական  առանձնահատկությունների  հաշվառմամբ  ԻՍ-ի  ֆիզիկական նախագծման  համար  առաջարկվող  և  իրականացված  մոտեցումը  հիմնված  է  հետևյալ քայլերի հաջորդական իրագործման վրա (նկ․ 3․ 1). հաջորդականության ռանգավորման իրականացում, «փափուկ»  կառուցվածքի  բլոկի ավտոմատացված սինթեզը, սինթեզը՝ կառուցվածքային սահմանափակումների հաշվառմամբ: ", "համակարգի կառուցվածքը և աշխատանքը ԹՆևՀԹԱՍ  ծրագրային ԱՀ-ը բաղկացած է հետևյալ ֆունկցիոնալ մասերից. ապահովում  է  հետազոտվող  թերություններ  պարունակող  բջջի/բջիջների  ներարկումը հիշողության  նմուշի  տոպոլոգիայի՝  GDSII  ձևաչափի  ֆայլի,  մեջ:  Թերությունների ներարկումը  իրականացվում  է  ֆիզիկական  մակարդակով՝  առանց  հաշվի  առնելու - 91 - հիշողության  նմուշի  կառուցվածքային  խճողումները (scramble):  Ներարկման արդյունքում  ստացվում  է  տոպոլոգիայի  մակարդակով  թերությունը  պարունակող՝ Թերությունների ներարկում  և Թերություններով կապերի ցուցակի` SPICE  ֆայլի բջիջների գրադարանը Հիշողության նմուշի տոպոլոգիան (GDSII ֆայլը) գեներացումը  (1) Անսարքություներով SPICE ֆայլի մոդելավորումը   (2) Մոդելավորման արդյունքների վերլուծումը  (3) Հետազոտվող թեստային ալգորիթմը Նմուշի կառուցվածքային խճողման ինֆորմացիան Ելքային ֆայլերի գեներացումը Նկար 3.1.   ԹՆևՀԹԱՍ  ծրագրային ԱՀ -ի ֆունկցիոնալ սխեման «արատավոր»  նմուշը:  Այդ  նմուշից  գեներացվում  է  SPICE  ձևաչափի  ֆայլը՝  թերություն պարունակող SPICE ֆայլը: ", "Ծրագրային  համակարգի  այս  հանգույցը գեներացնում  է. ա) հետազոտվող թեստային ալգորիթմը՝ վերաձևափոխելով այն SPICE մոդելավորմանը  համապատասխան  ձևաչափի;  բ)  մշակում  է  մոդելավորման աշխատանքի ընթացքում օգտագործվող պարամետրերը; գ) յուրաքանչյուր դիտարկվող թերության  համար  գեներացնում  են  մոդելավորման  համար  անհրաժեշտ  տվյալները: ", "Երբ SPICE ֆայլերի նախապատրաստման  աշխատանքը  ավարտվում է, մոդելավորման հանգույցը  սկսում  է  մոդելավորումը՝  օգտագործելով  թերությունների  դիմադրության տարբեր  արժեքներ, և,  անհրաժեշտության դեպքերում՝  անսարքությունների հայտնաբերման  համար  ստեղծելով  անհրաժեշտ  լրացուցիչ  սթրեսային  իրավիճակներ, կիրառելով մոտքային  պարամետրերի (սնուցման լարում,  աշխատանքային ջերմաստիճան,  աշխատանքային  հաճախականություն  և  այլն)  տարբեր  արժեքներ: ", "Առաջին տարբերակում համակարգում անհրաժեշտ է ստեղծել միայն ծրագրային ապահովում, որը որևէ արձանագրության (օրինակ՝ SMPP  24- Short Message Peer-to-Peer) միջոցով հրահանգներ կուղարկի տվյալ SMS սերվերին։ ", "ստացված  մոդելավորման  արդյունքների  մշակումը,  կատարվում  է  արդյունքների վերջնական  վերլուծումը,  ելքային ֆայլերի  ստեղծումը:  ԱՀ-ի  աշխատանքի  այս հատվածում օգտագործվում է հիշողության նմուշի կառուցվածքային մոդելը: ", "դեպքում  իրականացվում  է  միայն  խափանված  բիթերի  դուրս  բերում,  իսկ ինքնավերանորոգման  դեպքում  անհրաժեշտ  է  գրանցել  միայն  անսարք  բջիջների դիրքերի  հասցեները,  որոնք  վերծանվում  են  բյուրեղի  ներսում'  անսարք  տողերը  և սյուները որոշելու նպատակով: Նկար 31-ում ներկայացված է 131Տ1Նի  ընդհանուր  սխեման [68]: ", "ծրագրավորման մեթոդի նկարագրությունը Թերություններ ներարկման այս եղանակը հնարավորություն է տալիս ավտոմատ ձևով  ներարկել  մեկ  կամ  ավելի  հետազոտվող  թերությունները՝  նմուշի  հիշողության բջիջների  մակերևույթի  տարբեր  դիրքերում:  Հհամեմատած  այն  եղանակի  հետ,  երբ հետազոտվող    թերությունը  տեղադրվում  է  SPICE  ձևաչափի  ֆայլում  անմիջապես հիշողության տարածքում թերություններ  ներարկելու մոտեցումը ունի մի քանի էական առավելություններ [41]: Առաջին առավելությունը այն է որ թերությունները ներարկվում են  հիշողության  տարածքի  նախապես  որոշված  հատվածում՝  որոշակի  համարի ֆիզիկական    տողում  և  սյունում:    Այս  որոշակիությունը  հետագայում  մշակման աշխատանքի  ընթացքում  հնարավորություն  է  ընձեռում  վերահսկել  հետազոտվող թեստային ալգորիթմի աշխատանքի յուրաքանչյուր քայլը, հետազոտման յուրաքանչյուր ժամանակային  հատվածում  և  մակարդակում:  Եկրորդ  առավելություն  է,  որ  ԱՀ  -ում հաճախականության    ժամանակացույցի  կիրառումը  հնարավորություն  է  տալիս.  ա) հաշվարկել թեստային  ալգորիթմի աշխատանքի  տևողությունը՝ BIST-ի աշխատանքային  հաճախականության  մասին  տվյալի  առկայության  դեպքում,  բ) - 93 - կատարել  թեստավորվող  ալգորիթմի    քայլ  առ  քայլ  կարգաբերումը,  որը  էապես լավացնում է ալգորիթմի կարգաբերման աշխատանքի գործընթացը [15], [17]: ", "Նկ․  3․2․   Սխեմայի  փականային  մակարդակի  Iscas85 գրադարանի թեստային c17.v Verilog նկարագիրը - 69 - Ալգորիթմի  նկարագրության  համար  կօգտագործենք  օբյեկտակողմնորոշված ծրագրավորման (ՕԿԾ) որոշակի տերմինաբանություն, որը կնպաստի նկարագրության հակիրճ  և  ձևայնացած  ներկայացմանը:  Ինչպես  հայտնի  է,  ՕԿԾ  –ն  ծրագրավորման մոտեցում է, որի գաղափարական հիմք են հանդիսանում օբյեկտ և դաս հասկացությունները [73, 74]։ ", "Աղյուսակ  4.1-ում  բերված  են  վերոնշյալ  մոդելավորված  չորս  ազդանշանների առաջին չորս  հարմոնիկաների  մակարդակները,  որոնք չափվել  են  LabVIEW ծրագրավորման միջավայրում մշակված ալգորիթմի միջոցով: ", "Աղյուսակ 4.1. Առաջին չորս հարմոնիկաների մակարդակները Sine Triangle Square Sawtooth Ինչպես  երևում  է  աղյուսակում  ներկայացված  ազդանշանների  հարմոնիկաների հզորության  բոլոր  մակարդակները  առանձնահատուկ  են  և  փոփոխվում  են ազդանշանին  հատուկ  կերպով:  Այս  հանգամանքը  հանդիսանում  է  ազդանշանները միմյանցից տարբերակելու հիմնական բնութագրող հատկանիշ: ", "Ազդանշանի  մշակման  փուլից  հետո,  երբ  դրանց  հիմնական  բնութագրող հատկանիշները  առանձնացված  են,  այդ  արժեքները  ցանցի  մուտքերին  տալու  համար հարկավոր է նորմավորել դրանք ըստ հիմնական հարմոնիկայի մակարդակի: Այլ կերպ ասած  հարկավոր է  ազդանշանի  առաջին  հարմոնիկային  հաջորդող  երեք հարմոնիկաների  հզորության  մակարդակների  արժեքները  բաժանել  այդ  ազդանշանի հիմնական  հարմոնիկայի  մակարդակի  վրա:  Նորմավորումն  անհրաժեշտ  է,  որպեսսզի թեստավորման  փուլում  համակարգը  որպես  արհեստական  նեյրոնային  ցանցի մուտքային  արժեք  վերցնի  հարմոնիկաների  մակարդակների  նորմավորված  արժեքը, քանի  որ  դրանց  հզորության  մակարդակների  հարաբերությունը շատ  քիչ տատանումներ  կունենա  իսկզբանե  ցանցի  ուսուցման  փուլում  դրա  մուտքերին  տրված արժեքների  նկատմամբ:  Այս  հանգամանքը  հնարավորություն  կտա,  որպեսզի թեստավորման փուլում սիմուլացված ազդանշանների ամպլիտուդայի փոփոխությունները  զգալի  ազդեցություն  չունենան  նեյրոնային  ցանցի  գործառույթի ճշտության վրա: ", "ա. xxxxxxxx xxxxxxxx բ. xxxxxx1x xxx1xxxx xxxxxxxx xxxx10xx xx0xxxxx գ. Նկար 3.2.   ԾՕ ֆայլերի օրինակները - 94 - Նկար 3.2-ում ներկայացված են  ծրագրավորման ֆայլերի օրինակները, որոնք ստեղծվել են 4 տող և 8 սյուն ունեցող հիշողության բջիջների զանգվածի համար: Նկարի հիշողության  զանգվածը  ներարկված  է  «1»  տեսակի  թերություններով:  Նույն    ձևով՝  բ. օրինակին համաձայն, զանգվածում ներարկվելու են «0» տեսակի թերություններով: Իսկ գ. օրինակում ներկայացված է դեպք, երբ  «0» տեսակի թերությունները ներարկվելու են ներարկվելու են երեք բջիջներում՝ 7-րդ տողի 5-րդ սյան մեջ, 2-րդ տողի 4-րդ սյան մեջ և ներդրվում են հարևան բջիջներում: Թերությունների այդ տեսակ դիրքավորումը կարող է  բերել  յուրահատուկ  վարքագծով  անսարքությանը  և  լրացուցիչ  ստուգման  գործոն հանդիսանա  թեստային  ալգորիթմի  համար:  «1»  և  «0»  տեսակի  թերությունների օրինակներ են հանդիսանում առաջին գլխում նկարագրված, «ծրագրավորող» բջիջները (Տես՝  նկ.  1.25  և  նկ.  1.26):  Այս    «ծրագրավորող»  բջիջների  կիրառումը  ԹՆևՀԹԱՍ ծրագրային ԱՀ -ում համարժեք է «Stacked 0»  և «Stacked 1»  տեսակի անսարքությունների ներդրմանը հիշողության զանգվածի բջիջներում: ", "Նկար 34 DesignWare Տ/\\4Տ-ի օրինակ Բ ր օ շ Ց Տ Տ օ ր -ն   ունի  կարևորագույն  թեստավորման  և  վերանորոգման  ֆունկցիաներ (131Տ1,  Ց ^ ) :   Ներկառուցված  հիշողությունները  թեստավորվում  են  131Տ1-ի  միջոցով:  Այն բաղկացած է յուրաքանչյուր ներկառուցված հիշողության  կողքին գտնվող շարժիչից, որը գրում  է ալգորիթմորեն գեներացված նմուշները  հիշողության  մեջ և այնուհետև կարդում է  դրանք  հիշողությունից'  անսարքությունները  ֆիքսելու  նպատակով:  Ստուգման ալգորիթմները  կարող  են  նախապես  ներդրվել  131Տ1  մոդուլի  մեջ  կամ  կարգավորվել արտաքինից'  միկրոկոդի  միջոցով,  որը  կարող  է  պահվել,  օրինակ,  էներգաանկախ մշտական  հիշողության  մեջ:  Հիշողության  թեստավորումից  հետո  131[^  վերանորոգման և հավել|ալության  տեղաբաշխման  մոդուլը հայտնաբերում է գոյություն  ունեցող հավել|ալ տողերն  ու  սյուները  և  որոշում  է  դրանց  օպտիմալ բաշխման  տարբերակը:  Դրա  համար այն օգտագործում է  անսարքությունների նախապատմությունից ստացվող հիշողությունների  թերությունների  վերաբերյալ  ինֆորմացիան,  որը  տրամադրվում  է սխեմաներ  արտադրող գործարանների  կողմից:  Այսպիսով  Բ ր օ օ Ց Տ Տ օ ր -ը   տեղայնացնում և  վերանորոգում  է  հիշողության  անսարքությունները:  Տեղաբաշխման  մոդուլը  հավելյալ տողերի  և  սյուների  տեղաբաշխման  ինֆորմացիան  վերածում  է  հիշողությանը  հատուկ կոդի  և  գրանցում  է  այն  հիշողությունների  թերությունների  մասին  ինֆորմացիայի գրանցման  պահոցում:  Processor-ը  կարող  է  ստուգել  և  վերանորոգել  բազմաթիվ հիշողություններ  հաջորդական  կամ  զուգահեռ  ռեժիմում:  Բվհ-ում  հիշողության նմուշների  խմբավորումը  Processor-ի  միջոցով  պայմանավորված  է  մակերեսի, հզորության,  արագության,  համակարգային  տակտային  գեներատորի  և  բյուրեղի  վրա մոդուլների  տեղաբաշխման  գործոններով [69],  [70]  : ", "Երկրորդը՝  այդ  տարրերը  իրար  կապող  շղթաների  ինֆորմացիան  (աղ․ 3․ 1, աղ․ 3․ 2)։ ", "Ցանցի ուսուցումը իրականացվել է սխալի հակադարձ տարածման հիման վրա [88]: ", "կարդալուն(տող  9-14)։  Դիտարկենք  ծրագրի  աշխատանքը  9-րդ  տողում։ ", "հասցեավորման ձևերը հետևյալն են.   U  (անգլերեն  -  Upward  addressing)  –  Ներքևից  դեպի  վերև  հասցեավորում:  Այս հասցեավորմամ ժամանակ  թեստավորումը սկսվում  է զրոյական  հասցեից և աճելով շարունակվում  հասնում    է  հիշողության  նմուշի  վերջին    առավելագույն  (maximal)   D  (անգլերեն - Downward addressing - reverse to U)՝ – Վերևից դեպի ներքև՝ հակառակ է հասցեին, U հասցեավորման ձևին: ", "Server-ը  DesignWare  SMS-ի  ամենաբարձր  մակարդակի  ենթակաոուցվածքն  է,  որը թեստավորման  և  վերանորոգման  արդյունքները  փոխանցում  է  TAP  կոտրոլերին  JTAG պորտի  միջոցով [69],  [70]: "]}
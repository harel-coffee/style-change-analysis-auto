{"paragraph_source_docs": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraphs": ["Այս  գլխում  ներկայացված  է  թերությունների  ներդրման  և  հիշողությունը թեստավորող  ալգորիթմը  ստուգող    (ԹՆևՀԹԱՍ)    ծրագրային  ԱՀ,  որի  նպատակն  է կատարել  թեստային  ալգորիթմների  աշխատանքի  ստուգումը,  գնահատել  այդ ալգորիթմների արդյունավետությունը՝ օգտագործելով տարբեր  տեսակի  իրատեսական թերությունների  մոդելներ,  որոնք  կարող  են  տեղադրվել  հիշողության  սարքի  բոլոր հանգույցներում՝  ստեղծելով  տարբեր  վարքագիծ  դրսևորվող  անսարքություններ: ", "Անհրաժեշտության դեպքում ԹՆևՀԹԱՍ ծրագրային ԱՀ-ը հնարավորություն է ընձեռում իրականացնել.  ա) թեստային  ալգորիթմների  աշխատանքի  ամբողջական արդյունավետության հաստատումը, բ) թեստային ալգորիթմների յուրաքանչյուր  Մարշ ալգորիթմի  տարրերի  առանձին  ստուգումը,  գ)  թեստային  ալգորիթմների  քայլ  առ  քայլ ստուգումը: ", "համակարգի կառուցվածքը և աշխատանքը ԹՆևՀԹԱՍ  ծրագրային ԱՀ-ը բաղկացած է հետևյալ ֆունկցիոնալ մասերից. ապահովում  է  հետազոտվող  թերություններ  պարունակող  բջջի/բջիջների  ներարկումը հիշողության  նմուշի  տոպոլոգիայի՝  GDSII  ձևաչափի  ֆայլի,  մեջ:  Թերությունների ներարկումը  իրականացվում  է  ֆիզիկական  մակարդակով՝  առանց  հաշվի  առնելու - 91 - հիշողության  նմուշի  կառուցվածքային  խճողումները (scramble):  Ներարկման արդյունքում  ստացվում  է  տոպոլոգիայի  մակարդակով  թերությունը  պարունակող՝ Թերությունների ներարկում  և Թերություններով կապերի ցուցակի` SPICE  ֆայլի բջիջների գրադարանը Հիշողության նմուշի տոպոլոգիան (GDSII ֆայլը) գեներացումը  (1) Անսարքություներով SPICE ֆայլի մոդելավորումը   (2) Մոդելավորման արդյունքների վերլուծումը  (3) Հետազոտվող թեստային ալգորիթմը Նմուշի կառուցվածքային խճողման ինֆորմացիան Ելքային ֆայլերի գեներացումը Նկար 3.1.   ԹՆևՀԹԱՍ  ծրագրային ԱՀ -ի ֆունկցիոնալ սխեման «արատավոր»  նմուշը:  Այդ  նմուշից  գեներացվում  է  SPICE  ձևաչափի  ֆայլը՝  թերություն պարունակող SPICE ֆայլը: ", "Ծրագրային  համակարգի  այս  հանգույցը գեներացնում  է. ա) հետազոտվող թեստային ալգորիթմը՝ վերաձևափոխելով այն SPICE մոդելավորմանը  համապատասխան  ձևաչափի;  բ)  մշակում  է  մոդելավորման աշխատանքի ընթացքում օգտագործվող պարամետրերը; գ) յուրաքանչյուր դիտարկվող թերության  համար  գեներացնում  են  մոդելավորման  համար  անհրաժեշտ  տվյալները: ", "Երբ SPICE ֆայլերի նախապատրաստման  աշխատանքը  ավարտվում է, մոդելավորման հանգույցը  սկսում  է  մոդելավորումը՝  օգտագործելով  թերությունների  դիմադրության տարբեր  արժեքներ, և,  անհրաժեշտության դեպքերում՝  անսարքությունների հայտնաբերման  համար  ստեղծելով  անհրաժեշտ  լրացուցիչ  սթրեսային  իրավիճակներ, կիրառելով մոտքային  պարամետրերի (սնուցման լարում,  աշխատանքային ջերմաստիճան,  աշխատանքային  հաճախականություն  և  այլն)  տարբեր  արժեքներ: ", "- 92 - Մոդելավորման արդյունքում ստացված տվյալների մշակումը կատարվում է ծրագրային ԱՀ-ի հաջորդ հանգույցում: ", "ստացված  մոդելավորման  արդյունքների  մշակումը,  կատարվում  է  արդյունքների վերջնական  վերլուծումը,  ելքային ֆայլերի  ստեղծումը:  ԱՀ-ի  աշխատանքի  այս հատվածում օգտագործվում է հիշողության նմուշի կառուցվածքային մոդելը: ", "բջիջների ներարկման ձևերը Ծրագրային  ԱՀ-ում  ֆիզիկական  թերությունների ներարկումը նմուշի տոպոլոգիայի (GDSII) ֆայլի մեջ իրականցվում է  երկու  մեթոդով: ", "ծրագրավորման մեթոդի նկարագրությունը Թերություններ ներարկման այս եղանակը հնարավորություն է տալիս ավտոմատ ձևով  ներարկել  մեկ  կամ  ավելի  հետազոտվող  թերությունները՝  նմուշի  հիշողության բջիջների  մակերևույթի  տարբեր  դիրքերում:  Հհամեմատած  այն  եղանակի  հետ,  երբ հետազոտվող    թերությունը  տեղադրվում  է  SPICE  ձևաչափի  ֆայլում  անմիջապես հիշողության տարածքում թերություններ  ներարկելու մոտեցումը ունի մի քանի էական առավելություններ [41]: Առաջին առավելությունը այն է որ թերությունները ներարկվում են  հիշողության  տարածքի  նախապես  որոշված  հատվածում՝  որոշակի  համարի ֆիզիկական    տողում  և  սյունում:    Այս  որոշակիությունը  հետագայում  մշակման աշխատանքի  ընթացքում  հնարավորություն  է  ընձեռում  վերահսկել  հետազոտվող թեստային ալգորիթմի աշխատանքի յուրաքանչյուր քայլը, հետազոտման յուրաքանչյուր ժամանակային  հատվածում  և  մակարդակում:  Եկրորդ  առավելություն  է,  որ  ԱՀ  -ում հաճախականության    ժամանակացույցի  կիրառումը  հնարավորություն  է  տալիս.  ա) հաշվարկել թեստային  ալգորիթմի աշխատանքի  տևողությունը՝ BIST-ի աշխատանքային  հաճախականության  մասին  տվյալի  առկայության  դեպքում,  բ) - 93 - կատարել  թեստավորվող  ալգորիթմի    քայլ  առ  քայլ  կարգաբերումը,  որը  էապես լավացնում է ալգորիթմի կարգաբերման աշխատանքի գործընթացը [15], [17]: ", "Հիշողության  զանգվածի  ծրագրավորումը  իրականացվում  է  հիշողության ծրագրավորման  MPT  գործիքի  միջոցով:  Ինչպես  արդեն  նշել  ենք,  MPT  գործիքը ներարկում  է  թերություններ  պարունակող  բջիջները  բացառապես  հիշողության զանգվածի  մեջ՝  համաձայն  իրենց  ֆիզիկական  դիրքերի,  որոնք  նկարագրվում  են ծրագրավորման օրինակների  ֆայլում: "]}
{"paragraphs": ["  Դիտարկման  ավարտի չափորոշիչի  ընտրություն:  Դա  կարող  է լինել դիտարկումների  ֆիքսված  քանակ,  կամ  դիտարկումները  կարող  են  կատարվել, քանի  դեռ  դրանք  փոքրացնում  կամ  զգալիորեն  փոքրացնում  են  հատումների ընդհանուր քանակը: ", "Դիտարկենք հատումների թվի նվազեցումը երկու ռանգերի համար [54]: Ենթադրենք, մեզ տրված է G = (R1, R2, W) գրաֆը, որտեղ R1-ը առաջին ռանգի տարրերի բազմությունն է,  R2-ը՝  երկրորդ,  իսկ  E-ն՝  շղթաների  բազմությունը:  Առաջին  ռանգի  գագաթների դիրքերը  համարելով  ֆիքսված,  կդասավորենք  երկրորդ  ռանգի  տարրերը:  Ինչպես արդեն նշվել է, այդ խնդիրն ունի NP-բարդություն, և դրա մոտավոր լուծումները գտնելու համար կոգտագործվեն մոտավոր լուծման մեթոդներ: ", "Վերոհիշյալ  մեթոդներից  մեկը  հիմնված  է  տեսակավորման  ալգորիթմների  վրա  [57, նվազագույնի:  Հեշտ  է  նկատել,  որ  ընտրված  երկու  տարրերի  համար՝  u  ∈  R2  և  v  ∈  R2, դրանց  հարևան  տարրերի  հետ  հատումների  քանակը  կախված  է  միայն  այդ  երկու տարրերի  հարաբերական  դիրքերից:  Այսպիսով,  կարող  ենք  դիտարկել  հատումների - 59 - քանակը՝ փոխելով տրված ռանգում տարրերի հարաբերական դիրքերը: Հենց տարրերի հարաբերական դիրքերը փոխելու վրա էլ հիմնված են  տեսակավորման ալգորիթմներն օգտագործող  մեթոդները:  Այդպիսի  մեթոդները  պետք  է  արագ  հաշվեն  հատումների պոտենցիալ  քանակը:  Դա  կարող  է  կատարվել  ուղակի  O(|W|2)  ժամանակում  կամ լավարկել մինչև O( ), որտեղ KUV-ն հատումների քանակն է, որն առաջանում է u և v տարրերի  զույգի  միջոցով:  Հնարավոր  հատումների  հաշվարկը  յուրաքանչյուր  զույգի դեպքում  պետք  է  կատարել  միայն  մեկ  անգամ  (դա  էլ  հենց  տալիս  է  տարրերի բազմության դասավորությունը): ", "Տեսակավորման մեթոդների վրա հիմնված ալգորիթմներից մեկն իր էությամբ նման է պղպջակների  մեթոդին  (bubble  sort)  [57,  59]:  Հերթականությամբ  դիտարկվում  են հարևան գագաթների բոլոր զույգերը, և դրանք տեղերով փոխվում են, եթե այդ դեպքում հատումների  թիվը  կփոքրանա:  Գործընթացն  ավարտվում  է,  երբ  հերթական  լրիվ դիտարկումից  հետո  (բոլոր  տարրերով  անցնելուց  հետո)    հատումների  քանակը  չի նվազում  (չկարգավորված  զույգ  չի  գտնվում):  Այս  ալգորիթմի  բարդությունը  O(|R2|2)  է, քանի որ վերջնական կարգավորություն ստանալու համար կարող են անհրաժեշտ լինել մինչև անգամ |R2| դիտարկումներ: Այսպիսի ալգորիթմի ընտրությունը խիստ կախված է նախնական  դասավորության  ընտրությունից,  քանի  որ  դիտարկվում  և  տեղափոխվում են միայն իրար հարևան տարրերը: ", "Հաջորդ  մեթոդը  հիմնված  է  արագ  տեսակավորման  (quick  sort)  ալգորիթմի գաղափարի վրա [57, 60, 61]: Սկզբում ընտրվում է «միջին» տարր, իսկ մնացած տարրերը բաժանվում  են  երկու  բազմությունների՝  կախված  նրարից,  թե  դրանք  ինչ հարաբերությունների մեջ են գտնվում ընտրված տարրի հետ: Հետո նման պրոցեդուրա ռեկուրսիվ  կիրառվում  է  ստացված  բազմություններից  յուրաքանչյուրի  նկատմամբ: ", "ա. բ. դ. ե. Նկար 2.19.   ԱՀ-ի անկյունագծային ԾՕ-ի կիրառման օրինակները Իսկ  երբ  զանգվածի  տողերի  և  սյուների  հարաբերությունը  մեծ  է  երեքից,  ապա  այդ դեպքերի  համար  նախատեսված  է  կիրառել  ոչ  անկյունագծային՝ լրացուցիչ, ծրագրավորող  օրինակներ:  Այդ    ԾՕ-ների  կիրառումը  նախատեսված  է  միայն  մեծ չափսեր  ունեցող  հիշողության  նմուշների  դեպքերում  (այդ  պատճառով  այս  դեպքի օրինակը  ներկայացնելը  դժվար  է):  Ոչ  անկյունագծային  ծրագրավորման  օրինակները՝ ֆիզիկական  մակարդակում,  յուրաքանչյուր  տողին  (իսկ  #PC  >  #PR  դեպքում՝  սյունին) վերագրում  են  չկրկնվող  կոդ,  այսպես  ասած,  «համարակալում»  են  տողերը:  Ոչ անկյունագծային  ԾՕ-ները  կիրառվում  են  միայն  անկյունագծային  ԾՕ-ներից  հետո որպես  լրացուցիչ  ծրագրավորման  օրինակներ:  SIE-ի  հոսքում  բացի  պարտադիր զրոյական և անկյունագծային ԾՕ-ներից, կարող են գեներացվել   առավելագույնը մինչև վեց  լրացուցիչ  ԾՕ-ներ:  ՀՍ-ի  նմուշի  լրացուցիչ  ԾՕ-ի    ֆայլի  օրինակը  ներկայացված  է հավելված 4-ում: ", "Հաջորդ մեթոդի համաձայն՝ ալգորիթմը ամեն քայլում վերցնում է տարրերից մեկը և փորձում  այն  դնել  այնպիսի  տեղում,  որ  ստացվի  հատումների  փոքրագույն  թիվ:  Դրա համար  ալգորիթմը  փորձում  է  տարրը  տեղադրել  յուրաքանչյուր  հնարավոր  տեղում    և - 60 - հաշվում է ստացված հատումների քանակը: Քանի որ տարրը մի դիրքով տեղափոխելիս շղթաների  հատումների  քանակի  փոփոխությունը  կարելի  է  հաշվել  հաստատուն ժամանակում  (օգտագործելով  լրացուցիչ  հավաքված  ինֆորմացիա),  ապա  ալգորիթմն ունի  քառակուսային  բարդություն  և  իր  էությամբ  նման  է  ներդրումներով տեսակավորման մեթոդին (insertion sort)[57, 62, 63]: ", "Ինչպես արդեն նշվել է, ցանկացած դասավորության որոշման մեթոդ, որը հիմնված է տեսակավորման  ալգորիթմների  վրա  և  պետք  է  աշխատի  տարրերի  զույգերի  հետ,  չի կարող իրագործվել գծային ժամանակում: Հետևաբար, վերոհիշյալ մեթոդներից ոչ մեկը չի կարող ունենալ գծային բարդություն: ", "Գործնականում  ավելի  լայն  կիրառություն  ունեն  բարիկենտրոնի  և    միջին  արժեքի վրա  հիմնված  մեթոդները[64,  65]:  Բարիկենտրոնի  մեթոդի  դեպքում  v  ∈  R2        տարրի կոորդինատը  որոշվում  է  որպես  R1  ռանգին  կապած  բոլոր  տարրերի  կոորդինատների միջին թվաբանական. avg(u) = , որտեղ  N(u) :=  {v | (u,v) ∈ W}։               (2.8) Եթե  վերադասավորելուց  հետո  որոշ  տարրերի  կոորդինատներ  համընկնում  են, ապա  դրանք  տեղադրվում  են  նվազագույն  հեռավորության  վրա՝  կամայական հերթականությամբ:  Այս  մեթոդի  ամենահայտնի  տարբերակը  միջին  արժեքի  մեթոդն  է [66],  երբ  միջին  թվաբանականի  փոխարեն  օգտագործվում  է  x1  ռանգի  միջին  հարևանի կոորդինատը,  այսինքն՝  եթե  u1,  u2,  …,  um  ∈  R1  v  տարրին  հարևան  տարրերն  են,  ընդ որում,  x1(u1)  <  x1(u2)  <  …  <  x1(um),  ապա  x2(v)  =  med(v)-ն  որոշվում  է  որպես  x1(uavg):  Այն դեպքում,  երբ  med(v)  =  med(u),  և  v-ն  ունի  կենտ  աստիճան,  իսկ  u-ն՝  զույգ,  ապա  v-ն տեղադրվում է  u-ից  առաջ։ Իսկ եթե  աստիճանների  զույգությունը համընկնում է,  ապա հերթականությունը  որոշվում  է  կամայականորեն:  [67]  աշխատանքում  ցույց  է  տրված, որ  միջինները  կարող  են  գտնվել  O(|N(u)|)  ժամանակում,  ինչը  այս  մեթոդը  դարձնում  է նուjնքան արագ, որքան բարիկենտրոնի մեթոդը: ", "Ենթադրենք` opt(G,x1)-ն տվյալ գրաֆի համար հնարավոր նվազագույն հատումների քանակն  է,  որտեղ  x1-ը  տարրերի  դիրքերն  է  R1-ում,  avg(G,x1)-ն`  հատումների  քանակy բարիկենտրոնի  մեթոդի  կիրառումից  հետո,  իսկ  med(G,x1)-ը՝  հատումների  քանակը - 61 - միջին  արժեքի  մեթոդից  հետո:  Բերենք  մի  քանի  պնդումներ  բարիկենտրոնի  և  միջին արժեքի մեթոդների վերաբերյալ [54]: ", "հատումների, ապա և՛ բարիկենտրոնի, և՛ միջին արժեքի մեթոդները կգտնեն այդ լուծումը,  այսինքն,  եթե  x1  դասավորությունը  այնպիսին  է,  որ  opt(G,x1)  =  0,  ապա avg(G,x1) = med(G,x1) = 0: ", "ASV ալգորիթմի աշխատանքի տևողությունը նմուշների ստուգվող ստուգող ալգորիթմի Աղյուսակ 2.2 ՍՊԴԿ կոմպիլյատոր չափսերի նմուշների հավաքա- աշխատանքի տիրույթը քանակը ծուների թիվը ժամանակ ts90nm 1p11 HS 8M ts90nm 1p11 HS 512K ts90nm 2p22 HS 512K ts90nm 1p11 HD 512K ts90nm 2p22 HD 512K ts90nm 2p11 HD 32K ts90nm 2p11 HS 16K - 85 - Փորձնական  տվյալները  ցույց  տվեցին,  որ  SPICE  մոդելավորման  արդյունքները կախված  չեն  մոդելավորման  ընթացքում  կատարվող  հաշվարկների  ճշտությունից, այսինքն՝ մոդելավորման ժամանակ բավական է օգտագործել ամենացածր ճշտությունը ապահովող  մոդելավորման  գործակիցը,  դրանով  զգալիորեն  նվազեցնելով  ASV ստուգումների տևողությունը: ", "Ֆիլտրման համար կատարվում են հետևյալ քայլերը՝ ստացված հրահանգի վավերությունը; առկայությունը  և  գտնելու  դեպքում  որոշ  հրահանգների  համար  ստուգվում  է  նաև  դրա ձևաչափի ճիշտ լինելը։ ", "Այս  մեթոդի ձևափոխված տարբերակը կիրառվել է այս  աշխատանքում, որի ավելի մանրամասն նկարագրությունը ներկայացված է 3․ 4 գլխում։ ", "Այսպիսով,  հետազոտվել  է  ինտեգրալ  սխեմաների՝  «փափուկ»  և  «կոշտ»  բլոկների՝ ֆիզիկական  կառուցվածքների  տեսքով    ներկայացումը։  Ներկայացվել  են  «փափուկ»  և «կոշտ»  բլոկների հատկությունները։ Հետազոտվել են արդի ալգորիթմական լուծումներ՝ գրաֆում  և  ԻՍ-ում  շղթաների  հատումների  քանակի  նվազարկման  և  արագագործ ավտոմատացման միջոց մշակելու նպատակով։ ", "Տրամաբանական տարրերի փոխանջատման ակտիվությունների միջոցով դինամիկ հզորությունների գնահատումը՝ որպես սխեմատեխնիկական առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման Եթե (1.6) արտահայտությունում տարրերի տեսակարար դինամիկ հզորություններն ու  բջիջների  թվային  ստանդարտ  գրադարանի  աշխատանքային  հաճախականությունը միջոց - 62 - հայտնի  են  դառնում  գրադարանի  ընտրության  արդյունքում  և  կախված  չեն  սխեմայի տրամաբանական  ակտիվությունից,  ապա  տարրերի  փոխանջատման  ակտիվությունը ուղղակիորեն  կախված  է  սխեմայի  տրամաբանությունից  և  տվյալ  տարրի  սխեմայում տեղաբաշխման  վայրից:  Ուստի  ֆիզիկական  նախագծման  համար  կարևոր  է  մշակել այնպիսի  միջոցներ,  որոնք  թույլ  կտան  հաշվի  առնել  տրամաբանական  սխեմայում տարրերի  փոխանջատման  ակտիվությունը՝  դրանց  իրական  հզորության  գնահատման ժամանակ: ", "Իրականացրած  փորձերի  հիման  վրա  պարզվել  է,  որ,  քանի  որ  PSK  ազդանշանների դեպքում  ամպլիտուդան  իդեալական  դեպքում  ունի  հաստատուն  արժեք,  ապա  այս հիմնական  բնութագրող  հատկնիշը  նույնպես  PSK  ազդանշանների  համար  ունենում  է հաստատուն  մեկին  մոտ  արժեք,  իսկ  QAM  մոդուլացման  տեսակի  համար  այս բնութագրի արժեքը հիմնականում կիսով չափ փոքր արժեք է ստանում։ ", "Հիմնական տրամաբանական տարրերի ելքին ազդանշանային hավանականությունները՝  փոխակերպիչի (ինվերտորի)  տիպի,  և(AND),  կամ(OR), որոշվում են հետևյալ կերպ՝ ,                (2.9) որտեղ Pi –ն  տրամաբանական  տարրի i-րդ մուտքի  ազդանշանային հավանականությունն է, m –ը՝ տրամաբանական մուտքերի քանակը: ", "Եթե  հայտնի  է  տարրի  ելքի  ազդանշանային  հավանակությունը (P),  ապա փոխանջատումների ակտիվությունը որոշվում է հետևյալ բանաձևով [68]. ։                                                  (2.10) Որոշակի  տրամաբանական  սխեմայի  տարրերի  փոխանջատման  ակտիվության գնահատման  ժամանակ  անհրաժեշտ  է  ունենալ  սխեմայի  առաջնային  մուտքերի ազդանշանային հավանականությունները։  Սխեմայի  առաջնային մուտքերում ազդանշանային  հավանականությունը  բնութագրելու  համար  առավել  ընդհանրացված մոտեցում  է  համարվում  հավանական  մոտեցումը,  երբ  սխեմայի  բոլոր  առաջնային մուտքերի համար ազդանշանային հավանականության արժեքը հավասար է 0,5: ", "Նկ. 3.21 QPSK ազդանշանի ակնթարթային փուլի գրաֆիկը ներկայացված բաղկացուցիչ կետերի միջոցով Նկ.  3.21-ում  պատկերված  գրաֆիկի  վրա  կարելի  է  հստակ  տեսնել  չորս հորիզոնական  գծեր,  որոնք  վկայում  են  այն  մասին,  որ  տվյալ  ազդանշանի ակնթարթային  փուլը  չորս  անգամ  փոփոխվել  է։  Հետևաբար  կարելի  է  եզրակացնել,  որ այս նույն պատկերը կտեսնենք մյուս փուլային մոդուլացված ազդանշանների դեպքում, որում  համապատասխան  գծերի  քանակը  կվկայի  դրա  փուլի  փոփոխությունների քանակի մասին։ ", "Նշված  2  դեպքերում,  ամեն  անգամ  հրահանգի  կատարման  նպատակով համակարգին ուղարկված էլեկտրոնային նամակը պարունակում է ամբողջ անհրաժեշտ ինֆորմացիան՝  հեռախոսահամար  և  այլն։  Սակայն  կան  որոշ  գործառույթներ,  որոնց միարժեք  կատարման  համար  անհրաժեշտ է  նույնականացնել  օգտատիրոջ էլեկտրոնային փոստը և հեռախոսահամարը։ ", "Ֆիզիկական  նախագծման  ընթացքում  տրամաբանական  սխեմայի  աշխատանքի առանձնահատկությունների  տեսանկյունից  հրատապ  է  դառնում,  տրամաբանական տարրերի  աշխատանքային  հզորություններից  ելնելով,  դրանց  տեղաբաշխման մեթոդների  մշակումը:  Եթե  ընդունենք,  որ  հզորության  ստատիկ  բաղադրիչը գործնականում  է  կախված  չէ  սխեմայի  աշխատանքի  տրամաբանությունից,  ապա տարրերի  տեղաբաշխման  փուլում  հզորությունների  գնահատման  համար  կարող  է օգտագործվել միայն հզորությունների դինամիկ բաղադրիչը: ", "Եզրակացություններ որպես սխեմատեխնիկական  առանձնահատկությունների հաշվառմամբ ֆիզիկական  կառուցվածքի  ստացման  միջոց։  Ներկայումս  գոյություն  ունեցող ժամանակային  ուղղորդմամբ  տեղաբաշխման  մեթոդներն  ունեն  որոշակի թերություններ, և կարիք կա դրանց հետագա զարգացման: ", "- 88 - ԵՎ ՎԱՐՔԱԳԾԱՅԻՆ ԹԵՐՈՒԹՅՈՒՆՆԵՐԻ ՆԵՐԱՐԿՄԱՆ ԵՎ ԱԼԳՈՐԻԹՄՆԵՐԻ ՍՏՈՒԳՄԱՆ  ԱՎՏՈՄԱՏ  ՀԱՄԱԿԱՐԳ հայտնաբերող ալգորիթմների ստեղծման խնդիրը Ինչպես արդեն նշել ենք, հիշողությունների թեստավորումը կարևոր և բարդ խնդիր է  մանավանդ  ներդված  հիշողությունների  դեպքում:  ՆՀՍ-ի  արագ  և լիարժեք թեստավորումը  ապահովելու  նպատակով  ներդրված  ՆՀՍ-ի  հետ    նույն  միջավայրում ներդրվում  են  լրացուցիչ  էլեկտրոնային  սխեմաներ,  պրոցեսորներ,  որոնց  նպատակն  է. ա)  օգտագործելով  ներդրված  ինքնաթեստավորման  ալգորիթմները    (անգլերեն  Built  in self-test)`  կատարել  ՆՀՍ-ի  անմիջական  ստուգումը,    և  բ)  հնարավորության  դեպքում, հիշողության  աշխատունակության  վերականգնումը  (անգլերեն  Built  in  redundancy analysis) [2], [17-21]:  Այդ  ներդրված  պրոցեսորների  կողմից  իրականցվող ինքնաթեստավորումը (ՆԻԹ) ստուգման  և  վերահսկման  հիմնական  միջոց  է հանդիսանում  ներդրված  հիշողության  սարքերի  համար:  ՆԻԹ  արդյունավետությունը բնութագրվում  է  երկու  չափանիշներով.  ա)  օգտագործված  թեստային  ալգորիթմի ծածկույթը՝  ՆԻԹ ալգորիթմի միջոցով հնարավոր անսարքությունների հայտնաբերման ունակությունը,  բ) այդ  լրացուցիչ  սխեմաների օգտագործման  հետևանքով հիշողության սարքի  տոպոլոգիայի  ավելացված  մակերևույթի  տոկոսը:  Այս  երկու  չափանիշները փոխկապակցված  են,  քանի  որ  շատ  բարդ  թեստավորման  ալգորիթմի  իրականացումը միկրոսխեմայում  պահանջում  է  սարքի  թիթեղի  վրա  ավելի  շատ  մակերևույթ  և հակառակը,  անհնար  է  իրականացնել  լիարժեք  ծածկույթ  ունեցող    ՆԻԹ  ալգորիթմ թիթեղի  սահմանափակ մակերևույթում: ", "նկարագրից  ԱԳՀ-ի  ստացման  այնպիսի  մոտեցման  մշակումը,  որով  հնարավոր կլինի  խուսափել  անցանկալի  մեծ  հիշողության  օգտագործումից  և  ստանալ ավտոմատացված միջոցի ցանկալի մեծ արագագործություն։ "], "paragraph_source_docs": [2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 0, 2, 2, 2, 3, 2, 2, 3, 0, 2, 2, 1, 2], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
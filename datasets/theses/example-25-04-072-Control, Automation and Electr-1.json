{"paragraph_source_docs": [1, 1, 1, 2, 1, 1, 2, 1, 1, 4, 3, 1, 1, 3, 3, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1], "paragraphs": ["Բայց  այդ    հաջորդական  մշակման  շնորհիվ,  հնարավոր  է  դառնում.  ա)  ապահովել մշակման  արդյունքների  միանշանակությունը,  և,  որ  շատ  կարևոր  է,  բ)  բացառել    PA աշխատանքի  ընթացքում    անորոշ  իրավիճակների  ի  հայտ  գալը,  որը  տեսականորեն հնարավոր է զուգահեռ մշակման դեպքում: ", "SIE ԱՀ-ում  մեկ այլ կարևոր խնդիր է կիրառվող ԾՕ-ների քանակի լավարկումը: ", "Զրոյական և անկյունագծային  ԾՕ-ները (Տես՝ նկ. 2.17, նկ. 2.18) հիմնական  ԾՕ-ներ են հանդիսանում  այն  հիշողության  նմուշների  դեպքում,  որոնց  հիշողության  բջիջների զանգվածի երկրաչափական տեսքը քառակուսի է (այսինքն՝ զանգվածում տողերի (#PR) և սյուների (#PC) քանակները համընկնում են` #PC = #PR) կամ էլ մոտ է քառակուսիին: ", "Տեսակավորման մեթոդների վրա հիմնված ալգորիթմներից մեկն իր էությամբ նման է պղպջակների  մեթոդին  (bubble  sort)  [57,  59]:  Հերթականությամբ  դիտարկվում  են հարևան գագաթների բոլոր զույգերը, և դրանք տեղերով փոխվում են, եթե այդ դեպքում հատումների  թիվը  կփոքրանա:  Գործընթացն  ավարտվում  է,  երբ  հերթական  լրիվ դիտարկումից  հետո  (բոլոր  տարրերով  անցնելուց  հետո)    հատումների  քանակը  չի նվազում  (չկարգավորված  զույգ  չի  գտնվում):  Այս  ալգորիթմի  բարդությունը  O(|R2|2)  է, քանի որ վերջնական կարգավորություն ստանալու համար կարող են անհրաժեշտ լինել մինչև անգամ |R2| դիտարկումներ: Այսպիսի ալգորիթմի ընտրությունը խիստ կախված է նախնական  դասավորության  ընտրությունից,  քանի  որ  դիտարկվում  և  տեղափոխվում են միայն իրար հարևան տարրերը: ", "- 82 - Հակառակ դեպքերում, բացի հիմնական անկյունագծային ԾՕ-ից՝ գեներացվում են նաև լրացուցիչ ԾՕ-ներ: Օրինակ՝ երբ  տողերի քանակը մեծ է սյուների քանակից #PR > #PC (Տես՝ նկ. 2.19 բ., գ.), կամ երբ սյուների քանակը մեծ է տողերի քանակից #PC > #PR  (Տես՝ #PC = #PR #PC = #PR /2 #PR = #PC /2 նկ. 2.19 դ., ե.): ", "ա. բ. դ. ե. Նկար 2.19.   ԱՀ-ի անկյունագծային ԾՕ-ի կիրառման օրինակները Իսկ  երբ  զանգվածի  տողերի  և  սյուների  հարաբերությունը  մեծ  է  երեքից,  ապա  այդ դեպքերի  համար  նախատեսված  է  կիրառել  ոչ  անկյունագծային՝ լրացուցիչ, ծրագրավորող  օրինակներ:  Այդ    ԾՕ-ների  կիրառումը  նախատեսված  է  միայն  մեծ չափսեր  ունեցող  հիշողության  նմուշների  դեպքերում  (այդ  պատճառով  այս  դեպքի օրինակը  ներկայացնելը  դժվար  է):  Ոչ  անկյունագծային  ծրագրավորման  օրինակները՝ ֆիզիկական  մակարդակում,  յուրաքանչյուր  տողին  (իսկ  #PC  >  #PR  դեպքում՝  սյունին) վերագրում  են  չկրկնվող  կոդ,  այսպես  ասած,  «համարակալում»  են  տողերը:  Ոչ անկյունագծային  ԾՕ-ները  կիրառվում  են  միայն  անկյունագծային  ԾՕ-ներից  հետո որպես  լրացուցիչ  ծրագրավորման  օրինակներ:  SIE-ի  հոսքում  բացի  պարտադիր զրոյական և անկյունագծային ԾՕ-ներից, կարող են գեներացվել   առավելագույնը մինչև վեց  լրացուցիչ  ԾՕ-ներ:  ՀՍ-ի  նմուշի  լրացուցիչ  ԾՕ-ի    ֆայլի  օրինակը  ներկայացված  է հավելված 4-ում: ", "Հաջորդ մեթոդի համաձայն՝ ալգորիթմը ամեն քայլում վերցնում է տարրերից մեկը և փորձում  այն  դնել  այնպիսի  տեղում,  որ  ստացվի  հատումների  փոքրագույն  թիվ:  Դրա համար  ալգորիթմը  փորձում  է  տարրը  տեղադրել  յուրաքանչյուր  հնարավոր  տեղում    և - 60 - հաշվում է ստացված հատումների քանակը: Քանի որ տարրը մի դիրքով տեղափոխելիս շղթաների  հատումների  քանակի  փոփոխությունը  կարելի  է  հաշվել  հաստատուն ժամանակում  (օգտագործելով  լրացուցիչ  հավաքված  ինֆորմացիա),  ապա  ալգորիթմն ունի  քառակուսային  բարդություն  և  իր  էությամբ  նման  է  ներդրումներով տեսակավորման մեթոդին (insertion sort)[57, 62, 63]: ", "գ. - 83 - փորձնական տվյալները SIV-ի ԱՀ-ը օգտագործվել է և, ներկայումս շարունակվում է օգտագործվել, որպես Synopsys ընկերության կողմից նախագծվող բոլոր  տեսակի հիշողության կոմպիլյատորների  կառուցվածքային  տարրերի  խճողումները  նկարագրող՝  scramble.tcl, ֆայլերի ճշտությունը ստուգող հուսալի գործիք:  SIV-ի ԱՀ-ը հաջողությամբ կիրառվում է  մեկ և երկու պորտեր ունեցող, մեծ արագագործության և բարձր խտության, տարբեր չափսերի նմուշների գեներացումը ապահովող հիշողության կոմպիլյատորների համար (800-ից ավելի): ", "SIV-ի հոսքի օգտագործման փորձնական տվյալները ՍՊԴԿ SDV SDV GDSII  ֆայլերի SDV-ի մշակման կոմպիլյատոր կոնֆիգուրա- գեներացման ընդհանուր Աղյուսակ 2.1 ցիաների ժամանակը ժամանակը քանակը (զուգահեռացման գործակից=16) ts90nm 1p11HS 512K ts90nm 1p11HD 512K ts65nm 1p11HS 512K ts65nm 2p22HD 512K ts45nm 1p11 512K ts32nm 1p11 1M ts28nm 2p22 1M ts22nm 1p11 1M ts14nm 1p11 1M մոտ 2 ժամ մոտ 3 ժամ մոտ 2.2 ժամ մոտ 2.4 ժամ մոտ 4.5  ժամ մոտ 4.5 ժամ մոտ 3.5  ժամ մոտ 4.2 ժամ մոտ 4.4 ժամ մոտ 5.5 ժամ մոտ 5.2 ժամ մոտ 6.3 ժամ մոտ 6.3 ժամ մոտ 7 ժամ մոտ 7.1 ժամ մոտ 8.2 ժամ մոտ 8.5 ժամ մոտ 10 ժամ Հարկ է նշել, որ ժամանակակից հիշողության կոմպիլյատորների SDV ստուգման կոնֆիգուրացիաների  քանակը  հասնում  է  մի  քանի  հարյուրների  (Տես՝  աղ.  2.1),  ուստի - 84 - շատ կարևոր է  դառնում հնարավորինս ավտոմատացնել, արագացնել  GDSII   ֆայլերի գեներացումը  և  մշակումը:  Այդ  նպատակով  SIV-ում  իրականացված  է    նմուշների գեներացման  աշխատանքների  զուգահեռ  կատարումը:  Բացի  այդ,  իր  աշխատանքի սկզբում  նախապես  համեմատվում  և  գեներացման  հերթից  դուրս  են  հանվում  արդեն գեներացված կոնֆիգուրացիաները:  Ցավոք,  ներկայումս անհնար  է լիովին ավտոմատացնել  արդյունքների  վերջնական  մշակման  աշխատանքները,  այն  կարելի  է պարզեցնել, հեշտացնել [27-29]՝  առավելագույնս նվազեցնելով մեխանիկորեն մշակվող ինֆորմացիայի  քանակը  և  տրամադրելով  մշակմանը  անհրաժեշտ  ինֆորմացիան առավելագույնս  ընթերցելի  տեսքով:  Աղյուսակ  2.1-ից  երևում  է,  որ  GDSII  ֆայլերի գեներացման  ժամանակի  և  այդ  ֆայլերի  քանակի  աճման  կախվածությունը  գծային  չէ: ", "P s   =   M a x  { P i } ,   i   e   {1 ,2 , . . . , k } , P s   < =   P ,p e a k P p = Y l i = i P i , P p < = P p e a k (33) Ո րտ ե ղ  Ր?ար ը   տ րվ ա ծ  ա ռա վելա գ ույն  հզորութ յունն  է,  Բ   i-դ   հիշողութ յա ն  կողմից ծա խ սա ծ  հզորությունն  է,  k - ն   հիշողութ յունների  ընդհա նուր  ք ա ն ա կ ն   է: ", "Հավասարում (3.39)-ում -ը որոշվում է հետևյալ կերպ՝ որտեղ -ն  ակնթարթային  հաճախականությունն  է,  իսկ -ը  հաճախականության միջին արժեքը, որը բնութագրվում է հետևյալ հավասարմամբ՝ Քանի  որ  2FSK  ազդանշանի  նորմավորված-կենտրոնացված  հաճախականությունը ունի երկու արժեք՝ հավասար մեծությամբ և հակառակ նշաններով, ապա հետևում է, որ հաճախականության բացարձակ արժեքը հաստատուն մեծություն է: Այստեղից պարզ է դառնում,  որ  2FSK  ազդանշանը  չի  պարունակում  բացարձակ  հաճախականային տեղեկատվություն:  Իր  հերթին  4FSK  ազդանշանը  պարունակում  է  բացարձակ հաճախականային  տեղեկատվություն,  ինչով  և  տարբերվում  է  2FSK  ազդանշանից:  Այս հիմնական  բնութագրող  հատկանիշի  համար  նախատեսված  ծրագրի  հատվածը պատկերված է նկ. 27-ում: ", "ASV ալգորիթմի աշխատանքի տևողությունը նմուշների ստուգվող ստուգող ալգորիթմի Աղյուսակ 2.2 ՍՊԴԿ կոմպիլյատոր չափսերի նմուշների հավաքա- աշխատանքի տիրույթը քանակը ծուների թիվը ժամանակ ts90nm 1p11 HS 8M ts90nm 1p11 HS 512K ts90nm 2p22 HS 512K ts90nm 1p11 HD 512K ts90nm 2p22 HD 512K ts90nm 2p11 HD 32K ts90nm 2p11 HS 16K - 85 - Փորձնական  տվյալները  ցույց  տվեցին,  որ  SPICE  մոդելավորման  արդյունքները կախված  չեն  մոդելավորման  ընթացքում  կատարվող  հաշվարկների  ճշտությունից, այսինքն՝ մոդելավորման ժամանակ բավական է օգտագործել ամենացածր ճշտությունը ապահովող  մոդելավորման  գործակիցը,  դրանով  զգալիորեն  նվազեցնելով  ASV ստուգումների տևողությունը: ", "SIV  ԱՀ-ի  ողջ  ծրագրավորումը  իրականացված  է  TCL  ծրագրավորման  լեզվով հեղինակի  մասնակցությամբ:  Իսկ  VIG,  VPG,  MPT  գործիքների  ծրագրավորումը կատարված է C++ ծրագրավորման լեզվով [17]: ", "Դիտարկվող հիմնական բնութագրող հատկանիշի հաշվարկի համար մշակվել է հետևյալ հավասարումը՝ որտեղ -ը  ազդանշանի  ակնթարթային  ամպլիտուդայի  նորմավորված  արժեքն է՝  նորմավորված  ըստ  դրա  առավելագույն  արժեքի,  և  բնոթւագրվում  է  հետևյալ հավասարմամբ՝ որտեղ -ն  ամպլիտուդայի  ակնթարթային  արժեքն  է,  իսկ -ն  ակնթարթային ամպլիտուդայի առավելագույն արժեքը: ", "Տվյալ բնութագրի ծրագրային իրականացումը պատկերված է նկ. 3.20-ում: ", "Աղյուսակ 2.3 SIE-ի հոսքի աշխատանքի տևողությունը NW  NB  CM  PR PC NPP ST (minutes)  TT (minutes) - 86 - Աղյուսակ 2.3  (շարունակություն) SIE-ի հոսքի աշխատանքի տևողությունը   NW (Number of Words) – Բառերի քանակը հիշողությունում,   NB (Number of Bits) – Հիշողության Մուտքերի/Ելքերի քանակը,   CM (Column Mux) – Սյուների փոխանջատիչի երկարությունը,   PR, PR=NW/CM - Ֆիզիկական տողերի քանակը հիշողությունում,   PC,  PC=NBxCM - Ֆիզիկական սյուների քանակը հիշողությունում,   NPP (Number of Programming Patterns) – գեներացված Ծրագրավորման   ST (Simulation Time in minutes) - նմուշի SPICE ֆայլի մոդելավորման ժամանակը   TT (Total Time in minutes)  TT=NPPxST - Ընդհանուր ժամանակը րոպեներով: ", "օրինակների քանակը, րոպեներով, Փորձերի  ընթացքում  նկատվեց,  որ  չնայած  նրան,  որ    մոդելի  դուրսբերման ժամանակը  կախված է  հիշողության  պատրաստման  տեխնոլոգիայից,  ԱՀ-ի աշխատանքի  տևողությունը  հիմնականում  կախված  է  նմուշի  կոնֆիգուրացիայի պարամետրերից  (NW,  NB,  CM,  BK)  և  կատարվող  մոդելավորման  աշխատանքի տևողության ժամանակից: ", "Իհարկե, ԱՀ–ում աշխատանքի ընդհանուր ժամանակը գնահատելիս անհրաժեշտ է  հաշվի  առնել  նախապատրաստական  աշխատանքների  ընթացքում ծախսված ժամանակը,  որը  կարող  է  կազմել  4-ից  8  ժամ:  Շատ  կարևոր  է  ընդգծել,  որ  ավտոմատ դուրսբերման միջավայրում ստացված կառուցվածքային մոդելը  արդեն վավերացված է և պատրաստ է անմիջական  օգտագործման: ", "Եթե  հայտնի  է  տարրի  ելքի  ազդանշանային  հավանակությունը (P),  ապա փոխանջատումների ակտիվությունը որոշվում է հետևյալ բանաձևով [68]. ։                                                  (2.10) Որոշակի  տրամաբանական  սխեմայի  տարրերի  փոխանջատման  ակտիվության գնահատման  ժամանակ  անհրաժեշտ  է  ունենալ  սխեմայի  առաջնային  մուտքերի ազդանշանային հավանականությունները։  Սխեմայի  առաջնային մուտքերում ազդանշանային  հավանականությունը  բնութագրելու  համար  առավել  ընդհանրացված մոտեցում  է  համարվում  հավանական  մոտեցումը,  երբ  սխեմայի  բոլոր  առաջնային մուտքերի համար ազդանշանային հավանականության արժեքը հավասար է 0,5: ", "Ինչպես  և  SIV  ԱՀ-ի  դեպքում,  SIE  ԱՀ-ի  կառավարումը,  մուտքային  պարամետրերի արժեքների  փոխանցումը  ծրագրերին,  նույնպես,  իրականացված  է  կառավարող տեքստային ֆայլի միջոցով: ", "Եզրակացություն Այս գլխում ներկայացվել են մեր կողմից մշակված և իրականացված. -  SIV ավտոմատ ծրագրային համակարգի նկարագրությունը, որը հնարավորություն է  տալիս  կատարել  հիշողության  կոմպիլյատորի  կառուցվածքային  գոտիները  և կառուցվածքային  խճողումները  նկարագրող  ֆայլի  ճշտության  ստուգումը: ", "Ներկայացված են ծրագրային ԱՀ-ի  ֆունկցիոնալ, կառուցվածքային սխեմաները; -  SIE ավտոմատ ծրագրային համակարգի նկարագրությունը, որը հնարավորություն է տալիս ստանալ Ստատիկ պատահական դիմումով հիշողության (ՍՊԴՀ) նմուշի կառուցվածքային  մոդելը  այդ  հիշողության  նմուշի  արտադրության  մեջ օգտագործվող  GDSII  ձևաչափով  ներկայացված  ֆայլից:  Ներկայացված  են ծրագրային  ԱՀ-ի    ֆունկցիոնալ,  կառուցվածքային  սխեմաները,  մոդելի  դուրս բերման հետ կապված հիմնախնդիրները, բարդությունները և սահմանափակումները: ", "Բերված են կատարված փորձերի արդյունքների տվյալները: ", "- 88 - ԵՎ ՎԱՐՔԱԳԾԱՅԻՆ ԹԵՐՈՒԹՅՈՒՆՆԵՐԻ ՆԵՐԱՐԿՄԱՆ ԵՎ ԱԼԳՈՐԻԹՄՆԵՐԻ ՍՏՈՒԳՄԱՆ  ԱՎՏՈՄԱՏ  ՀԱՄԱԿԱՐԳ հայտնաբերող ալգորիթմների ստեղծման խնդիրը Ինչպես արդեն նշել ենք, հիշողությունների թեստավորումը կարևոր և բարդ խնդիր է  մանավանդ  ներդված  հիշողությունների  դեպքում:  ՆՀՍ-ի  արագ  և լիարժեք թեստավորումը  ապահովելու  նպատակով  ներդրված  ՆՀՍ-ի  հետ    նույն  միջավայրում ներդրվում  են  լրացուցիչ  էլեկտրոնային  սխեմաներ,  պրոցեսորներ,  որոնց  նպատակն  է. ա)  օգտագործելով  ներդրված  ինքնաթեստավորման  ալգորիթմները    (անգլերեն  Built  in self-test)`  կատարել  ՆՀՍ-ի  անմիջական  ստուգումը,    և  բ)  հնարավորության  դեպքում, հիշողության  աշխատունակության  վերականգնումը  (անգլերեն  Built  in  redundancy analysis) [2], [17-21]:  Այդ  ներդրված  պրոցեսորների  կողմից  իրականցվող ինքնաթեստավորումը (ՆԻԹ) ստուգման  և  վերահսկման  հիմնական  միջոց  է հանդիսանում  ներդրված  հիշողության  սարքերի  համար:  ՆԻԹ  արդյունավետությունը բնութագրվում  է  երկու  չափանիշներով.  ա)  օգտագործված  թեստային  ալգորիթմի ծածկույթը՝  ՆԻԹ ալգորիթմի միջոցով հնարավոր անսարքությունների հայտնաբերման ունակությունը,  բ) այդ  լրացուցիչ  սխեմաների օգտագործման  հետևանքով հիշողության սարքի  տոպոլոգիայի  ավելացված  մակերևույթի  տոկոսը:  Այս  երկու  չափանիշները փոխկապակցված  են,  քանի  որ  շատ  բարդ  թեստավորման  ալգորիթմի  իրականացումը միկրոսխեմայում  պահանջում  է  սարքի  թիթեղի  վրա  ավելի  շատ  մակերևույթ  և հակառակը,  անհնար  է  իրականացնել  լիարժեք  ծածկույթ  ունեցող    ՆԻԹ  ալգորիթմ թիթեղի  սահմանափակ մակերևույթում: ", "Էլեկտրոնային  սխեմաների  թիթեղի մակերևույթի  մեծացումը  անցանկալի  է  հատկապես  հատուկ    կիրառությունների դեպքերում,  որոնցից  են  բժշկական,  տիեզերական,  բջջային  և  մի  շարք  այլ  ոլորտների հատուկ  սարքավորումները:  Իհարկե,  կան  թեստավորման  ալգորիթմներ,  որոնք - 89 - հնարավորություն  են  տալիս    ՆՀՍ-ում  հայտնաբերել  բոլոր  տեսակի  իրատեսական  և տեսական  սխալները:    Այդ  կարգի  ալգորիթմները  լինում  են  բարդ  և  ծավալուն  և  չեն կարող    օգտագործվել    ներդրված  սարքերի  դեպքում,  քանի  որ  դրանց  իրականացումը կպահանջի    միկրոսխեմայի  թիթեղի  մակերևույթի  մեծ  տարածք,  որը  իր  հերթին  կբերի նոր  անսարքությունների  առաջացմանը  և  արտադրանքի  վերջնական  գնի  անցանկալի թանկացմանը:  Ավելցուկայնությունից  խուսափելու համար  անհրաժեշտ է օպտիմալացնել  ՆԻԹ  ալգորիթմը:  Այս  դեպքում  մենք  պետք  է  գնահատենք  ՆԻԹ ալգորիթմը  այդ  հիշողության  սարքին  բնորոշ  իրատեսական  անսարքությունների մոդելների միջոցով և կատարենք օգտագործված թեստային  ալգորիթմի օպտիմալացումը:  Երբ  մենք  ասում  ենք  իրատեսական  անսարքություններ,  ապա  մենք հասկանում ենք անսարքություններ, որոնք  իրատեսական թերությունների արդյունք են հանդիսանում  [30]:  Այդ  թերությունները  բնորոշ  են    հատկապես  այդ  սարքին,  ՆՀՍ-ի պատրաստման  տոպոլոգիայի  մասնավորապես  այդ  տեխնոլոգիային:    Այս  պնդումը շատ կարևոր է  ՆԻԹ  ալգորիթմի օպտիմալացման համար, քանի որ հետազոտությունները  հաստատում  են,  որ  տեսական  անսարքությունների  մեծ  մասը իրատեսական չեն տվյալ ՆՀՍ-ի պատրաստման տեխնոլոգիայի համար [31]: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
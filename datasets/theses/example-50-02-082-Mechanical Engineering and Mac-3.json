{"paragraph_source_docs": [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 3, 3, 1, 2, 3, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0], "paragraphs": ["y1 rb ra y1,y2 y1,y3 y1 SM1 n+1 rsm rmod y1,y4 rmem y4 SM2 y5(ready) (a+b)modm start X1 FSM y1 y2 y3 y4 y5(ready) Նկ.2.1.  Մոդուլյար գումարման սարքի կառուցվածքային սխեման Կառավարող  ազդանշանները  նշված  են  նկ.  2.2-ում  բերված  ալգորիթմի  բլոկ- սխեմայի օպերացիոն բլոկներին համապատասխան, և ձևավորվում են FSM (Finite State Machine) կառավարող ավտոմատի կողմից: ", "S0/- start S1/y1 ra = a; rb=b; rmod=m; rsm=0; ready = 0; rmem=0; ready= S2/y2 S3/y3 S4/y4 rsm=ra+rb; rmem = rsm rsm= rsm-rmod no rsm[n-1]=0? X1 yes (a+b)modm =rmem; ready=1; S5/y5 end S0/- Նկ. 2.2.  Առանց LUT-աղյուսակի  օգտագործման մոդուլյար գումարիչի սխեման Երկու  n  կարգանի  a  և  b  թվերը  տեղակայվում  են  համապատասխանաբար  ra  և  rb ռեգիստրներում:  m  մոդուլի  լրացուցիչ  կոդը  տեղակայվում  է  rmod  ռեգիստրում:  SM1 գումարիչը  կատարում  է  սովորական  երկուական  գումարում,  որի  արդյունքը տեղակայվում է rsm ռեգիստրում և կրկնօրինակվում rmem ռեգիստրում:  SM2 գումարիչը հաշվարկում է a+b-m տարբերությունը, ինչից հետո վերլուծվում է այդ արժեքի նշանը և որոշվում. կատարել ցիկլի կրկնություն, թե rmem ռեգիստրի վերջին պարունակությունը արդեն  (a+b)modm  արտահայտության  արժեք  է:    k  գործակիցը  ցույց  է  տալիս    rsm ռեգիստրի  նշանի  ստուգման  X1  ստուգող  պայմանի  ցիկլերի  կատարման  քանակը: ", "(a+b)modm  արտահայտության  արժեքի  որոշումից  հետո  կառավարող  ավտոմատը հաղորդում  է  օպերացիոն  սարքին  ready  ազդանշանը,  որը  դիտարկվում  է  որպես մոդուլյար գումարման գործողության կատարման ավարտ: ", "Կառավարող  ավտոմատի  համար  կատարված  է  ալգորիթմի  բլոկ-սխեմայի  Մուրի մոդելի նշանադրում, որի անցումների գրաֆը ներկայացված է նկ. 2.3-ում: ", "So/- S1/y1 S2/y2 S3/y3 S5/y5 S4/y4 X1 X1 Նկ.  2.3. Մոդուլյար գումարման սարքի կառավարող ավտոմատ Մուրի մոդելի անցումների գրաֆը Այսպիսով,    մոդուլյար  գումարիչի  նախագծման  առաջարկված  մեթոդը,    հիմնված (2.1) արտահայտության վրա և մշակված կառուցվածքային սխեման (նկ. 2.1) համարվում են  արագագործության  տեսակետից  առավել  արդյունավետ,  համեմատած  ավանդական ըստ  մոդուլի  գումարման  հետ:  Նշվածը  պայմանավորված  է  նրանով,  որ  ավանդական ըստ  մոդուլ  m  գումարումը,  այսինքն  երկուական  գումարում,  ապա  հաջորդող բաժանումը    մոդուլ  m-ի  արժեքին:  Քանի  որ  բաժանարարի  (մոդուլ  m-ի  արժեքը) նորմալացումը,  քանորդի  յուրաքանչյուր  կարգի  որոշումը  և,  ի  վերջո,  վերջնական մնացորդի,  որը  և  կհանդիսանա  (a+b)modm  արտահայտության  արժեքը,  հնարավոր նորմալացման  անհրաժեշտությունը  կդառնա  արագագործության  անկման  պատճառ: ", "Բացի  դրանից,  Verilog  լեզվով RTL-նկարագրության  համար  առանձին  բլոկներ նկարագրվում  են  always  պրոցեդուրային  օպերատորի  միջոցով,  իսկ  եթե  այն կոմբինացիոն  սխեմա  է,  ապա  կարող  է  նկարագրվել  նաև  assign  օպերատորի կիրառմամբ: Արդյունքում կստացվի սարքի RTL-նկարագրում, որի հիման վրա կարելի է սինթեզել սխեման[4]: ", "տեխնոլոգիայի  հիման վրա: ", "Առաջարկվում  է  2n+1  և    2n-1  մոդուլներով    արագագործ  մոդուլյար  գումարիչներն նախագծել`  կիրառելով  երկուական  լուծումների  դիագրամների  տեխնոլոգիան  (Binary Decision Diagram (BDD)):  Տվյալ տեսակի մոդուլները լայնորեն կիրառվում են մոդուլյար թվաբանության բլոկում` սխեմաների կառուցման համար [16, 41, 79]: ", "կարգ ցիկլիկ փոխանցմամբ գումարիչների հիման վրա: Դա պայմանավորված է նրանով, որ 2n-1 մոդուլով մոդուլյար գումարումը կարող է ձևափոխվել 2n  մոդուլով գումարման` համաձայն  բանաձև (2.2)-ի: ", "-ը  դետալի  և  ինդենտորի  շփման  գործակիցն  է  գերձայնային  տատանումների (2.32) պայմաններում և որոշվում է  (2.33) արտահայտությամբ -ն  դետալի  և  ինդենտորի  շփման  գործակիցն  է,  իսկ -ն  գործակից  է,  որը  հաշվի  է առնում  գերձայնի  ազդեցության  պայմաններում  շփման  գործակցի  փոփոխությունը (2.33) : ", "Նշենք,  որ և դեպքը  համապատասխանում  է  իդեալական  կապակցված նյութին: ", "Հարկ է նշել, որ մոդուլյար գումարիչի լիարժեք իրականացման համար անհրաժեշտ է կիրառել լրացուցիչ տրամաբանություն, որը չի մեծացնում հապաղումը, փաստորեն չի ազդում  արագագործության  վրա,  քանի  որ  իրագործվում  է  հիմնական  կառուցվածքին գեներացման և փոխանցման տարածման ֆունկցիաները իրականացնող բլոկի ձևավորում, զուգահեռ: ", "փոխանցման  ֆունկցիան  իրականացնող  FDD-ի  հիման  վրա  կառուցված   մոդուլյար  գումարի  վերջնական  արժեքը հաշվարկող  բլոկի բլոկի ձևավորում, ձևավորում: ", "Հոծ  նյութի  համար  նույն  լարվածային  վիճակների  դեպքում  Տրեսկա−Սեն- Ստացված  բանաձևերի  համեմատումից  երևում  է,  որ -  ն  Մոր–Կուլոնի պլաստիկության  պայմանում  փոխարինում  է –  ին,  իսկ  Դրուկեր−Պրագերի պլաստիկության  պայմանում` -  ին:  Այսինքն`  եթե  Մոր–Կուլոնի պլաստիկության  պայմանում -  ի  փոխարեն  տեղադրենք ,  ապա  կստանանք Տրեսկա−Սեն-Վենանի  պլաստիկության  պայմանը,  իսկ  եթե  Դրուկեր−Պրագերի պլաստիկության  պայմանում -  ի  փոխարեն  տեղադրենք `  կստանանք Հուբեր−Միզեսի պլաստիկության պայմանը [43].: ", "Ստացված  արտահայտությունները տեղադրելով  (2.20)-ի  մեջ  կստանանք տարածական  գերձայնային  տատանումների  կիրառմամբ  գրտնակման  դեպքում խորդուբորդությունների բարձրությունը: ", ",                                             (2.6) մոդուլի արժեքի լրացումն է մինչև 2n+1 աստիճան, իսկ cout-ը (a+b+z) գումարի ավագ բիթն է: ", "Բանաձև  (2.6)-ից  բխում  է,  որ  |a+b|mod(2n+1)-ն  որոշելու  համար  նախ  անհրաժեշտ  է հաշվարկել  (a+b+z)  արտահայտությունը,  այնուհետև  դրան  գումարել  ավագ  բիթի ժխտումը:  Կոնստանտ  z-ի  ավելացումը  նպատակահարմար  է  իրագործել  CSA  տիպի գումարիչների միջոցով, որը հնարավորություն է տալիս գումարել 3 թիվ միակարգ լրիվ գումարիչի հապաղումով: Հաջորդ քայլով կգումարենք ստացված կարգային արժեքները և  համապատասխան  փոխանցումները,  որպեսզի  ձևավորենք  վերջնական  փոխանցման ժխտումը: ", "Ծրագիրը  բաղկացած  է    դիմային  վահանակից  և  բլոկ-դիագրամայից,  որոնք (2.42) ա) բ) Նկ.2.12․ Մակերևութային շերտի խորդուբորդությունների հաշվարկման ծրագրի   ա) դիմային վահանակ;  բ) բլոկ-դիագրամա Ինդենտորի  պարամետրերից    մուտքային  են  ինդենտորի  շառավիղը՝  r  ind(մմ), ինդենտորի  աշխատանքային  մասի  խորդուբորդությունների  բարձրությունը՝  Rz_ ind(մկմ),    ինդենտորի  նյութի  Պուասոնի  գործակիցը՝  μ2  և  նյութի  Յունգի  մոդուլը՝  E2 (Ն/մ2):      Մշակվող  դետալի  պարամետրերից    մուտքային  են  դետալի  տրամագիծը՝  D (մմ), մշակվող նյութի Յունգի մոդուլը՝  E1 (Ն/մ2), մշակվող  նյութի Պուասոնի գործակիցը՝ μ1,  դետալի  ելակետային  խորդուբորդությունների  բարձրությունը Rz_isx(մկմ)  և մշակվող  նյութի  հոսունության  սահմանը`  σT  (Ն/մ2):    Գերձայնային      տատանումների պարամետրերից    մուտքային  են  տատանման  ամպլիտուդը՝  A(մկմ)  և  տատանման հաճախականությունը՝ f(Հց): ", "մեթոդներից  բացի,  ատենախոսությունում  մշակվել  են  նախագծման  նոր  մեթոդներ, որոնցից  մի  քանիսը  հիմնված  են  առկա  մեթոդների  վրա  և  ունեն  որոշակի առավելություններ  ԲՖ  բլոկների  (FPGA)  օգտագործմամբ  նախագծման  տեսակետից, ինչպես  արդեն  նշվել  է,  այս  FPGA-երն  ունեն  սահմանափակ  քանակի  ներկառուցված տրամաբանություն  և  անհամեմատ  ավելի  շատ  քանակով  տրիգերներ,  հետևաբար կառավարող ավտոմատի առկայությունը նույնպես ունի իր առավելությունը: ", "ենթածրագիրը  նախատեսված  է    տատանման  ամպլիտուդի    AX,AY,AZ բաղադրիչների  և  դետալի  պտտման  արագության  հաշվարկման  համար:  Տատանման ամպլիտուդի AX,AY,AZ  բաղադրիչների  հաշվարկը իրականացվում է օգտվելով դիմային վահանակում  բերված  սխեմայից, ընդ  որում դրանք արտահայտվում են  երեք չափման միավորներով  (մկմ,  մմ,  մ):    Տատանման  ամպլիտուդի  բաղադրիչների    հաշվարկման համար  մուտքային  պարամետրեր  են  տատանման  ապլիտուդը  A(մկմ)  ու  α  և    β անկյունները, որոնք որոշում են ինդենտորի դիրքը դետալի նկատմամբ: ", "Հիշող սարքի միջոցով մոդուլյար բազմապատկիչների նախագծում Նկ. 2.4.-ում պատկերված սխեման հնարավորություն է տալիս ստանալ  (axb) mod m արտահայտության  արժեքը  PROM  (Programmable  Read-Only-Memory)  տիպի  հիշող սարքի միջոցով: ", "EPROM b  n Log2m OE CS Նկ. 2.4. EPROM-ի միջոցով մոդուլյար բազմապատկիչի իրագործումը Երկու a և b թվերը` որպես հասցեական մուտք, ներմուծվում են PROM,  որտեղից և տվյալ  հասցեով  ընտրվում  է  նախապես  գրանցված  (axb)modm  արժեքը:  Ելնելով  տվյալ սկզբունքից`  կարելի  է  օգտագործել  նաև  LUT  (Look-Up-Table)  –  աղյուսակ`  22nx  log2m չափերով: Այսպիսի լուծումը շատ հարմար է փոքր կարգայնությամբ a և b թվերի համար, քանի  որ  n-ի  և  m-ի  արժեքների  աճի  դեպքում  աճում  են  նաև    հիշող  սարքի  կամ    LUT աղյուսակի չափերը: Օրինակ,  ենթադրենք առկա է PROM, որի միջոցով իրագործված է m=7  մոդուլով  a=11  և  b=23  երկու  n=8  կարգանի  թվերի  բամապատկում:  PROM  հիշող սարքի հասցեական մուտքերին կձևավորվի  00001011 00010111 երկուական կոդը, որտեղ հասցեի  առաջին  ութ  բիթերը  a=11  թվի  երկուական  ներկայացումն  է,  իսկ  հաջորդ  ութ բիթերը` b = 23 թվի երկուական ներկայացումը: Հետևաբար PROM հիշող սարքի 2839-րդ բջջում  պահված  կլինի      (axb)  mod  m  բանաձևին  համաձայն`  (11x23)mod  7=    253mod7=1 տասական թվի  (001)2  եռակարգ երկուական ներկայացումը, քանի որ log27<3: ", "Եթե a կամ b օպերանդներից (արտադրիչներից) որևէ մեկը հավասար է զրոյի, ապա “ԵՎ”  սխեմայի  ելքում  կձևավորվի  տրամաբանական  “0”,  ինչը  կոմպարատորի  ելքում կձևավորի  տրամաբանական  “1”  արժեքը,  որի  միջոցով  էլ  մուլտիպլեքսորի  ելք փոխանցվելու  է  “0”  արժեք,  հակառակ  դեպքում  մուլտիպլեքսորի  ելք  փոխանցվելու  է LUT3-ից  հակադարձ ձևափոխման արժեքը[7]: ", "Ինչպես  ինդեքսային  մոդուլյար  բազմապատկիչների,  այնպես  էլ  զուգահեռ ինդեքսային  մոդուլյար  բազմապատկիչների  ապարատային  իրագործման  ժամանակ անհրաժեշտ  է  դիտարկել  նաև  այն  դեպքը,  երբ  օպերանդներից  (արտադրիչներից)  մեկը (կամ  երկու  օպերանդը  միաժամանակ)  հավասար  է  զրոյի:  Ինչպես  երևում  է  աղ.1.5-ից, ցանկացած m պարզ մոդուլով բազմապատկման համար q ամբողջ թվերի բազմությանը համապատասխանում է ինդեքսների բազմություն` ,  այսինքն  օպերանդի  զրոյի  հավասար  լինելը  LUT1  և  LUT2  աղյու- սակներում  արտապատկերված  չէ:  Այս  դեպքը  պահանջում  է  լրացուցիչ  սխեմա մուտքային օպերանդները “0”-ի հետ համեմատելու համար: ", "Ինդեքսային  մոդուլյար  բազմապատկման  սարքի  կառուցվածքային  սխեմային ավելացված  է  համեմատման  սխեմայից (կոմպարատորից)  և  մուլտիպլեքսորից բաղկացած բլոկ (նկ. 2.5): ", "LUT index_a log2(m- “0” LUT (ab)mod ADD Նկ.  2.5.  Մուտքային օպերանդների զրոյի ստուգման իրականացմամբ ինդեքսային մեթոդով index_b log2(m-2) (ab)mod log2(m- LUT մոդուլյար բազմապատկման սարքի կառուցվածքային սխեման Զուգահեռ  ինդեքսային  մոդուլյար  բազմապատկիչներում  զրոյական  օպերանդների ստուգումը կատարվում է նույն սկզբունքով: ", "Ելնելով  վերը  նշվածից`  կարելի  է  եզրակացնել,  որ  մոդուլյար  բազմապատկիչների նախագծման  առաջարկված  մեթոդներն  ավելի  արդյունավետ  են  արագագործության տեսանկյունից  (3  տակտ`  1-ական  տակտ  LUT-երից  ընթերցելու  և  1  տակտ  գումարման համար)` համեմատած ավանդական ըստ mod m-ի բազմապատկման մեթոդի, այսինքն` սովորական բազմապատկում և հաջորդող բաժանում m-ի մոդուլի: ", "Քանի  որ  բաժանարարի (մոդուլ  m-ի  արժեքի)  նորմալացման,  քանորդի յուրաքանչյուր  բիթի  հաշվարկման  և,  ի  վերջո,  վերջնական  մնացորդի,  որը  և կհանդիսանա արդյունքը,  հնարավոր  նորմալացման  անհրաժեշտ գործընթացները  կարող  են  արագագործության  նվազեցման  պատճառ  դառնալ:  Նշված գործողությունների  համար  ծախսվում  է` տակտ`  n  տակտ  բազմա- պատկման, տակտ քանորդի կարգերի որոշման և 2 տակտ բաժանարարի և վերջնական մնացորդի նորմալացման համար: ", "Հարկ  է  նշել,  որ  նմանատիպ  բազմապատկիչները  կարող  են  կիրառվել մասնագիտացված սարքերում` կոդերի հսկման, գաղտնագրման, ազդանշանների մշակ- ման  և  այլ  ոլորտներում:  Անհրաժեշտ  է  նաև  նշել,  որ  ինդեքսային  մեթոդով  մոդուլյար բազմապատկիչների  նախագծման  առաջարկված  տարբերակները  աշխատունակ  են միայն  այն  դեպքում,  երբ  m-ը  պարզ  թիվ  է:  Այլ  տարբերակների  համար  կարելի  է  առա- ջարկել  տարբեր  (օրինակ`  քառակուսիների  օրենքի  վրա  հիմնված,  Բուտի  ալգորիթմով գործող և այլն) մեթոդներ: ", "Քառակուսիների օրենքի հիման վրա  մոդուլյար բազմապատկիչների նախագծում բազմապատկման սխեման կարելի ձևափոխել,  փոխարինելով, մինչև LUT աղյուսակներում  համապատասխան  Էյլերի  ֆունկցիայով  որոշվող  արժեքների գրանցումը 2-ի բաժանող սարքերը մեկ բիթ աջ տեղաշարժող ռեգիստրներով  (նկ. 2.6): ", "n+1 RG LUT   Φ (S-)2) |+|m |x*y|m Log2m n+1 RG LUT   Φ (S+)2) Նկ. 2.6. Տեղաշարժող ռեգիստրների  կիրառմամբ մոդուլյար բազմապատկման սխեման ըստ քառակուսու օրենքի Երկուսի  բաժանման  գործողությունը  վտանգում  է  գումարման  և  հանման գործողություններից  հետո  ձևավորվող  միջանկյալ  արժեքների  ամբողջ  թիվ  մնալը,  և, հետագայում,  LUT-աղյուսակից  ճիշտ  արդյունքի  ընտրումը,  ինչը,  իր  հերթին  կվտանգի վերջնական արդյունքի ճշտությունը: Բացի դրանից m մոդուլով 2 թվի բաժանումը` |2|-1m երաշխավորվում  է  միայն,  եթե  m-ը  կենտ  թիվ  է,  այս  դեպքում  բաժանելիս  ստացված  ½ արժեքները հետագա գումարելիս կոնպենսացվում են և արդյունքում ստացվում է ճիշտ պատասխան: ", "Օրինակ . Հաշվենք (axb)mod m, a=3, b=7, m=5: (m-ը չի կարող լինել զույգ): ", "վիճակի հետազոտումը Մեքենամասերի  սահմանային  վիճակների  հետազոտման  գործընթացները գործնական մեծ նշանակություն ունեն: Դրանց արդյունքների հիման վրա որոշվում են  կառուցվածքների  սահմանային  բեռնվածքները  և  բացահայտվում`  դրանց բեռնավորման լրացուցիչ պաշարները: Այդ ուսումնասիրությունները շատ կարևոր են  նաև  տարբեր  տեխնոլոգիական  գործողությունների  դեֆորմացման  ուժերի որոշման դեպքերում: ", "Ի  տարբերություն  ինդեքսային  մեթոդի,  քառակուսիների  օրենքի  վրա  հիմնված մոդուլյար  բազմապատկման  մեթոդը  չի  զիջում  արագագործության  և    ապարատային ծախսերի տեսակետից և կիրառվում է բոլոր տեսակի թվերի համար: ", "փոխանցման ֆունկցիաների բևեռների և զրոների բաշխվածության վրա կոնդենսատորի շղթայում  լրացուցիչ  ակտիվ  դիմադրության  ազդեցության,  ինչպես  նաև  դինամիկ  և հաճախականային բնութագրերի հետազոտություն: ", "m=2k մոդուլով մոդուլյար բազմապատկիչների նախագծման մեթոդները m=2k  մոդուլով  մոդուլյար  բազմապատկիչների  կառուցման  համար  կարող  է օգտագործվել  մեթոդ,  որը  հիմնված  է  մոդուլյար  թվաբանության  և  դասական  բուլյան հանրահաշվի հատկությունների միավորման վրա[8, 13]: ", "Ենթադրենք տրված են a և b դրական թվերը` a>0 և b>0, և դրանց  P=a×b արտադրյալը: ", "Եթե երկու թվերը փոքր են մոդուլի 2k արժեքից, և a, և b թվերը կարող են ներկայացվել n բիթերով  (երկու  թվերը  ունեն  միևնույն  կարգայնությունը):  Այս  դեպքում  թվերի  P արտադրյալը  կարող է ներկայացվել հետևյալ բանաձևով` որտեղ –ն  a և b թվերի բազմապատկման   -րդ բիթն է [8, 9]: ", "(2.7)-ը ընդլայնված տեսքով գրելու դեպքում այն կներակայացնել (2.8) օգնությամբ: ", "Հաշվարկենք  (2.8)  արտահայտության  արժեքը  մոդուլի  համար:  Հարմարության համար  2k  մոդուլի  տեսքը  փոխարինենք  m-ով:  Համապատասխանաբար  (2.8) արտահայտությունը կարելի է ներկայացնել հետևյալ տեսքով` Հաշվի առնելով այն փաստը, որ = 0 արտահայտություն (2.9)-ը կարելի է ներկայացնել (2.10)-ի տեսքով: ", "Ելնելով  այս  ամենից`m=  2k  մոդուլով  մոդուլյար  բազմապատկիչը  a  և  b  դրական թվերի  սովորական  երկուական  բազմապատկիչ  է,  որից  որպես  վերջնական  արժեք վերցված են ընդհանուր արտադրյալի ցածր k բիթերը: ", "Այս  տարբերակով  մոդուլյար  բազմապատկման  սարքի  կառուցվածքային  սխեման կունենա նկ. 2.7-ում բերված տեսքը: ", "ra Y1 rb Y1, Y4 SM1 rsm Y7 Y1,Y3, Y4 Y2, Y4 CT Y5, Y7 result (a×b)mod m X 5 FSM Y5 SM2 log2m rmod k=log2 rmod արժեքի որոշում Y6 Y1 Y2 Y3 Y4 Y5 Y6 Y7 ready Y2 X 4 X 3 X 2 X 1 Նկ. 2.7.  2k մոդուլով մոդուլյար բազմապատկիչի կառուցվածքային սխեման և դրական  թվերի  սովորական  երկուական  բազմապատկման  գործողության ամենատարածված  ձևն  է  բազմապատկիչի  փոքր  կարգերից  սկսած  բազմապատկումը, բազմապատկիչի  և  մասնակի  արդյունքների  գումարի  տեղաշարժումով  դեպի  աջ: ", "Բազմապատկումը կատարվում է տակտերում, որտեղ  –ը բազմապատկիչի կարգերի քանակն է: Յուրաքանչյուր տակտում վերլուծվում է բազմապատկիչի փոքր կարգը: Եթե այն  հավասար  է  “1”,  ապա  մասնակի  արտադրյալի  գումարին  գումարվում  է  բազմա- պատկելին:  Հակառակ  դեպքում  գումարվում  է  “0”,  հետո  բազմապատկիչը  և  մասնակի արտադրյալի  գումարը  տեղաշարժվում  է  1  կարգ  դեպի  աջ,  այնուհետև  վերլուծվում  է բազմապատկիչի փոքր կարգը և այլն: Այս գործողությունը կատարվում է անգամ: ", "Երկու  n  կարգանի և թվերը  տեղակայվում  են  համապատասխանաբար  ra  և  rb ռեգիստրներում, իսկ մոդուլի արժեքը տեղակայվում է rmod ռեգիստրում: ", "Երկուական բազմապատկման գործողության իրականացման համար առանձնացվում է նաև rsm ռեգիստրը, որտեղ կգրանցվեն բազմապատկման ընթացքում ձևավորվող  միջանկյալ  գումարման  արդյունքները,  ինչպես  նաև  result-ը  վերջնական արդյունքի ռեգիստրն է, որտեղ կգրանցվի մոդուլյար բազմապատկման արդյունքը: ", "Ինչպես  երևում  է,  կառուցվածքային  սխեման  (նկ.  2.7)  համալրված  է  ղեկավարող ազդանշաններով,  որոնք  ձևավորվում  են  կառավարող  ավտոմատի  կողմից:  Այս  սարքի ալգորիթմի բլոկ-սխեման ներկայացված է նկ. 2.8-ում: ", "կամ թվերի զրոյին հավասար լինելը ստուգելուց հետո (X2 պայմանը), առանձին ալգորիթմով  կատարվում  է արժեքի  հաշվարկը,  որը  տեղակայվում  է  CT  հաշվիչում, քանի  որ  բազմապատկման  գործողությունը  կատարվելու  է  ոչ  թե ,  այլ տակտերի ընթացքում`  քանի  որ  արտադրյալի  վերջին կարգերը  որոշելու  համար  ըստ  բանաձև (2.10-ի): ", "Եթե ապա result ռեգիստրում տեղակայվում են rb ռեգիստրի բարձր բիթերը (result=rb[n-1:n-k]),  հակառակ  դեպքում`  result  ռեգիստրում  տեղակայվում  են  rsm ռեգիստրի  ցածր բիթերը`  միավորված  rb  ռեգիստրի բիթերի  հետ (result={rsm[p-1:0],rb[n-1:0]}): ", "Վիճակների  տարածությունում  դինամիկայի  հավասարումների  միջինացման մեթոդի  համաձայն  առաջին  փուլում  կատարվում  է  (2.1)-ի  փոխանջատման  q(t)  ֆունկ- ցիայի ժամանակային միջինացում [43]: Դրա համար մտցվում է (2.9) ժամանակային  ֆունկցիան,  որը  ներկայացնում  է  պարբերության  ընթացքում  q(t)-ի արտահայտության  միջինացում  t  ժամանակի  անընդհատ  փոփոխման  պարագայում: "], "source_docs_file": "Mechanical Engineering and Machine Science.json"}
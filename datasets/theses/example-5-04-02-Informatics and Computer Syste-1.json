{"paragraphs": ["•  Պետք  է  բացառվի  որևէ  լուծման  գոյությունը,  որը  թույլ  կտա  գեներացնել արդյունքներն  ավելի  արագ  առանց հստակ որոշված հաշվարկների իրականացման: ", "Քայլ  1.  Հանգույցների  բազմությունը  բաժանում  ենք  5  մասի,  ամեն  մասում պահպանելով  հանգույցների  անկախությունը:  Վերցնում  ենք  5  մասիվ  և զբաղեցնում արդեն առանձնացված անկախ հանգույցներով: ", "•  POW  ֆունկցիայի  լուծման  արդյունքում  առաջացած  ելքային  տվյալները  պետք  է ունենան  փոքր  ծավալ,  քանի  որ  այն  պետք  է  փոխանցվի  համացանցով  այլ վերջնակետ, որտեղ կկատարվի ստուգումը: ", "Ծառի  առկայության  դեպքում  որպես  արդյունք  ձիու  սև  պատկերի  հետ  մեկտեղ կստանանք նշված շեղումային սև տարածքները (Նկար 2.16): ", "POW  ֆունկցիաների  առավել  տարածված  տեսակն  օգտագործում  է  պրոցեսորի հաշվողական  ռեսուրսները:  Բացի  այդ,  առաջարկվել  են  նաև  POW  այլ  ֆունկցիաներ, ինչպիսիք  են  հիշողության  ֆունկցիաները:  Այս  տեսակի  ֆունկցիաները  ավելի  դժվար  է իրացնել,  քանի  որ  հիշողության  ծանրաբեռնման  համար  անհրաժեշտ  ժամանակը  ավելի շատ  է,  քան  CPU  ծանրաբեռնման  ժամանակը։  Նաև  հիշողության  ֆունկցիաների գործածումը բարդություն  է ստեղծում ցածր պարամետրերով համակարգիչների կիրառման դեպքում:  Հաշվի  առնելով  վերոհիշյալ  թերությունները՝ ատենախոսությունում նախընտրությունը    տրվել  է  պրոցեսորի  հետ  աշխատող  POW  ֆունկցիաներին,  որն այսուհետև կնշվի որպես դասական POW ֆունկցիաներ։ "], "paragraph_source_docs": [0, 1, 0, 2, 0], "source_docs_file": "Informatics and Computer Systems.json"}
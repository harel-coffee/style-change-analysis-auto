{"paragraphs": ["համապատասխանաբար  նաև  խնդիրների  տեղաբաշխման  պրոցեսը ստեղծելով նշված քանակությամբ մատրիցներ, և վերջում տպում է ստացված միջին արդյունքները «Statistics» բաժնում համար  պահանջվում են գրաֆի  տարբեր ներկայացումներ, կա երկու տեսակ ներկայացում. a.  Մեծ  շրջաններ,  որը  հարմար  է  ավազահատիկների  փլուզումը  ցույց տալու համար նկար 37 b.  Մեծ ուղղանկյուններ, որը հարմար է ցույց տալու խնդիրների բաշխման անիմացիան, որտեղ յուրաքանչյուր վանդակ պետք է ցույց տա իր մեջ գտնվող,  կատարվող  և  հերթի  մեջ  գտնվող  խնդիրները  նկար  35: ", "Նկար 37.SandScheduler համակարգում շրջաններով տեսաբերում: ", "•  Գնահատվել  է  մեթոդի  պիտանիությունը՝  հիշողության,  հաղորդակցման,  հաշվո- ղական գերբեռնվածության և հարձակումների նկատմամբ կայունության առումներով: ", "ստեղծելով նշված քանակությամբ մատրիցներ, և վերջում տպում է ստացված միջին արդյունքները ՛Statistics' բաժնում գումարների հարաբերությունը ընդհանուր վանդակների թվին ավազահատիկներ պարունակող վանդակների գումարների հարաբերությունը ընդհանուր վանդակների թվին տակտերի  քանակը  և  մկնիկի  քլիքի  միջոցով  ավելացվող  խնդիրների քանակը լռությամբ որքան կարևոր են մուտքագրվող խնդիրները Նկար 38.SandScheduler համակարգի տեսքը: ", "SandScheduler  համակարգով  նախագծված  կլաստերային  համակարգի բաշխիչը  ունի  նաև  հնարավորություն  դիմակայել  որոշ  տեխնիկական  խնդիրների, ինչպիսիք  են  օրինակ  որոշ  հանգույցի/հանգույցների  անսպասելի  անջատումները: ", "Տվյալ  դեպքում  տվյալ  հանգույցի  հարևանները  ավտոմատ  կերպով  ինֆորմացվում են  դրա  անսարքության  մասին  և,  հիմնվելով  ավազակույտի  մոդելի  փլուզումների տրամաբանությանը,  հասկանում  ենք  որ  առաջադրանքների  տեղաշարժ  դեպի վթարված  հանգույց չի լինում:  Միաժամանակ  ընդհանուր  կլաստերային համակարգը  շարունակում  է  աշխատել  սովորականի  պես  առանց  որևէ  խնդրի, բացառությամբ իհարկե վթարված հանգույցներում իրականացվող առաջադրանքների կորստի (Նկար 39): ", "Տեսաշարի  ընթացիկ  պատկերի  մատրիցի  ձևափոխության  արդյունքում ստացված բուրգի հիմքը մատրիցն է․ , (2.10) իսկ պատկերի փոքրացման՝ բուրգի մի շերտից մյուսի անցման արդյունքում ստացված մատրիցի տեսքը հաշվվում է հետևյալ բանաձևով․ (2.11) որտեղ -ը  տեսաշարի  ընթացիկ  պատկերի  մատրիցն  է, -ը  բուրգի զրոյական  շերտն  է՝  հիմքը, պատկերի  վրա  կիրառվող  գործողությունների գործակիցն  է  (grayscale,  blur), -ն  բուրգի  շերտերի  քանակն  է, -  պատկերի  չափերի փոքրացման գործակիցն է։ ", "Ցանցի  կառուցումը  բուրգի  վերջին  շերտում․  Տեսահսկման  ժամանակ պատկերում  փոքր  օբյեկտները  հետաքրքրություն  չեն  ներկայացնում։  Օգտատերը հնարավորություն  ունի  սահմանելու  իրեն  անհրաժեշտ  չափը։  Ֆոնում  սահմանված չափից փոքր օբյեկտները կանտեսվեն համակարգի կողմից: Չափը սահմանելուց հետո ցանցը կկառուցվում է ըստ նշված չափի (Նկար 2.10)։ ", "Նկար 2.10․ Ցանցի կառուցումը պատկերում: ", "SandGame  «լուրջ  խաղի»  օրինակը  իր  գրավչությամբ  և  պիտանելիությամբ կարող է հիմք հանդիսանալ շատերի համար ինքնակազմակերպվող կրիտիկականության կոնցեպտի դյուրընկալման: ", "SandScheduler  ծրագրային  փաթեթի  միջոցով  հնարավոր  է  ուսումնասիրել ավազակույտի  և  rotor-router  մոդելների  պիտանելությունը  և  կարևորությունը կլաստերային  համակարգերում,  և  դրանց  առավելությունների  մեջ  համոզվելու դեպքում կարելի է արդեն SandScheduler-ում բաշխիչի նկարագրված  աշխատանքը իրականացնել իրական կլաստերային համակարգերում: ", "Մշակված  նեյրոնային  ցանցերը  հնարավորություն  են  տալիս  ժամանակի շահման  ավազակույտի  մոդելի  վրա  նկարագրվող  «մինիմում  ավազահատիկներ  և մաքսիմալ  հեռավորություն»  խնդրի  շրջանակներում՝  փոխարինելով  մոդելի սիմուլացիան նկարագրված և մշակված նեյրոնային ցանցով: ", "ՎԵՐԼՈՒԾՈՒԹՅՈՒՆԸ և ԳՆԱՀԱՏԱԿԱՆԸ Ատենախոսության  չորրորդ  գլխում  զետեղված  են  ինքնակազմակերպվող համակարգերի  ուսումնասիրմանը  նվիրված  ծրագրային  փաթեթների  և  արդեն գոյություն ունեցող լուծումների միջև համամետական վերլուծությունը: ", "Մասնավորապես  դիտարկվել  է  «CA  Simulator»  համակարգը,  և  առաջարկված զուգահեռացման  ալգորիթմը  համապատխան  փորձարկումներով:  Սույն  գլխում բերված    է  նաև  ավազակույտի  մոդելի  սիմուլատորի  կողմից  ստացված  ճշգրիտ արդյունքների  և  մշակված  նեյրոնային  ցանցերի  կողմից  ստացված  արդյունքերի համեմատական վերլուծություն: ", "Սխալների  հայտնաբերումը  և  գործառույթների  չեղարկումը    կատարվում  է՝ հիմնվելով գաղտնագրված տեղեկատվության վերծանման արդյունքի վրա։ Ինչպես նշվել է, ինտերնետ իրերին պատկանող տեղեկատվության վերծանման համար անհրաժեշտ է D–1 ինտերնետ իրերին պատկանող բաց տվյալի հեշը և տվյալ ինտերնետ իրի բանալին։ ", "Դիտարկենք ներկայացված «CA Simulator» ծրագրային  փաթեթի գործարկման  արդյունքների և  գոյություն  ունեցող լուծումների  միջև տարբերությունը: Մասնավորապես, դիտարկվել է NetLogo միջավայրը, որը, լինելով բազմաագենտ  համակարգերի  ծրագրավորման  միջավայր  և  ունենալով  հարուստ գրադարան,  ամենահայտնի  և  ֆունկցիոնալ  առումով  ամենահարուստն  է  մինչև այժմ  գոյություն  ունեցող  լուծումների  միջև:  Այնուամենայնիվ  «CA  Simulator»-ը, օժտված  լինելով  բազում  ֆունկցիոնալ  հատկություններով,  ոչ  միայն  լրացնում  է ամենահայտնի  լուծումներում  հանդիպող  բացթողումները,  այլ  և  ներառում  է,  բայց չի  սահմանափակվում  արդի  լուծումների  ֆունկցիոնալ  հնարավորություններով, ինչպիսիք են, օրինակ՝ բազմաօգտատեր միջավայրի ապահովումը գլոբալ ցանցում, եռաչափ  ցանցի  կառուցումը  և  տեսաբերումը,  ինչպես  նաև  տեսաբերվող  ցանցի դիտման  անկյունների  փոփոխությունները,  դիտարկվող  ցանցի  շերտերի  և ենթամասերի  առանձակի  տեսաբերումը,  մոդելի  ինչպես  կետային,  այնպես  էլ մասնակի փոփոխությունները պատահական  և կոնկրետ սկզբունքով, ֆիզիկական և ինֆորմացիոն բնութագրիչների հաշվարկը և այլն: ", "Նշենք  նաև,  որ    «CA  Simulator»  փաթեթի  միջոցով  կարելի    է  կատարել բազմաթիվ  տարանջատված  համատեղ  հետազոտություններ,  և  պահպանել հետազոտությունների  ընթացքում  կամայական  պահին  մոդելի  վիճակը՝  հետագա ինչպես  համատեղ,  այնպես  էլ  միանձնյա  հետազոտությունների  համար:    «CA Simulator»-ը ստեղծվել է օգտագործելով .Net միջավայրը և C# լեզուն, իսկ սերվերի տեղակայման  համար  ընտրվել  է  Microsoft  Azure-ը:  Իրականացման  ընթացքում պահպանվել  են  ՕԿԾ-ի  (OOP)  բոլոր  ստանդարտները  և  SOLID-ի  սկզբունքները, որոնք  խիստ  անհրաժեշտ  են  այնքանով,  որ  հնարավորություն  են  ընձեռում  ավելի դյուրին կերպով կատարել համակարգի ֆունկցիոնալ ընդլայնումը և հավելումը այլ բջջային ավտոմատերի մոդելներով: ", "Ատենախոսական  աշխատանքի  նպատակներից  մեկն  է  նախօրոք  հաշվի  առնել  կեղծ թիրախների հնարավոր  առկայությունը՝  այնուհետև դրանց  պատկերից զատելու(անտեսելու) նպատակով: ", "Այս  ենթավերնագրում  ներկայացվում  է  կեղծ  թիրախների  զատման  ընդհանուր մշակման  քայլերն  ու  հիմնական  որոշման  կանոնները  վերը  նշված  տեսահսկման մասնավոր համակարգերի համար  [53]: ", "տարբերակների ժամանակների համեմատական վերլուծություն: ", "Հիմնվելով  բաժին  2,1-ում  նկարագրված չափանի  խորանարդային ցանցերում  աստղային  ծածկույթները  նկարագրող  բանաձևի  վրա,  կատարվել  է չափանի խորանարդային ցանցերում ավազակույտի աբելյան մոդելի աշխատանքի զուգահեռացումը:  Ինչպես  նշվել  է  բաժին  1,2-ում,  արդեն  գոյություն  ունեն ավազակույտի    մոդելի  սիմուլացիայի  արագագործությանը  նպատակաուղված ծրագրային փաթեթներ: ", "Հեշ  արժեքների  ստուգման  անհաջողության  դեպքում  տվյալ  հանգույցի գործառույթի  ամբողջ  շղթան,  չեղարկման  հետ,  ազդանշան    է  ուղարկում  նույն հաջորդականությամբ։ ", "Ավազակույտի  աշխատանքի զուգահեռացման  արդյունքում որոշ հանգույցներ  պետք  է  փլուզվեն  միաժամանակ։  Առաջարկվող լուծումներում դիտարկվում  է  2  տարբերակ․  առաջինը,  որ  միաժամանակ  փլուզվող  գագաթները կարող են ունենալ ընդհանուր հարևաններ, և երկրորդ՝ չունեն ընդհանուր հարևան։ ", "Քննարկվող  երկրորդ  տարբերակի  առավելությունը  ի  տարբերություն  առաջինին այն  է,  որ  2  կամ  ավել  գագաթների  միաժամանակյա  փլուզումը  չի  հանգեցնի միևնույն  հանգույցին  միաժամանակյա  դիմումի  խնդրի,  որի  հետևանքով  մոդելի կայունացման ժամանակը կերկարեր։ ", "Դիտարկենք  զուգահեռացման  ալգորիթմներից  առաջինը։  Ավազակույտի մոդելների  օրինակներից  մեկը  պատկերված  է  Նկար  40-ում:  Այս  օրինակի ուսումնասիությունը  հնարավորություն է  տվել  կապ  տեսնել  և  ստեղծել ինտերվալային  ներկումների  և  ավազակույտի  մոդելի  միջև,  ինչպես  նաև դիտարկվել  են  ինֆորմացիոն  ինտերպոլացիա  տալու  համար,  որի  միջոցով հայտնաբերվել  են  ցանցում  ինֆորմացիա  տարածելու  արդեն  հայտնի  կարճագույն ճանապարհներ։ "], "source_docs_file": "Informatics and Computer Systems.json", "paragraph_source_docs": [1, 1, 0, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 1]}
{"source_docs_file": "Informatics and Computer Systems.json", "paragraphs": ["Հեշ  ֆունկցիան  համարվում  է  միակողմանի,  եթե  M  կամայական  երկարության հաղորդագրությունը  փոխակերպվում  է  ոչ  գծային  հաշվարկների  միջոցով  և  արդյունքում ստեղծում  է  h(M)  հեշավորումը,  որն  էլ    կարող  է  ունենալ  հաստատուն  կամ  փոփոխական երկարություն:  Այս  ֆունկցիաները  կարող  են  դասակարգվել  երկու  դասերի՝ գաղտնագրային և ոչ գաղտնագրային: Վերոհիշյալ ոչ գաղտնագրային  հեշ ֆունկցիաներն օգտագործվում են հիշողության և պահեստավորված տվյալների ինդեքսավորման համար։ ", "Գաղտնագրային  հեշ  ֆունկցիաների  կարևոր  հատկություններից  են  բախումը  և կայունությունը:  Հեշ  ֆունկցիայի  բախումը    երկու  տարբեր  հաղորդագրության  (M1  և  M2) հեշերի  արժեքների  համընկնումն  է,  երբ    h  (M1)  =  h  (M2):  Հեշ  ֆունկցիայի  բախումների բացահայտումն  իրականացվում  է  պատահական  մուտքային  արժեքների  փորձարկման եղանակով  [46,  47,  48]:  Կարևոր  է  նշել,  եթե  հեշավորված  տվյալի  իմացությամբ հարձակվողը    կարող  է  գտնել  M  հաղորդագրությունը,  որն  արտահայտվում    է  h  (M)  =  H բանաձևով,  ապա    հեշավորման  ֆունկցիան    կայունություն  ապահովող  չի  համարվում: ", "Այսպիսով,    նախօրոք  տրված  ելքի  համար  հաշվողական  առումով  անհնար  է  հաշվարկել այն  մուտքը,  որն  արտադրում  է  միևնույն  ելքը:  Նաև  կայունություն  ցածր  ցուցանիշի արդյունք  է  համարվում  հեշ  ֆունկցիայի  մուտքային  և  ելքային  արժեքների  իմացության դեպքում  մեկ  այլ  մուտքային  արժեք  գտնելու  հնարավորությունը,  որի  ելքային  հեշը կհամընկնի սկզբնական հաղորդագրության ելքային հեշի հետ: ", "Հեշ  ֆունկցիան    կարող  է  դասակարգվել  բանալիով  կամ  առանց  բանալու հեշավորման  ֆունկցիաների:  Բանալիով  հեշ  ֆունկցիան  ունի  լրացուցիչ  մուտք,  որն ընդունված  է  նշանակել  k  պարամետրով:  Արդյունքում  առանց  k-ի  իմացության  hk(M) հեշավորման աշխատանքն անհնար է իրականացնել։ Ինչպես նաև հաղորդագրության և ելքային  հեշի  իմացության  պարագայում  բանալու  որոնումը  հաշվողական  առումով նույնպես անհնար է: ", "Հեշավորման  ֆունկցիաների  մեծամասնությունը,  ինչպիսիք  են՝  MD4,  MD5,  MD6, SHA1  և  SHA2  հեշ  ֆունկցիաները,  օգտագործում  են  Merkle–Damgård  սխեման  և  բիթային գործողություններ  կատարում  մուտքային  հաղորդագրության  վրա՝      վերջնական  հեշ արժեքը ստանալու նպատակով [47, 49, 50]։ ", "Վանգը և Յուն ցույց են տվել, որ Merkle–Damgård սխեման անվտանգ չէ, քանի որ վերոհիշյալ պահանջների կատարումը չի ապահովում [50]։ Հեշ ֆունկցիան  նաև պետք է ունենա Շենոնի շփոթության և դիֆուզիայի կանոններին համապատասխան հեշավորման դրսևորում  [51]։  Շփոթությունն  ապահովվում  է  այն  դեպքում,  երբ  հաղորդագրության հեշավորած ելքի ցանկացած բիթ ստացվում է բանալու տարբեր մասերի օգնությամբ, ինչը դժվարացնում  է  բանալու  և  հաղորդագրության  կապի  բացահայտումը։  Միաժամանակ հեշավորած  ելքի  ցանկացած  բիթ  փոխելու  դեպքում  պետք  է  փոխվի  հաղորդագրության բիթերի կեսը և  պահպանվի հաղորդագրության և հեշ ֆունկցիայի համապատասխանությունը: ", "Քաոսային մեթոդները բավարարում են վերոհիշյալ կանոններին, սակայն քաոսային հեշ ֆունկցիաների մեծամասնությունը որպես ոչ անվտանգ սխեմա օգտագործում է Merkle– Damgård կամ այդ սխեմայի տարբերակը: ", "Վերոհիշյալ  դրույթների  հետ  մեկտեղ,  բազմաչափ  կամ  կիսապատահական քաոսային  արտապատկերումները  նվազեցնում  են  դրանց  կատարողականության ցուցանիշները  մասնավորապես՝  արագությունը  և  անվտանգությունը:  Այս  ֆունկցիաների վրա  հաջող  գրոհներ  են  իրականացվել  վերջիններիս  թույլ  գաղտնագրային  բնույթի պատճառով:  Վերոնշյալ  հատկություններով  հեշ  ֆունկցիան  կիրառվում  է  որպես գաղտնագրային արձանագրությունների, անվտանգ գործարքների և կրիպտոարժույթների հիմնական տարր: ", "Որոշ  կրիպտոարժույթներ  օգտագործում  են  Sha256  HashCash  ֆունկցիան,  որպես՝ այսպես  կոչված  «աշխատանքի  ապացույց»,  որն  ապահովում  է  հանգույցների  կատարած գործառույթների  անվտանգությունը։  HashCash-ն  օգտագործվում  է  նաև  սպամերի կանխարգելման  համար՝    ստիպելով  գրոհող  կողմին  ծախսել  որոշակի  ժամանակ ցանկացած  հաղորդագրության և էլեկտրոնային նամակին կից ուղարկվող հեշի ստեղծման հաշվարկների  վրա:  Եթե  հաղորդագրությունը  կամ  էլեկտրոնային  նամակը  ստացվում  է առանց հեշի, կամ ստացված հեշը վավերականացում չի ացնում, ապա այն մերժվում է և համարվում՝  սպամ:  HashCash-ը  Proof-of-Work  (POW)  ֆունկցիայի  իրականացումն  է,  որը հայտնի  է  նաև,  որպես  աշխատանքային  ֆունկցիա,  հետաձգման  ֆունկցիա  կամ պայքարի համար: Այս ֆունկիցայի գաղափարը այն է, որ նախքան հարցում ուղարկելը այդ հարցմանը պետք է կցել լուծված որոշակի հաշվողական խնդիր, որն այնուհետև հնարավոր է  վավերացնել  հարցումն  ընդունող  կողմում:  Այսպիսով,  սահմանափակ  հաշվողական ռեսուրսների  պատճառով  վերոհիշյալ  հարցումների  ընդհանուր  քանակը,  որը  կարող  է ուղարկել  մեկ  համակարգիչը,  բավականին  նվազում  է  և  դառնում  սահմանափակ:  Այս լուծումն  օգտագործվում  է  էլեկտրոնային  փոստով  ուղարկվող  սպամերի  քանակը նվազեցնելու համար: ", "Գոյություն  ունեն  տարբեր  POW  ֆունկցիաներ,  և  անհրաժեշտ  է  դիտարկել  ստորև թվարկված այդ ֆունկցիաների ընդհանուր բնութագրերը. •  POW ֆունկցիաները պետք է լուծեն հաշվողական խնդիրներ, որոնց լուծման համար պահանջում են որոշակի քանակությամբ ռեսուրսներ։ ", "•  Պետք  է  բացառվի  որևէ  լուծման  գոյությունը,  որը  թույլ  կտա  գեներացնել արդյունքներն  ավելի  արագ  առանց հստակ որոշված հաշվարկների իրականացման: ", "•  Կատարած հաշվարկների լուծման արդյունքը պետք է հնարավոր լինի հեշտությամբ և արագ վավերացնել, քանի որ այն կատարվելու է սերվերային միջավայրում, որտեղ վավերացում պահանջող հարցումների քանակը կարող է բավականին շատ լինել: ", "•  POW  ֆունկցիայի  լուծման  արդյունքում  առաջացած  ելքային  տվյալները  պետք  է ունենան  փոքր  ծավալ,  քանի  որ  այն  պետք  է  փոխանցվի  համացանցով  այլ վերջնակետ, որտեղ կկատարվի ստուգումը: ", "•  POW  ֆունկցիայի լուծման  դժվարությունները  պետք  է լինեն  հնարավորինս կարգավորվող: ", "POW  ֆունկցիաների  առավել  տարածված  տեսակն  օգտագործում  է  պրոցեսորի հաշվողական  ռեսուրսները:  Բացի  այդ,  առաջարկվել  են  նաև  POW  այլ  ֆունկցիաներ, ինչպիսիք  են  հիշողության  ֆունկցիաները:  Այս  տեսակի  ֆունկցիաները  ավելի  դժվար  է իրացնել,  քանի  որ  հիշողության  ծանրաբեռնման  համար  անհրաժեշտ  ժամանակը  ավելի շատ  է,  քան  CPU  ծանրաբեռնման  ժամանակը։  Նաև  հիշողության  ֆունկցիաների գործածումը բարդություն  է ստեղծում ցածր պարամետրերով համակարգիչների կիրառման դեպքում:  Հաշվի  առնելով  վերոհիշյալ  թերությունները՝ ատենախոսությունում նախընտրությունը    տրվել  է  պրոցեսորի  հետ  աշխատող  POW  ֆունկցիաներին,  որն այսուհետև կնշվի որպես դասական POW ֆունկցիաներ։ ", "Դասական POW ֆունկցիաների լուծման խնդիրները հիմնված են NP որոնողական խնդիրների վրա, երբ խնդրի լուծման համար պետք է կատարվի որոնում, մինչդեռ սերվերը պետք  է  ստուգի  միայն  մեկ  առաջարկված  լուծում:  Սովորաբար  վերոնշյալ  խնդիրների բնույթից  ելնելով  լուծման  համար    անհրաժեշտ  հաշվողական  գործառույթըկարող  է իրականացվել միայն վիճակագրականորեն: ", "Կրիպտոարժութների  գործառույթները կատարվում են ցանցում  առկա հանգույցների  հաստատմամբ,  որը  կատարվում  է  ստացված  տվյալների  հեշավորման  և ցանցի  մյուս  հանգույցներին  ուղարկելու  միջոցով  [52]:  Հեշավորման  հզորությունը,  որը չափվում  է  GH/s-ով,  օգտագործվում  է  կրիպտոարժութային  ցանցի  հեշավորման արագության  չափման  համար:  Արագագործ  ցանցերում  ապահովվում  է  առավել  արագ գործառույթների իրականցում, որը պայմանավորված է մասնակցող հանգույցների թվով և արագ հաշվարկմամբ: Վերոհիշյալ հեշ ֆունկցիայի հիմնական թերություններն են՝ բանալու բացակայությունը և զուգահեռացման իրականացման բարդությունը: Ստեղծվել են տարբեր Sha256-ի իրականացումներ զուգահեռացման ապահովման նպատակով, բայց արդյունքում միայն  հաջողվել  է  տվյալները  բաժանել  մի  քանի  մասի  և  հեշավորել  այդ  մասերը՝ գործածելով ամեն մասի համար Sha256 ծրագրի առանձին օրինակ: ", "Իրականացման պարզության և միաչափ քաոսային արտապատկերումների  բարդ վարքագիծի  շնորհիվ  քաոսային  հեշ  ֆունկցիաները  լայն  տարածում  են  գտել:  Լոգիստիկ արտապատկերումը  նկարագրած  արտապատկերումներից  մեկն  է,  որը  սահմանվում  է ստորև բերված բանաձևով: ", "(3.2) 𝑋𝑋𝑛𝑛+1 = 𝐿𝐿𝑟𝑟(𝑋𝑋𝑛𝑛) = 𝑓𝑓 ∙ 𝑋𝑋𝑛𝑛 ∙ (1 − 𝑋𝑋𝑛𝑛) Չնայած այս արտապատկերումն ունի (0, 4] միջակայք r պարամետրի համար, այն քաոսային  վարքագիծ  է  դրսևորում  միայն  [3.57,  4]  միջակայքում,  և  նույնիսկ  այս միջակայքում  արտապատկերումը  որոշ  չափանիշների  դեպքում  կորցնում  է  իր  քաոսային վարքագիծը: Նկ. 13-ում ցույց է տրված երկատման դիագրամը: ", "Նկ. 13. Լոգիստական արտապատկերման երկատման դիագրամը Միաչափ  քաոսային  արտապատկերումների  այլ  օրինակներ  են  սինուսային արտապատկերումները,  որոնք  լոգիստական  արտապատկերման  հետ  ունեն  միանման դրսևորում,  մասնավորապես  սինուսային  արտապատկերումն  իր  քաոսային  վարքագծում ունի լոգիստակաjին  արտապատկերմանը նման երկճյուղավորման դիագրամ և  միևնույն խնդիրները: Այս խնդիրները լուծելու համար Զհոուն և մյուսներն առաջարկել են քաոսային համակարգ՝  երկչափ  արտապատկերումներով,  որոնք  ընդունված  է  նշանակել  LS պարամետրով [53,54]: Գաղտնագրային համակարգերում ցանկացած ոչ հավասարաչափ բաշխում  պատահական  թվերի  գեներատորով  կարող  է  օգտագործվել  գրոհների  կողմից ծածկագրի  կամ  ալգորիթմի  բացահայտման  համար՝  օգտագործելով  դիֆերենցիալ գրոհները: ", "Բետա  բաշխումների  համար,  որտեղ  α=β-ի  և առավելապես  բաշխված արժեքները գտնվում  են  [0,  0.1)  և  (0.9,  1]  միջակայքում,  հեշտ  է  գրոհման  ենթարկել  առաջարկված մեթոդը:  LS  արտապատկերման  մեկ  այլ  թերությունն  այն  է,  որ  սինուսոյիդային արտապատկերումից  ելքի  ստացումը  լոգիստական  արտապատկերման    համեմատ, կատարվում է ավելի դանդաղ: ", "Նկ. 14. LS արտապատկերման երկատման դիագրամը Մեկ  այլ  լուծում    ներկայացվել  է    Սան  Յում  և  Սրիչավենգսափի  կողմից  [54]:  Այն հիմնված  է սինուսոիդային  ոչ  գծայն  քաոսային  համակարգի  ստեղծման  վրա: ", "Բազմապատկման,  գումարման  և  հանման  գործողությունները  սովորաբար  հեշտությամբ կատարում է  պրոցեսորը ցածր մակարդակում, բայց եռանկյունաչափական գործողությունները,  ինչպիսիք  են  sin  և  cos,  չեն  իրականացվում  պրոցեսորի  կողմից ուղղակի  հրամաններով,  այլ  օգտագործում  են  գրադարաններ,    որոնք  իրենց  հերթին օգտագործում  են  ցածր  մակարդակի  գործողություններ:  Հեշ  ֆունկցիաներում  այսպիսի գործողությունների կիրառումը զգալիորեն նվազեցնում է հեշավորման արագությունը: Եթե բազմապատկման գործողության համար անհրաժեշտ է  4 ժամանակային ցիկլ, ապա sin գործողության համար այն կարող է հասնել 90 – 100 ժամանակային ցիկլ: ", "Իրականացման  պարզությունը,  պատահական  դրսևորումը,  արագությունը  և անվտանգությունը  հեշ  ֆունկցայի  կարևոր  բնութագրերից  են,  որոնց  միաժամանակյա ապահովումը  հեշ ֆունկցիայում  բարդ խնդիր է։ ", "Քաոսային  հեշ  ֆունկցիաները  կարելի  է  դասակարգել  տարբեր  դասերի՝  կախված իրենց քաոսային սխեմայից, հաշվարկների զուգահեռացման կարողությունից և այլն: Բայց հաշվի  առնելով,  որ  քաոսային  հեշ  ֆունկցիաները  հիմնված  են  քաոսային արտապատկերման վրա, հեշտությամբ կարելի է դասակարգել [55, 56]. •  արտապատկերման վրա հիմնված պարզ հեշ ֆունկցիաներ, •  արտապատկերման վրա հիմնված բարդ հեշ ֆունկցիաներ, •  նոր քաոսային համակարգի վրա   հիմնված հեշ ֆունկցիաներ, •  զուգահեռացում  ապահովող  և  բարդ  կառուցվածք  ունեցող  քաոսային  հեշ ֆունկցիաներ, •  քաոսային արտապատկերման միջոցով ձևափոխված դասական հեշ ֆունկցիաներ: ", "Արտապատկերումների  վրա  հիմնված  պարզ  քաոսային  հեշ  ֆունկցիաների մեծամասնությունը  մյուս  դասերի  համեմատ  օգտագործում  է  պարզ  ալգորիթմ՝  միաչափ քաոսային  արտապատկերումներով:  Այս  դասի  որոշ  հեշ  ֆունցիաներում  կիրառվում  է տենտային արտապատկերում, որի ելքային շարքը ստացվում է Merkle–Damgård սխեմայով: ", "Տենտային  արտապատկերման  խնդիրները,  ինչպիսիք  են  ոչ  քաոսային  մուտքային միջակայքերը,  նույնպես  առկա  են  այս  դասի  հեշ  ֆունկցիաներում:  Գոյություն  ունեն  նաև տենտային արտապատկերումներ XOR սխեմայով: Ցանկացած հեշ ֆունկցիա, որն ունի 256 բիթից  փոքր  ելքային  չափս,  անվտանգ  չէ:  Վերոհիշյալ  հեշ  ֆունկցիան  ունի  128  բիթ երկարությամբ  ելքային  հեշ  արժեք,  որը  հնարավոր  է  դարձնում  գրոհողի  համար  գտնել հնարավոր  բախումները  կամ  հաշվարկել  արտապատկերումը  264  հաշվողական բարդությամբ [57]: ", "Արտապատկերման  վրա  հիմնված  բարդ  հեշ  ֆունկցիաներն  օգտագործում  են բազմաչափ  քաոսային  համակարգեր  իրենց  հեշավորման  ալգորիթմում:  Այս  դասին պատկանող քաոսային ֆունկցիաները  պահանջում են  առավել բարձր արտադրողականություն,  որը  կապված  է  մատրիցների  բազմապատկման  և  գումարման գործողությունների  հետ,  և  մեծ  արտապատկերումների  դեպքում  առաջանում  են  նաև հիշողության հետ կապված խնդիրներ: ", "Հեշ  ֆունկցիաները,  որոնք  կիրառում  են նոր  քաուսային  համակարգերը, ներկայացված են [54]- ում: Այն հեշավորման համար օգտագործում է նախորդ Hi արժեքը և հաղորդագրության  i-րդ  բլոկը։  Hi  արժեքը  հաշվարկվում  է  յուրաքանչյուր  փուլի  վերջում հաջորդ  իտերացիայի  համար՝    օգտագործելով  ոչ  գծային  փոխակերպում:  Այս  հեշ ֆունկցիան չի ապահովում բազմահոսքայնությունը, իսկ բանալին օգտագործվում է որպես թվային  արժեք  ASCII  փոխարեն:  Չնայած  Merkle-Damgård  փոփոխված  սխեմային՝ ներկայացված հեշ ֆունկցիան չունի արագություն և համապատասխան անվտանգություն: ", "Այս  դասին  է  պատկանում  նաև  մեկ  այլ  օրինակ,  որն  օգտագործում  է  սինուսոյիդային  ոչ գծայնությունը:  Զուգահեռացման  բացակայությունը,  ցածր  հեշավորման  արագությունը    և քաոսային  համակարգի  խնդիրները,  որոնք  արդեն  նկարագրվել  են,  համարվում  են  այս մեթոդի  հիմնական  թերությունները:  Համաձայն  հեղինակների՝  5,000  մուտքային հաղորդագրությունների  համար  հեշավորված  ելքերի  վրա  հայտնաբերվել  է  միևնույն արժեքով 509 ASCII սիմվոլ, ինչը բավականին բարձր ցուցանիշ է և կասկածի տակ է դնում հեշ ֆունկցիայի անվտանգությունը: ", "Գոյություն ունեն նաև նեյրոնային ցանցերի հիման վրա աշխատող քաոսային բարդ կառույցներ: Քաոսային նեյրոնային ցանցն  օգտագործում է քաոսային արտապատկերումը վերջնական արդյունքի ստացման համար: Խիաոյի կողմից առաջարկված հեշ ֆունկցիան, որն  օգտագործում  է  երկշերտ  քաոսային  նեյրոնային  ցանց,  հեշտությամբ  գրոհման  է ենթարկվել [56]։ ", "Լիի Դենգի կողմից առաջարկված ֆունկցիաների կառուցվածքն ավելի բարդ է Merkle– Damgård սխեմայի համեմատ՝ նպատակ ունենալով ապահովել ավելի մեծ անվտանգություն դրանց բարդ կառուցվածքի և քաոսային վարքագծի շնորհիվ: Նրանց կողմից առաջարկվել է  զուգահեռ  հեշավորման  սխեման՝  ոչ  գծային  քաոսային արտապատկերման օգտագործմամբ:  Այս  սխեմայի  վիճակագրական  թեստերը  և  գաղտնագրային վերլուծությունը  ցույց  են  տալիս  բավական  բարձր  արդյունքներ  տարբեր  մուտքային տվյալների  համար:  Այս  մեթոդով  առանձին  հոսքերը  հաշվարկում  են  միջանկյալ  Hi արժեքները  հեշավորելով  առանձին  1024  բիթային  բլոկներ,  որոնք  հետագայում միավորվում  են  XOR-ով  վերջնական  H  արժեքի  ստացման  համար:  Ըստ  Շենոնի՝ անվտանգության  առումով  առաջանում  է  թերություն  կապված  ֆունկցիայի  մուտքի  և վերջնական ելքի միջև [51]։ Այս թերության պատճառը կապված է MITM գրոհման հետ, որը հարձակվողին  թույլ  է  տալիս  կոտրել  հեշ  ֆունկցիան,  տրոհել  մասերի  և  հաշվարկել միջանկյալ  տվյալները  առանց  հաղորդագրությունների  ամբողջական  հաշվարկման անհրաժեշտության:  Այսպիսով  այս  հեշ  ֆունկցիան  չունի  բավարար  զգայունություն մուտքային  հաղորդագրության  նկատմամբ  և  ունի  բախումների  բարձր  ցուցանիշ: ", "Գոյություն ունեն նաև այնպիսի հեշ ֆունկցիաներ, որոնք օգտագործում են պատահական փոխանակման ցանց, որն իր պատահական վարքագիծը ստանում է ոչ գծային քաոսային արտապատկերմամբ:  Փոխանակման  ցանցի  նախամշակումից  հետո  կատարվում  է եռաքայլ  մշակում։  Առաջին  փուլում  օգտագործվող  քաոսային  արտապատկերումը  հեշ ֆունկցիային  թույլ  է  տալիս  ապահովել  բարձր  կատարողականություն  և  գաղտնագրային վերլուծություն: Այս ֆունկցիան օգտագործելով չորս առանձին հոսքեր, ապահովում է բարձր հեշավորման  արագությունը:  Այն  կարող  է  աշխատել  ինչպես  մեկ  հոսքով,  այնպես  էլ  մի քանի  հոսքով՝  զուգահեռաբար:  Անվտանգությունը  և  հեշավորման  արագության պարամետրերի  կարգավորման  բացայկությունը  համարվում  է  նշված  մեթոդի  հիմնական թերությունը: ", "Հեշ  ֆունկցաիների  վերաբերյալ  կատարված  այլ  հետազոտություններում սովորական  հեշ  ֆունկցիաների  անվտանգության  բարելավման  համար  առաջարկվել  է քաոսային  արտապատկերումների  օգտագործում:  Վերոնշյալ  հեշավորման  ալգորիթմը SHA հեշ ֆունկցիայի փոփոխված տարբերակն է,  որը նույնպես հեշտությամբ ենթարկվել է գրոհման,  և  համարվում  է  ոչ  անվտանգ  հեշավորման  սխեմա  [58]:  Քաոսային  հեշ ֆունկցիային  վերաբերող  աշխատությունները  հիմնականում  ուղղված  են  ելքային  հեշ արժեքների  վիճակագրական  վերլուծության,  գաղտնագրային  վերլուծության  և պատահական  վարքագծի  վրա,  մինչդեռ  հեշ  ֆունկցիայի  ծրագրային  լուծումները, ինչպիսիք են կրիպտոարժույթները և սպամերի հայտնաբերումը, պահանջում են ավելի մեծ արագություն և անվտանգություն: ", "վերահսկման հեշ ալգորիթմը Հետազոտված  քաոսային  համակարգը (Դինամիկ  քաոսային  համակարգը) օգտագործում է α և β պարամետրերը [0, 1]  միջակայքում: Այս պարամետրերը ստեղծում են  քաոսային  համակարգերի  դասակարգ,  որը  նշանակվում  է  Cα,β:  Միաչափ  քաոսային լոգիստիկ արտապատկերման համար այս համակարգը նշանակվում է Cα,β (wα, wβ, r, Xn), որտեղ  r-ը  լոգիստիկ  արտապատկերման    մուտքային  չափանիշն  է,  Xn-ը  ուղեծիրն  է,  իսկ մյուս երկու չափանիշը՝ wα և wβ α և β փոփոխականի կշիռն են: Առաջարկված համակարգն օգտագործում է մոդուլ 1, որպեսզի վերականգնի համակարգի ելքը դեպի   (0, 1)  միջակայք: ", "Հավասարում (3.3)-ը  նկարագրում  է  այս  համակարգի  օրինակը՝ լոգիստիկ արտապատկերումը ընդունելով որպես հիմք: ", "𝑋𝑋𝑛𝑛+1 = 𝐶𝐶𝐿𝐿𝛼𝛼,𝛽𝛽�𝑛𝑛𝛼𝛼, 𝑛𝑛𝛽𝛽, 𝑓𝑓, 𝑋𝑋𝑛𝑛, 𝑓𝑓� = �𝑛𝑛𝛼𝛼𝛼𝛼�𝐿𝐿(𝑓𝑓, 𝑋𝑋𝑛𝑛) + 𝑛𝑛𝛽𝛽𝛽𝛽𝐿𝐿(16 − 𝑓𝑓, 𝑋𝑋𝑛𝑛)�𝑚𝑚𝑓𝑓𝑛𝑛1� = �𝑛𝑛𝛼𝛼𝛼𝛼�𝑓𝑓𝑋𝑋𝑛𝑛(1 − (3.3) 𝑋𝑋𝑛𝑛) + 𝑛𝑛𝛽𝛽𝛽𝛽(16 − 𝑓𝑓)𝑋𝑋𝑛𝑛(1 − 𝑋𝑋𝑛𝑛)��𝑚𝑚𝑓𝑓𝑛𝑛1 Առաջարկված  համակարգը  վեցը  մեկին  արտապատկերում  է:    wα,  α,  wβ  և  β չափորոշիչների ֆիքսումը փոխում է այս արտապատկերը << երկուսը մեկին>> քաոսային արտապատկերման: Պարամետրերի ցանկացած համադրության ֆիքսումը կարող է փոխել այս արտապատկերումը՝   հաշվի առնելով wα×α և wβ×β միջակայքերը: Տվյալ հեշավորման ալգորիթմը հավասարաչափ բաշխում ունի r և Xn բոլոր հնարավոր պարամետրերով: ", "Օպտիմալ  բաշխումը  գաղտնագրային  պատահական  գեներատորի  համար համարվում  է  հավասարաչափ:  Ելքային  շարքերով  ոչ  հավասարաչափ  բաշխումը հանգեցնում  է  նրան,  որ  հարձակվողն  ունենում  է  պատահական  թվերի  գեներացման վիճակագրություն [59]: ", "Առաջարկված  հեշ  ֆունկցիայի  մոդելում  տվյալների  ցանկացած  4  բայթ փոխակերպվում է 32 բիթային տասնորդական արժեքի, այսինքն դիտարկում են չմշակված այնպիսի տվյալներ, ինչպիսիք են տասնորդական արժեքների 32 բիթային բառերը: ", "Pad ֆունկցիան M-ը ընդունում է որպես մուտքային տվյալներ և բաժանում դրանք 32 բիթային բլոկների: Եթե վերջին բլոկն ունենում է  32-ից պակաս բիթ, սկզբում ավելացվում է ‘1’ արժեքի բիթը, այնուհետև ավելացվում են ‘0’ արժեքի բիթերը: Արտադրված բլոկները, որոնք  նշանակվում  են  Mi-  ով,  իրենցից  ներկայացնում  են  XOR՝  պարզ  թվեր  առաջին  32 բիթերով: ", "Վերոհիշյալ  հեշ  ֆունկցիայի  բլոկ-սխեման  ներկայացված  է  նկ.  15-ում:  Գաղտնի բանալին, որը նշանակված է K-ով, ունի 256 բիթ երկարություն և ազդում է բոլոր ներքին ֆունկցիաների  վրա,  բացառությամբ  Pad  և  Distribute:  K-ի  սկզբնական  արժեքը իտերացիայի յուրաքանչյուր փուլում փոփոխվում է KeyMutate ֆունկցիայի օգնությամբ: Այս ֆունկցիան  վերջին  փուլի  համար  ընդունում  է  K  և  Distribute  ելքային  տվյալները՝  որպես մուտքային տվյալներ և արտադրում է նոր փուլային բանալի, որը նշանակվում է RKj –ով, որը  ցույց  է  տալիս  գաղտնի  բանալին  իտերացիայի  j-րդ  փուլի  համար:  SortBlocks ֆունկցիան  ընդունում  է  RKj  և  XOR    արժեքները:  Այս  ֆունկցիան  գեներացնում  է  8 յուրատեսակ  թվային  արժեքներ,  որոնք  գտնվում  են  [0,  7]  միջակայքում:  Այս  արժեքները ցույց  են  տալիս  ֆունկցիաների  կարգավորվածությունը  ֆունկցիաների  զանգվածում: ", "Ֆունկցիաների  զանգվածը  հիմնական  գործառույթը  ստացված  թվային  արժեքին համապատասխան  ճիշտ  ֆունկցիայի  տրամադրումն  է:  Ֆունկցիաների  դինամիկ զանգվածի համար մշակվել է 8 յուրատեսակ ֆունկցիա: Արժեքները, որոնք ներկայացված են  աղյուսակում,  a,  b,  c,  d,  e  և  f  ցույց  են  տալիս  համապատասխան  Mi  արժեքները յուրաքանչյուր fi-ի  համար  ըստ  իտերացիաների:  Այս  քաոսային  փոխակերպումն ապահովում է փոխադարձ կապ բոլոր արժեքների միջև: ", ": ", "XOR M: մուտքագրման հաղորդագրություն Pad (M) Բաշխում (Ml) Բլոկ Բանալիի փոփոխում Թույլ կապեր Ուժեղ կապեր փոփոխում (K) HSum(Hl) H: վերջնարդյունք հեշ արժեք Նկ. 15. Հեշ ֆունկցիայի բլոկ-սխեման Նկ.  16-ում  ներկայացվել  է  fi  հաշվարկման  սխեման:  Իտերացիայի  յուրաքանչյուր փուլի համար ցանկացած fi ֆունկցիա ընդունում է RKj և դրա հետ կապված՝ Mi արժեքները և հաշվարկում դրանց համապատասխան a, b, c, d, e և f պարամետրերը: Այս հաշվարկը զբաղեցնում  է  6  ներքին  փուլեր,  իսկ  հաշվարկի  վերջում  ևս  մեկ  փուլ՝  օգտագործելով  Zi ֆունկցիաները, և տալիս  է IV –ի համապատասխան արժեքը: ", "Բոլոր միջանկյալ արժեքները և IV վեկտորը փոխադարձաբար ազդում են միմյանց վրա՝ օգտագործելով DCS և XOR գործողությունները: Բացի այդ, յուրաքանչյուր իտերացիայի վերջում ձևավորվում է կապ այս ֆունկցիաների արժեքների  միջև, և արժեքները փոխանցվում են յուրաքանչյուր հարևանին: Թույլ կապեր են համարվում  այն f արժեքները, որոնք XOR են կատարած երկու հարևաների  արժեքներով,  իսկ  ուժեղ  կապերը  նշանակում  են,  որ  եթե  fi  ֆունկցիայի  f արժեքը  մեծ  է  fi+1  ֆունկցիայի  f  արժեքից,  ապա  դրա  բոլոր  արժեքների  հանդեպ կատարվում  է  XOR  գործողություն  fi+1-ի  համապատասխան  արժեքներով,  հակառակ դեպքում այդ գործողությունը կատարվում է fi և fi-1 -ի միջև: Այս սխեմայում յուրաքանչյուր ֆունկցիայի համար օգտագործվում է երկու հարևան արժեքները և 8 փուլ, որոնց միջոցով կատարվում  է  ֆունկցիաների  միջև  արժեքների  փոխանցում:  Յուրաքանչյուր  ֆունկցիա գործարկվում  է  առանձին  հոսքի  մեջ,  իսկ  ցանկացած  փուլի  վերջում  արժեքները միավորվում են  թույլ և ուժեղ կանոնների օգնությամբ: ", "Այս  ընթացակարգը  տևում  է  8  փուլ,  և  հաշվարկման  վերջում  mutate  ֆունկցիան ստեղծում  է  նոր  փուլային  բանալու  վեկտոր:  Յուրաքանչյուր  իտերացիայի  սկզբում  RKj փոխանցվում է SortBlocks, և այն փոխակերպվում է XOR-ի օգնությամբ՝ գտագործելով Mi բոլոր արժեքները, որոնք նախատեսված են SortBlocks ֆունկցիայի մուտքային տվյալների ստեղծման համար: Կատարվում է ֆունկցիաների նոր տեսակավորում, և սկսվում է հաջորդ իտերացիան:  Բոլոր  իտերացիաների  վերջում  HSum  ֆունկցիան  ընդունում  է fi ֆունկցիաների ելքային արժեքները և արտադրում է հեշի ելքային արժեքը: ", "DCS Zi lVi XOR lVi lVi Նկ. 16. fi ֆունկցիաների կառուցվածքը Հեշ  ֆունկցիայի  կատարողականությունը  իրականացվել    է  ըստ  վիճակագրական վերլուծության, արագության և գաղտնավերլուծության: Bi համարվում է երկու արժեքի միջև Հեմմինգի  հեռավորությունը:  γ  և  δ  երկու  տասնվեցերորդական  արժեքի  համար  դրանք ունեն  զրո ,  եթե  դրանք  չունեն  հավասար  երկուական  արժեք  միևնույն  դիրքում:  Այս պարամետրը  կարող  է  հաշվարկվել  տարբեր  արժեքների  համար՝  հաշվարկելով  դրանց 𝐵𝐵𝑖𝑖 բոլորի  միջև  Հեմմինգի  հեռավորությունը  (3.4  բանաձև)[60],  որոնց  միջին  արժեքը  կլինի Հեմմինգի միջին հեռավորության արժեքը  (N իտերացիաների քանակն է ) (3.4) Ելքային  արժեքների  տարբերության  տոկոսային  քանակը  հաշվարկվում  է 𝑩𝑩 = 𝑵𝑵 𝑵𝑵 ∑ 𝑩𝑩𝒊𝒊 𝒊𝒊=𝟏𝟏 հավասարում (3.5)-ում, որը ցույց է տալիս Հեմմինգի հեռավորության հավանականությունը: ", "Հեշ  ֆունկցիայի  համար  այս  հավանականությունը  պետք  է  մոտ լինի  50%-ին: ", "Հավասարում (3.5)-ում l-ը նշանակում է հեշավորման ելքի երկարությունը: ", "(3.5) 𝑩𝑩 𝒍𝒍 � ×𝟏𝟏𝟎𝟎𝟎𝟎% 𝑷𝑷 = � Վիճակագրական  վերլուծությունը:  Փոքր  փոփոխություններով  հինգ  տողերը  S տողից  և  դրանց  հետ  կապված  Bi՝-ը  ընդդեմ  S-ի,  ցույց  է  տրվել  աղյուսակ  10-ում: "], "paragraph_source_docs": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}
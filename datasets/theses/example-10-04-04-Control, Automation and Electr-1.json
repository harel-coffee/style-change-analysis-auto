{"paragraph_source_docs": [2, 1, 1, 4, 3, 2, 2, 1, 2, 1], "paragraphs": ["  Դիտարկման  ավարտի չափորոշիչի  ընտրություն:  Դա  կարող  է լինել դիտարկումների  ֆիքսված  քանակ,  կամ  դիտարկումները  կարող  են  կատարվել, քանի  դեռ  դրանք  փոքրացնում  կամ  զգալիորեն  փոքրացնում  են  հատումների ընդհանուր քանակը: ", "SIE ԱՀ-ում  մեկ այլ կարևոր խնդիր է կիրառվող ԾՕ-ների քանակի լավարկումը: ", "Զրոյական և անկյունագծային  ԾՕ-ները (Տես՝ նկ. 2.17, նկ. 2.18) հիմնական  ԾՕ-ներ են հանդիսանում  այն  հիշողության  նմուշների  դեպքում,  որոնց  հիշողության  բջիջների զանգվածի երկրաչափական տեսքը քառակուսի է (այսինքն՝ զանգվածում տողերի (#PR) և սյուների (#PC) քանակները համընկնում են` #PC = #PR) կամ էլ մոտ է քառակուսիին: ", "ԲՎՀ-ում  ներկառուցված  հիշողությունները  հնարավոր  է  թեստավորել  հաջորդական և զուգահեռ ռեժիմներում:  Հաջորդական  թեստավորումը բավականին  ժամանակատար գործընթաց է:  Հետևաբար,  հիշողության  ՀՆԹՅ-ը  պետք է  նաև  ունենա հիշողությունները զուգահեռ թեստավորելու հնարավորություն: ", "ստանդարտ դեվիացիա՝ Ինչպես  նկարագրված  էր  ASK  մոդուլացման  հատվածում  2ASK  ազդանշանի ակնթարթային  ամպլիտուդան  ունի  հավասար  մեծությամբ  և  հակառակ  նշաններով երկու  արժեք:  Այստեղից  հետևում  է,  որ  ակնթարթային  ամպլիտուդայի  բացարձակ արժեքը  հաստատուն  մեծություն  է  և  այս  ազդանշանը  չի  պարունակում  բացարձակ ամպլիտուդաին տեղեկատվություն: ", "Վատագույն դեպքում տվյալ ալգորիթմի բարդությունը, ինչպես արագ տեսակավորման ալգորիթմի  դեպքում,  համարվում  է  քառակուսային,  սակայն  միջինում  ալգորիթմը պահանջում է ընդամենը O(|R2| log|R2|) գործողություններ: ", "Հաջորդ մեթոդի համաձայն՝ ալգորիթմը ամեն քայլում վերցնում է տարրերից մեկը և փորձում  այն  դնել  այնպիսի  տեղում,  որ  ստացվի  հատումների  փոքրագույն  թիվ:  Դրա համար  ալգորիթմը  փորձում  է  տարրը  տեղադրել  յուրաքանչյուր  հնարավոր  տեղում    և - 60 - հաշվում է ստացված հատումների քանակը: Քանի որ տարրը մի դիրքով տեղափոխելիս շղթաների  հատումների  քանակի  փոփոխությունը  կարելի  է  հաշվել  հաստատուն ժամանակում  (օգտագործելով  լրացուցիչ  հավաքված  ինֆորմացիա),  ապա  ալգորիթմն ունի  քառակուսային  բարդություն  և  իր  էությամբ  նման  է  ներդրումներով տեսակավորման մեթոդին (insertion sort)[57, 62, 63]: ", "գ. - 83 - փորձնական տվյալները SIV-ի ԱՀ-ը օգտագործվել է և, ներկայումս շարունակվում է օգտագործվել, որպես Synopsys ընկերության կողմից նախագծվող բոլոր  տեսակի հիշողության կոմպիլյատորների  կառուցվածքային  տարրերի  խճողումները  նկարագրող՝  scramble.tcl, ֆայլերի ճշտությունը ստուգող հուսալի գործիք:  SIV-ի ԱՀ-ը հաջողությամբ կիրառվում է  մեկ և երկու պորտեր ունեցող, մեծ արագագործության և բարձր խտության, տարբեր չափսերի նմուշների գեներացումը ապահովող հիշողության կոմպիլյատորների համար (800-ից ավելի): ", "Գործնականում  ավելի  լայն  կիրառություն  ունեն  բարիկենտրոնի  և    միջին  արժեքի վրա  հիմնված  մեթոդները[64,  65]:  Բարիկենտրոնի  մեթոդի  դեպքում  v  ∈  R2        տարրի կոորդինատը  որոշվում  է  որպես  R1  ռանգին  կապած  բոլոր  տարրերի  կոորդինատների միջին թվաբանական. avg(u) = , որտեղ  N(u) :=  {v | (u,v) ∈ W}։               (2.8) Եթե  վերադասավորելուց  հետո  որոշ  տարրերի  կոորդինատներ  համընկնում  են, ապա  դրանք  տեղադրվում  են  նվազագույն  հեռավորության  վրա՝  կամայական հերթականությամբ:  Այս  մեթոդի  ամենահայտնի  տարբերակը  միջին  արժեքի  մեթոդն  է [66],  երբ  միջին  թվաբանականի  փոխարեն  օգտագործվում  է  x1  ռանգի  միջին  հարևանի կոորդինատը,  այսինքն՝  եթե  u1,  u2,  …,  um  ∈  R1  v  տարրին  հարևան  տարրերն  են,  ընդ որում,  x1(u1)  <  x1(u2)  <  …  <  x1(um),  ապա  x2(v)  =  med(v)-ն  որոշվում  է  որպես  x1(uavg):  Այն դեպքում,  երբ  med(v)  =  med(u),  և  v-ն  ունի  կենտ  աստիճան,  իսկ  u-ն՝  զույգ,  ապա  v-ն տեղադրվում է  u-ից  առաջ։ Իսկ եթե  աստիճանների  զույգությունը համընկնում է,  ապա հերթականությունը  որոշվում  է  կամայականորեն:  [67]  աշխատանքում  ցույց  է  տրված, որ  միջինները  կարող  են  գտնվել  O(|N(u)|)  ժամանակում,  ինչը  այս  մեթոդը  դարձնում  է նուjնքան արագ, որքան բարիկենտրոնի մեթոդը: ", "Դա  բացատրվում  է  այն  բանով,  որ  գեներացումը  կատարող՝  ժամանակակից  (32  նմ,  22 նմ,  14  նմ  տեխնոլոգիաների  համար  օգտագործվող)    համակարգչային  ռեսուրսները ավելի հզոր են, քան նախկինում (90 նմ, 60 նմ  տեխնոլոգիաների համար)  օգտագործվող ռեսուրսները: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
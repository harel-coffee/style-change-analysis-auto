{"paragraph_source_docs": [1, 4, 1, 1, 1, 1, 3, 1, 4, 1], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraphs": ["Հարկ  է  նշել,  որ  MPT  ծրագրավորող  գործիքը  ունի  հետևյալ  երկու  էական սահմանափակումները.  ա)    MPT-ին    ներարկում  է  թերություններ  միայն  հիշողության բջիջների  զանգվածի  տարածքի  սահմաններում  և չի  կատարում  ներարկման գործողություն  այդ  տարածքից  դուրս՝  հիշողության  սարքի  մյուս  (Մուտքային/Ելքային հանգույցներում բջիջներում, տողերի և սյուների ապակոդավորիչների հանգույցներում,  զգայուն  ուժեղացուցիչների  բջիջներում  և  այլն)  հանգույցներում,  բ) ծրագրավորման  ընթացքում  MPT-ին  կարողանում  է  ներարկել  միայն  երկու  տեսակի՝ ծրագրավորող  թերություններով  բջիջներ,  այսինքն  միայն  երկու  տարբեր  վարքագիծ ունեցող թերություններ կարող են   միաժամանակ ներարկվել և հետազոտվել  հիշողու- թյան  բջիջների  զանգվածում  ԹՆևՀԹԱՍ    ծրագրային  համակարգի  կողմից:  Միաժա- մանակ  այդ  թերություններով  բջիջների  քանակը  սահմանափակվում  է  միայն հիշողության  սարքում  պարունակվող    հիշողության  բջիջների  գումարային  քանակով: ", "Ինչպես  նկատում  ենք  երկու  օրինակների  դեպքում  էլ  ճարտարապետությունն  ունի հիերարխիկ  կառուցվածք  և բաղկացած է նմանատիպ  կոմպոնենտներից: ", "Թերությունների ամբողջական գրադարանների առկայությունը հնարավորություն է ընձեռում լիարժեք ստուգել թեստավորման ալգորիթմները [41-44]: ", "ա. xxxxxxxx xxxxxxxx բ. xxxxxx1x xxx1xxxx xxxxxxxx xxxx10xx xx0xxxxx գ. Նկար 3.2.   ԾՕ ֆայլերի օրինակները - 94 - Նկար 3.2-ում ներկայացված են  ծրագրավորման ֆայլերի օրինակները, որոնք ստեղծվել են 4 տող և 8 սյուն ունեցող հիշողության բջիջների զանգվածի համար: Նկարի հիշողության  զանգվածը  ներարկված  է  «1»  տեսակի  թերություններով:  Նույն    ձևով՝  բ. օրինակին համաձայն, զանգվածում ներարկվելու են «0» տեսակի թերություններով: Իսկ գ. օրինակում ներկայացված է դեպք, երբ  «0» տեսակի թերությունները ներարկվելու են ներարկվելու են երեք բջիջներում՝ 7-րդ տողի 5-րդ սյան մեջ, 2-րդ տողի 4-րդ սյան մեջ և ներդրվում են հարևան բջիջներում: Թերությունների այդ տեսակ դիրքավորումը կարող է  բերել  յուրահատուկ  վարքագծով  անսարքությանը  և  լրացուցիչ  ստուգման  գործոն հանդիսանա  թեստային  ալգորիթմի  համար:  «1»  և  «0»  տեսակի  թերությունների օրինակներ են հանդիսանում առաջին գլխում նկարագրված, «ծրագրավորող» բջիջները (Տես՝  նկ.  1.25  և  նկ.  1.26):  Այս    «ծրագրավորող»  բջիջների  կիրառումը  ԹՆևՀԹԱՍ ծրագրային ԱՀ -ում համարժեք է «Stacked 0»  և «Stacked 1»  տեսակի անսարքությունների ներդրմանը հիշողության զանգվածի բջիջներում: ", "Նկար  3.3-ում  ներկայացված  է  մեխանիկական  (manual)  ձևով  ներարկված թերության  օրինակը,  որը  ներարկվել  է  հիշողության    բջիջում,  որի  արդյունքում    բաց Նկար 3.3.   ՀՍ-ի  բջջի տոպոպոլոգիայում բաց դիմադրողական թերության օրինակը - 95 - դիմադրությամբ անսարքություն է հայտնվում հիշողության զանգվածի բջիջում: ", "Հիշողության  մակերևույթում  թերությունների  մեխանիկական  ներարկման մեթոդը կիրառվում է այն դեպքերում, երբ ա) հետազոտվող թերությունը անհրաժեշտ է ներարկել հիշողության սարքի  հիշողության բջիջների զանգվածի սահմաններից դուրս՝ հիշողության  այլ  հանգուցներում;  բ)  ներդրվող  թերությունը  ունի  բարդ  կառուցվածք,  և այդ  թերությունը  ստանալու  համար  պետք  է լինում  բջիջի  տոպոլոգիայում մեխանիկական  ձևով  կատարել բարդ  ձևափոխություններ:  Բնականաբար, օգտագործվող  թեստային  ալգորիթմը  պարտավոր  է  հայտնաբերել  այդ  հանգույցներում գտնվող թերությունները ևս: ", "Ցանցի ուսուցումը իրականացվել է սխալի հակադարձ տարածման հիման վրա [88]: ", "նկարագրության ձևը ԹՆևՀԹԱՍ  ծրագրային ԱՀ-ի աշխատանքի հիմնական նպատակն է վավերացնել ՀՍ-ում օգտագործվող  թեստային  ալգորիթմի ներարկված  անսարքությունը հայտնաբերելու  ունակությունը:    ՆՀՍ-երում  կիրառվում  են  Մարշ  տիպի  թեստային - 96 - ալգորիթմներ:  Թեստային  ալգորիթմը մուտքային  տվյալ է հանդիսանում մոդելավորման  հանգույցի  համար:  Օգտագործվող  Մարշ  թեստային  ալգորիթմը փոխանցվում  է  ծրագրային  հոսքին    առանձին  ֆայլի  միջոցով    և  բաղկացած  է  երեք պարտադիր տարրերից: ", "Յուրաքանչյուր  Processor  կարող է խմբավորել մի  քանի Wrapper-ներ  [69],  [70]: ", "  P (անգլերեն - Ping-pong addressing) – Պինգպոնգ հասցեավորում: Այս հասցեավորման ժամանակ  թեստավորումը  սկսվում  է  զրոյական  հասցեից,  այնուհետև,  հաստատուն շեղումով,  թռիչքաձև  աճելով՝  հասցեների  տիրույթի  թույլատրելի  սահմաններում, հասնում  է հիշողության նմուշի վերջին՝  առավելագույն հասցեին: "]}
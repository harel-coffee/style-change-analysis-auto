{"paragraph_source_docs": [2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1], "paragraphs": ["Ներկայումս համեմատաբար պարզ նախագծերի  համար հիմնականում օգտագործվում է մետաղական եռաշերտ գործընթացը, իսկ համեմատաբար բարդ՝ միկրոպրոցեսորային նախագծերի համար    օգտագործվում  են   չորս-վեց և ավելի շերտերով  գործընթացները։ ", "Մուտքային պարամետրները լինում են երկու տեսակի. ա) պարտադիր {NW, NB, CM}, և բ) լրացուցիչ {BK, VBK, cd_enable, reduncy_enable, bist_enable, frequency, instan_orientation և այլն }:  Այդպիսով՝ Minst = Fcomp{NB, NW, CM, p1, p2,…pn} ,  որտեղ (7) { p1, p2,…pn} – լրացուցիչ պարամետրերն են: ", "Ինտեգրացված  սխեմաների  արտադրության  շահութաբերությունը  կախված  է միկրոսխեմայի  արտադրության  օգտակար  ելքից,  որը  սահմանվում  է  որպես արտադրված  սխեմաներից  աշխատունակների  հարաբերությունը  ամբողջին:  Հարկ  է նշել,  որ  արտադրության  պրոցեսի  նույնիսկ  ամենալավ  պայմաններում,  հնարավոր  չէ ստանալ  100%  արտադրության  օգտակար  ելք:  Գոյություն  ունեն  արտադրության պրոցեսի  բազմակի    թերություններ,  որոնց  պատճառով  առաջանում  է  արտադրական խոտան:  Արտադրության  տեխնոլոգիաների  շարունակական  զարգացման  շնորհիվ՝ միկրոսխեմաներում  ակտիվ  տարրերի  ֆիզիկական  չափերի    կրճատման  հետևանքով, - 22 - արտադրական  խոտանը  զգալիորեն  ավելանում  է՝  հասնելով  70-80  տոկոսի  :  Դրան զուգահեռ  մեկ  բյուրեղի  մակերևույթի վրա  գտնվող  «միջուկների»  քանակը և խտությունը  անընդհատ  ավելանում  է,  որը      բերում  է  բյուրեղի  ընդհանուր  չափերի մեծացմանը՝ դրանով էլ ավելի, նվազեցնելով սխեմայի արտադրության օգտակար ելքը: ", "Միկրոսխեմաների  արտադրության  օգտակար  ելքի  մեծացումը  մնում  է  արդիական խնդիր, որն արդյունավետ լուծում է պահանջում [19]: ", "ՀՍ-ի  թեստավորման  արդյունավետության  բարձրացումը  հանդիսանում  է  ՀՍ-ի օգտակար ելքի  ավելացման  միջոցներից  կարևորներից  մեկը:  Լավացնելով միկրոսխեմայի  թեստավորման  ԱՀ-ի  արդյունավետությունը՝  ավելացնում  ենք միկրոսխեմաների  օգտակար  ելքը  [20-22]:  Հիշողության  սարքերի  թեստավորման  հետ կապված  խնդիրները  էականորեն  տարբերվում  են  տրամաբանական  սարքերի թեստավորումից:  Դրա  հիմնական  պատճառն  այն  է,  որ  հիշողության  սարքում առաջացած  անսարքության  վարքագիծը  համապատասխանում  է  տրամաբանական սարքերում  առաջացող  անսարքության վարքագծին, մինչդեռ օգտագործվող անսարքությունների  մոդելը,  հիմնականում,  համապատասխանում  է  թվային  մոդելին (օրինակ  կարճ  միացում,  կամ  տրամաբանական  «0»  կամ  «1»):  Բացի  այդ,  ՀՍ-ի  ներքին գործողությունները  իրականացվում են  որպես տրամաբանական  սխեմաներում կատարվող  գործողություններ:    Արդյունքում  անսարքության  գումարային  վարքագիծը դառնում է շատ բարդ, խճճված և դժվար վերլուծելի [15], [16]: ", "Ժամանակակից  ներդրված  հիշողության  սարքերի    օգտակար  ելքի  ավելացման նպատակով  այդ  սարքերում,  դեռ  նախագծման  փուլում,  հիշողության  բջիջների զանգվածում,  տեղադրվում են  պահեստային սյուներ կամ տողեր կամ էլ միաժամանակ պահեստային  և՛  տողեր,  և՛  սյուներ:  ՀՍ-ում  ներդրված  այս  պահեստային  տարրերը օգտագործվում  են  հետևյալ  ձևով՝  ներդրված  ՀՍ-ի  սնուցման  լարումը  անմիջապես միացնելուց հետո կատարվում է այդ սարքի աշխատանքի ստուգումը, որը կատարվում է  հիշողության  սարքի  հետ  միաժամանակ  պատրաստված  հատուկ  էլեկտրոնային սխեմայի  միջոցով:  Ժամանակակից  սարքերում  այդ  սխեմայի  դեր  է  կատարում հիշողությունը ստուգող, միայն այդ նպատակի համար նախագծված և միկրոսխեմայում ներդրված  պրոցեսորը [19-22]:  Այդ  պրոցեսորը  աշխատեցնում  է  ներդրված ինքնաթեստավորման ալգորիթմը՝ BIST: Այդ   BIST ալգորիթմի աշխատանքի ընթացքում - 23 - հայտնաբերված  սխալի  մասին  տեղեկությունը  փոխանցվում  է  պրոցեսորին,  որն  էլ  ի պատասխան  հայտնաբերված  սխալի  աշխատեցնում  է  ներդրված՝ այդ  սխալը «վերացնող»  ալգորիթմը  -  BIRA:  BIRA-ի  նպատակն  է  օպտիմալ  ձևով՝  պահեստային սյուների,  տողերի  միջոցով  «փոխարինել»  անսարք  բջիջը,  իսկ  ընդհանուր  դեպքում, հիշողության  զանգվածում  անսարք  բջիջներ  պարունակող  սյուները  կամ  էլ  տողերը: ", "Անսարք  բջիջներ  պարունակող  սյունը,  շնորհիվ  կատարվող  սյուների  շեղումների, փոխանակվում է պահեստային սյունով, իսկ անսարք տողը անջատվում է հիշողության զանգվածի  հասցեավորման  տիրույթից,  փոխարենը  վնասված  տողի  հասցեն փոխանակվում է՝ վերահասցեավորվում է, պահեստային տողի հասցեով [2], [19]: BIST-ի և  BIRA-ի  ալգորիթմների  աշխատանքի  շնորհիվ  հնարավոր  է  դառնում լիովին վերականգնել հիշողության սարքի աշխատանքը: ", "•  Օգտատերը  կայք  էջից  պետք  է  ձեռքով  մուտքագրի  հասցեատիրոջ հեռախոսահամարը,  հետևաբար  գործընթացը չի  կարող  ավտոմատացվել։  Սա նշանակում է, որ այս մեխանիզմը նախատեսված չէ այն դեպքերի համար, երբ ուղարկող կողմը որևէ ծրագրային համակարգ է։ ", "Թեստավորման   աշխատանքների ողջ  գործընթացը  բերում է    հիշողության սարքերի ՕԵ-ի  բարձրացմանը  և  այդ  գործընթացի  կարևորագույն  մասն  է  կազմում  հիշողության աշխատանքը  ստուգող  թեստային  ալգորիթմը:  Ներկայումս,  ներդրված  ՀՍ-ի թեստավորման նպատակով կիրառվող թեստային ալգորիթմներից ամենատարածվածը «Մարշ»  (անգլերեն՝  March)  տեսակի  ալգորիթմներն  են:  «Մարշ»  ալգորիթմները,  իրենց պարզության  շնորհիվ,  իրականցման  համար  պահանջում  են  նվազագույն  միջոցներ: ", "Միաժամանակ  լինելով  շատ  արդյունավետ՝  «Մարշ»  տեսակի  ալգորիթմները  լայնորեն կիրառվում են որպես ներդրված ՍՊԴՀ-ի ԱՀ թեստավորման ալգորիթմներ [8], [23], [24]: ", "- 19 - Համակարգի սպեցիֆիկացիա Վաղ ֆիզիկական նախագծում Ճարտարապետական նախագծում Ֆունկցիոնալ նախագծում Տրամաբանական նախագծում Տրամաբանական ստուգում Սխեմատեխնիկական նախագծում Սխեմատեխնիկական ստուգում Ֆիզիկական նախագծում Հարթապատկերի ստուգում Արտադրություն Կիսահաղորդչային բյուրեղի ստուգում Պատենավորում և թեստավորում Նկ․  1.2․   ԻՍ-երի  ֆիզիկական  նախագծման  խնդիրների  վաղաժամ  դիտարկման երթուղին Ֆիզիկական սինթեզի իրագործման ժամանակ ցանկացած բլոկ նախագծելու համար անհրաժեշտ  ժամանակը  կարելի  է  նվազեցնել,  եթե  ֆիզիկական  նախագիծը  հնարավոր լինի ուղղակիորեն ստեղծել կամ սինթեզել ավելի բարձր մակարդակի նկարագրից։ Սա ոչ  միայն  նվազեցնում  է  նախագծման  ժամանակը,  այլ  նաև  բացառում  է  մարդկային սխալները։  Այսպիսի  մոտեցման  ամենամեծ  թերությունը  սինթեզված  բլոկների  համար օգտագործվող  մակերեսն  է,  քանի  որ  տարաձև  և  տարաչափ  հանգույցների հատակագծման  և  տեղաբաշխման  խնդիրը,  մակերեսի  նվազարկման  պայմանով, ինքնին  բարդ  խնդիր  է  և  դժվար  է  ենթարկվում  ավտոմատացման:  Կախված  նախագծի մակարդակից,  որում  ներկայացվում  է  սինթեզը,  առկա  է  ֆիզիկական  սիթեզի  երկու տեսակ՝ տրամաբանական և բարձր մակարդակով։ ", "(8) Մարշ էլեմենտը կազմված է հասցեավորման ուղղությունը որոշող նիշից (` աճող, `  նվազող)  և  վերջավոր  թվով  մարշ  գործողություններից  (W-  գրել  բառը,  R  -  կարդալ բառը և D - հապաղում): ", "- 24 - kMMMM,...,,21 ,    որտեղ {1,m} (9) (10) {1,k}  n  {1,h} (11) Մարշ թեստի կիրառության ժամանակ, յուրաքանչյուր բջջի վրա համապատասխան  հերթականությամբ  կիրառվում  են  մարշ  գործողությունների հաջորդականությունները: Ընդ որում`   –  մարշ  տարրի  գործողությունները  կիրառվում  են  հիշողության  բոլոր  հասցեներում աճման կարգով՝ սկսած զրոյից մինչև հիշողության վերջին հասցե,   –  մարշ  տարրի  գործողությունները  կիրառվում  են  հիշողության  բոլոր  հասցեներում նվազման կարգով` սկսած հիշողության  վերջին հասցեից մինչև զրոյական հասցե, -  մարշ  տարրի  գործողությունները  կիրառվում  են  հիշողության  բոլոր  բջիջներում՝ հասցեների նվազման կամ աճման կարգով, R0  –  ընթացիկ  հասցեից  կատարվում  է  կարդալ  (անգլերեն՝  Read)  գործողությունը` ակնկալելով  տրամաբանական  «զրո»  արժեք:  Ոչ  «զրո»  արժեք  կարդալու  դեպքում արձանագրվում է սխալ, R1  –  ընթացիկ  հասցեից  կատարվում  է  կարդալ  գործողությունը`  ակնկալելով տրամաբանական «մեկ»  արժեք:  Ոչ «մեկ»  արժեք  կարդալու  դեպքում W0  –  ընթացիկ  հասցեում  կատարվում  է  տրամաբանական  «զրո»  արժեքի  գրել արձանագրվում է սխալ, (անգլերեն՝ Write) գործողությունը, գործողությունը, W1  –  ընթացիկ  հասցեում  կատարվում  է  տրամաբանական  «մեկ»  արժեքի  գրել Dn – հապաղում (անգլերեն Delay)  գործողություն է, որի տևողությունը հաշվարկվում է n*Tclk  բանաձևով,  որտեղ  «n»-ը  դա  ամբողջ  թիվ  է  իսկ  Tclk  հիշողության պարզագույն գործողության տևողությունը: ", "Մարշ ալգորիթմը բնութագրվում է «Մարշ» ալգորիթմի բարդությունը բնութագրող (N) պարամետրով: Մարշ ալգորիթմների բարդությունը՝ N պարամետրը,  ցույց է տալիս Մարշ  ալգորիթմի  աշխատանքի  ընթացքում, մեկ  բջջի  վրա  կատարվող  գործո- ղությունների քանակը: ", "- 25 - },O,,O{O A Mm21ii; ,Ai,;,,nDn, W1R0, R1, W0Oj Նկար  1.10-ում՝    որպես  օրինակ,  ներկայացված  է  «Մարշ  C»  ալգորիթմի  տարրերը իրենց  պարզաբանմամբ (ըստ  [8], [24]): ", "M0 M1 M2 M3 M4 M5 M6 Որտեղ М0-М6 մարշ տարրն են   Այս ալգորիթմի բարդությունը՝  N=11: ", "Նկար 1.10.   Մարշ C  ալգորիթմը Ինչպես  տեսնում  ենք  պարզագույն  մարշ  տարրը բաղկացած  է  երկու  մասերից՝ հասցեավորման  ուղղությունը  ցույց  տվող  մասից և  բջիջների  վրա  կատարվող գործողություններից :  Իր  հերթին  կատարվող  գործողությունը  բաղկացած  է գործողությունից (W,  R,  D)  և  գործողության  տվյալից:  Մեկ  բիթային (B1) հիշողությունների  համար  գործողության  տվյալը՝  գրականությունում  այն  նաև անվանում  են  «գործողության  օրինակ»  (Background  Pattern  –BP),  ստանում  է  «զրո»  կամ «մեկ»  արժեքը:  Իսկ  բառային  (Bi)  հիշողություններում    այն  ունի  «i»  երկարություն: ", "Հիշողության  թեստավորման  արդյունավետությունը  բարձրացնելու  նպատակով թեստավորման  ընթացքում  օգտագործվում  է  գործողության  տվյալների  (ԳՏ)  այնպիսի հաջորդականություն,  որի  արդյունքում  հիշողության  զանգվածում  գրանցված տվյալները կկազմեն որոշակի ֆիզիկական պատկեր: Սովորաբար, հիշողության սարքը թեստավորելիս  օգտագործվում  են  մի  քանի  տեսակի  ֆիզիկական  պատկերներ (անգլերեն՝  physical  Background  Patterns (PBP))  ապահովելով  ՀՍ-ի լիարժեք թեստավորումը:  Աղյուսակ  1.2-ում  ներկայացված  են  թեստավորման  գործողության ժամանակ  օգտագործվող  տվյալների  ֆիզիկական    օրինակներից    հիմնականները  [8], [25]: ", "Թեստավորման գործողության տվյալների ֆիզիկական  տվյալները Աղյուսակ 1.2 Solid bar (~SO) - 26 - );0(W);1,0(WR);0,1(WR);0(R);1,0(WR);0,1(WR)0(R iMiAmO Թեստավորման գործողության տվյալների ֆիզիկական  տվյալները Աղյուսակ 1.2 (շարունակություն) Column Stripe bar (~CS) Row Stripe bar (~RS) Checkerboard bar (~CB) Double Column Stripe bar (~DCS) Double Row Stripe bar (~DRS) Double Checkerboard bar (~DCB) Bit-line Checkerboard bar (~TCB) Ներդրված  ՀՍ-ի  թեստավորման  գործընթացում  ժամանակի  և  տեղի  խիստ սահմանափակության  պատճառով  օգտագործվում  են  BP-ից  երկուսը  կամ,  լավագույն դեպքում, երեքը: Իսկ մնացած BP-ները, որպես լրացուցիչ տարբերակ, օգտագործվում են միայն ՀՍ-ի լայնածավալ  թեստավորման, հետազոտման աշխատանքներ իրականացնելիս:  Առանձնահատուկ  հետաքրքրություն  է  ներկայացնում  հիշողության - 27 - բջիջում  Բիթային  գծերի  կառուցվածքային    հերթականությունը  հաշվի  առնող  Bit-line Checkerboard (TCB)  գործողության Օրինակը: Ինչպես ցույց կտրվի հետագայում, TCB-ի օրինակը  ապահովում է  անսարքությունների  հայտնաբերման  ամենաբարձր հավանականությունը  և  դրանով  է  բացատրվում    թեստային  ալգորիթմում  այս  BP-ի օգտագործման  կարևորությունը:  TCB-ի  օրինակը  կիրառման  համար  պետք  է  իմանալ հիշողության զանգվածի բջիջներում բիթային գծերի ֆիզիկական բաշխվածությունը, որն էլ  իր  հերթին  հիշողության  սարքերի    կառուցվածքային  ինֆորմացիայի՝  խճողման (անգլերեն՝  scrambling),    տարրերի  տեսակներից  մեկն  է:  Ակնհայտ  է  կառուցվածքային խճողումների անմիջական ազդեցությունը ՀՍ-երի թեստավորման արդյունավետության վրա: Հետազոտենք այդ ազդեցության պատճառները: ", "ՍՊԴՀ  նմուշը  պատվիրատուին  տրվում  է  արտադրության  մեջ  օգտագործվող GDSII  ձևաչափով  ներկայացված  ֆայլով:  Այն  պարունակում  է  ավարտուն  և ամբողջական  տեղեկություն  ՆՀՍ-ի  մասին:  GDSII  տեսակի  գրաֆիկական  ձևաչափը ծավալուն  է,  և  այդ  ֆայլի  մշակումը    այլ  ԱՀ  ծրագրային  միջոցների  կողմից  անչափ անհարմար  է  և  ժամանակատար:  ՍՊԴՀ  սարքերի  նմուշի  GDSII  ֆայլը  նախագծելիս ճարտարագետը  կատարում  է  հիշողության  հանգույցների  լավարկումը՝  ապահովելով թիթեղի օգտագործվող  մակերևույթի  մինիմալացումը  և  բջիջների  տոպոլոգիայի օպտիմալ  տեղադրումը:  Որպես  այդ լավարկման  աշխատանքների  հետևանք, հիշողության  նմուշում  ձևավորվում  են  կառուցվածքային  խճողումները,  որոնք,  ինչպես ցույց  կտանք  հետագայում,  մեծ  ազդեցություն  ունեն  նմուշի  թեստավորման արդյունավետության վրա: ", "Սահմանում. ՀՍ-ի նմուշը բաղկացած է կառուցվածքային երկու մասերից՝ հիշողության բջիջները պարունակող զանգվածից և հիշողության բջիջներ չպարունակող մասից՝ գոտիներից: ", "Արդյունքում  ստացվում  է  մի  ֆայլ,  որը  ինֆորմացիա  է  պարունակում  տարրերի փոխանջատումների  վերաբերյալ  և  մուտքային  ինֆորմացիա  է  հանդիսանում հզորության  սպառումը  գնահատող  գործիքի  համար:  Այդ  ֆայլը  կոչվում  է  հետադարձ նշագրման  ֆայլ  (անգլերեն'  Back-annotation  SAIF  file):  Հետադարձ  նշագրման  ֆայլում պահվող  ինֆորմացիան  կարող  է  ստացվել  ինչպես  RTL  սիմուլիացիայից,  այնպես  էլ տրամաբանական  տարրերի  սիմուլիացիայից:  Սխեմայի  տարրերի  փոխանջատումների վերաբերյալ այդ ինֆորմացիան  նշագրվում է սխեմայի  օբյեկտներին  և օգտագործվում  է հզորության  սպառման  գնահատման  և  օպտիմիզացիայի  համար:  Սիմուլիացիայի ընթացքում  հետադարձ նշագրման  ֆայ լի  ստացման  համար  Design  Compier-ը  ստանում Է  նախնական  նշագրման ֆայլ  (անգլերեն'  Forward-annotation  SAIF file),  որը ինֆորմացիա  է  պարունակում  այն  մասին,  թե  սիմուլիացիայի  ժամանակ,  որ  տարրերի ւիոխանջատումների  վերաբերյալի անհրաժեշտ  հավաքել ինֆորմացիա: ", "Power Compiler ֊ի  աշխատանքը  բաղկացած է հետևյալ փուլերից' սիմուլիացիա,  որի  արդյունքում  ստացվում  է հետադարձ նշագրման ֆայլը: ", "- 29 - Կիրառական  ծրագրային  միջոցների  հետ  աշխատանքի  ժամանակը  էապես պակասեցնելու  նպատակով  առաջակվեց  ստեղծել  և  կիրառել    հիշողության  նմուշի պարզեցված  կառուցվածքային մոդելը:  Հիշողության  կառուցվածքային  մոդելը բաղկացած  է  երկու  հիմնական մասերից՝  հիշողության  գոտիների  բաշխումը նկարագրող մասից և հիշողության կառուցվածքային խճողումները նկարագրող մասից: ", "Հիշողության  նմուշի  մոդելը  ստեղծվում  և  պահվում  է  տեքստային  ձևաչափով,  իսկ հիշողության  կոմպիլյատորի  դեպքում՝  TCL  ծրագրային  լեզվով  գրված      ձևաչափով: ", "Հիշողության    կառուցվածքային  մոդելը  համապատասխան  ստուգումից  հետո  [12] օգտագործվում է այլ կիրառական ծրագրերում [8,13,14]: ", "Իհարկե,  կան  բարդ  և  անչափ  ծավալուն  թեստավորման  ալգորիթմներ,  որոնց արդյունավետության  համար  էական  չէ  նմուշի  կառուցվածքային  խճողումների  մասին տեղեկության առկայությունը: Բայց այդպիսի ալգորիթմների աշխատանքի տևողություն ժամանակը և իրականացման համար անհրաժեշտ՝ անընդունելի մեծ տարածքը թիթեղի վրա, անհնար են  դարձնում դրանց օգտագործումը ներդրված սարքերում: ", "ՀՍ-ի խճողումների պատճառները և ազդեցությունը հիշողության թեստավորման վրա Դիտարկենք  ՀՍ-ի  հասցեների  և  տվյալների  խճողումները,  դրանց  հայտնվելու պատճառները և ազդեցությունը հիշողության թեստավորման վրա: Հիշողության սարքի կառուցվածքային խճողումների հիմնական պատճառներն են. խճողումը, նմուշի երկրաչափական կառուցվածքի օպտիմալացումը, և սյուների  ապակոդավորիչների  տոպոլոգիայի լավարկումը, գոտիների համատեղ օգտագործումը՝ կիսումը, ոլորապտումների միջոցով, - 30 - միացումների համատեղելիությունը սյուների միջոցով: ", "Տվյալների տարածքային դասավորումը՝տվյալների խճողում Նկար  1.12-ում  ներկայացված  են  հիշողության  զանգվածում  տվյալների  բաշխման երկու  հնարավոր  տարբերակների  օրինակները:  Դիտարկենք  մի  տարբերակ,  երբ հիշողության  բջիջների  զանգվածի  տողը      կազմված  է  16  սյուներից  (col0  –  col15),  իսկ յուրաքանչյուր  հիշողության  բառը  բաղկացած  է  4  բիթերից՝  bit0-bit3:  Այս  դեպքում հիշողության  ֆիզիկական  մեկ  տողը  կարող  է  պարունակել  4  բառ:  Նկար  1.12-ի  ա.-ում բերվում է մի տարբերակ, երբ մեկ տողում տվյալները՝ բառերի բիթերը, խմբավորված են հաջորդաբար  բառ  առ  բառ՝  word0,    word1,    word2,  word3:  Այս  դեպքում,  հիշողության բջիջների զանգվածում տվյալների խճողում    չի կատարվում: ", "row0  word0 bit0 word0 bit1 word0 bit2 word0 bit3 word1 bit0 word1 bit1 word1 bit2 word1 bit3 word3 bit3 row1 row1 col0 col1 col2 col3 col4 col5 col6 col7 col15 ա. Բառերի հարևան բաշխումը (տվյալները խճողված չեն) row0  word0 bit0 word1 bit0 word2 bit0 word3 bit0 word0 bit1 word1 bit1 word2 bit1 word3 bit1 word3 bit3 col0 col1 col2 col3 col4 col5 col6 col7 col15 բ. Բիթերի հարևան բաշխումը (տվյալները խճողված են) Նկար 1.12.        ՆՀՍ-ի տվյալների խճողումը Նկ.  1.12  բ.-ում  պատկերված  է  մի  տարբերակ,  երբ  բառերը  տողում  բաշխված  են  ըստ բիթերի  հարևանության:  Հարկ  է  նշել,  որ  ա.  տարբերակում  նկարագրված  բաշխման տոպոլոգիան  կառուցելիս  հանդիպում  ենք՝  Մուտք/Ելք  հանգույցների  միացումների - 31 - իրականացման    մեծ  բարդությունների  առաջ:  Այդ  պատճառով  ա.  տարբերակը  ՆՀՍ- երում  չի  կիրառվում:  Կիրառվում  է  բ.  տարբերակը,  ունենալով    տվյալների  խճողում, կարողանում ենք օպտիմալացնել  Մուտք/Ելք հանգույցների դասավորումը տոպոլոգիայում՝  մասնավորապես  բաշխել  դրանք  հաջորդաբար  աճման  կամ  էլ նվազեցման    կարգով:  ՆՀՍ-ի  բառերի  բաշխումը  լինում  է  երկու  տեսակի՝  ներդրված (interleaved)  և  հարևան  բառերով  (adjacent):  Այս  աշխատանքում  դիտարկվում  են  միայն ներդրված բառային կառուցվածք ունեցող հիշողության սխեմաները: ", "Լ. Հոնգը և Կ.Ց. Հոն զարգացրել են վեյվլեթ ձևափոխության մոտեցումը և կիրառել են QAM տեսակի ազդանշանները նույնականացման համար [31]: Ի տարբերություն PSK և FSK ազդանշանների QAM ազդանշանները չունեն հաստատուն ամպլիտուդայի արժեք: ", "AP1 AP0  =   00      01       10       11               00         01     10        11 AL1 AL0  =   00      01        10       11               00        01      11        10 w0 w1 w2 w3 w0 w1 w2 w3 AL0 AL1 AL0 AL0 AL1 AL1 ա. Միացում առանց խճողման բ. Միացում խճողումով Նկար 1.13.   Հասցեների ապակոդավորիչի  միացումների լավարկումը Նկար 1.13-ի ա.-ում տրված է տարբերակ, երբ ապակոդավորիչը լավարկված չէ, և այս դեպքի համար   խճողում չի առաջանում: Նկար 13-ի բ.-ում նույն ապակոդավորիչի համար  կատարվել  է  միացնող  մուտքային  գծերի  լավարկում՝  երկար  միացումներ ունեցող  կապերի  քանակը  կրճատելու  նպատակով:  Այս  դեպքում,  տոպոլոգիայի - 32 - ֆիզիկական  կառուցվածքում  առաջանում  է,  միացումների  խճողումը:  ա.  և  բ. տարբերակների խճողման պարզաբանումը ներկայացված է աղյուսակ 1.3-ում: ", "Աղյուսակ 1.3 Նկար 1.13-ի  հասցեների միացումների խճողման պարզաբանումը AL1 AL0 Տարբերակ (ա) Տարբերակ (բ) w0 w1 w2 w3 w0 w1 w3 (խճողում) w2 (խճողում) Հասցեների ապակոդավորիչի  միացումների լավարկում Դիտարկենք  հասցեների  խճողման  ազդեցության  մի  քանի  օրինակ:    Հասցեների խճողումը    զգալի  ազդեցություն  ունի  թեստավորման  ժամանակ  օգտագործվող,  BP-ի (Տես՝ աղ. 1.2)  վրա:  Ակնհայտ է որ  հասցեների խճողումը չի ազդում «Solid» և «Solid bar» BP-ի ժամանակ, քանի որ հիշողության զանգվածի բոլոր բջիջներում գրվում է միայն մեկ տեսակի տվյալ «0» կամ «1»: Տողերի հասցեների խճողումը ազդում է Row Stripe, Double Row Stripe, Chacker Board,  Bitline   Chacker Board  թեստային օրինակների դեպքերում և չի  ազդում  Column  Stripe,  Double  Column  Stripe  BP-ների  ժամանակ:  Նկար  1.14-ում տրված  է  տողերի  հասցեների  խճողման  ազդեցությունը    Rows  Stripe    BP-ի  վրա:    Նկար row3  0 row2  1 row1  0 row0  1 col0 col1 col2 col3 ա. Տողերի խճողում չկա {0,1,2,3} col1 row2  1 row3  0 row1  0 row0  1 բ. Տողերի խճողում {0,1,3,2} col2 col3 col0 Նկար 1.14.   Rows Stripe  BP-ի վրա տողերի խճողման ազդեցությունը ում երկրորդ և երրորդ տողերի ֆիզիկական դիրքերը փոխանակված են {0,1,3,2}: Տողերի դիրքերի այդ փոփոխումը բացասական ազդեցություն ունի հիշողության թեստավորման - 33 - վրա,  քանի  որ  դրա  արդյունքում  ի  հայտ  է  գալիս  մի  իրավիճակ,  երբ  չնայած  նրան,  որ այս  թեստավորման  ընթացքում  օգտագործվում  է  տրամաբանական    Rows  Stripe    BP-ը (Տես՝  նկ.  1.14  ա.)  հիշողության  զանգվածի  ֆիզիկական  մակարդակում    ստացվում  է մեկերի և զրոների բաշխման մեկ այլ պատկեր (Տես՝ նկ. 1.14 բ.): Արդյունքում ստանում ենք մի մասնավոր դեպք, երբ ֆիզիկական մակարդակում՝  որոշակի հարևան տողերում հիշողության բջիջները տողից տող անցնելիս  ունեն միանման արժեք: Այս իրավիճակը զգալիորեն  նվազեցնում  է  անսարքությունները  հայտնաբերելու  հավանականությունը խճողում  ունեցող  տողերի  տարածքում,  քանի  որ  անսարքությունը  իրեն  հստակորեն բացահայտում  է,  երբ  հիշողության հարևան  բջիջները  ունենում  են  հակադարձ արժեքներ: ", "col1 row3  1 row2  1 row1  1 row0  1 ա. Սյուների խճողում չկա  {0,1,2,3} col3 col2 col0 row3  0 row2  0 row1  0 row0  0 col1 col0 col2 col3 բ. Սյուների խճողում  {1,0,3,2} Նկար 1.15.  Columns Stripe  BP-ի վրա սյուների խճողման ազդեցությունը Նկար 1.15-ում տրված է Սյուների խճողման ազդեցությունը  Columns Stripe  BP-ի վրա:  Այս  դեպքի  մեկնաբանումը  համընկնում  է  նկ.  1.14  դեպքին,  միայն  մեկ տարբերությամբ, որ ՀՍ-ի խճողումը կատարված է սյուներում, և այն ազդում է սյուների կողմնորոշում  ունեցող    BP-ի  վրա:  Սյուների  հասցեների  խճողումը  ազդում  է  Column Stripe,  Double  Column  Stripe,  Checker  Board,    Bitline    Checker  Board    թեստային ալգորիթմում  թեստային  օրինակների  դեպքերում  և  չի  ազդում  Row  Stripe,  Double  Row Stripe BP-ի վրա: ", "Զանգվածի բջիջներում բջջային միացումների և լիգերացման գոտիների համատեղ օգտագործումը Հիշողության  բջջի  էլեկտրական  սխեման  պատկերված  է  նկ.  1.8-ում:  Այդ էլեկտրական  սխեմայի  տոպոլոգիան  ունի  իրականացման  բազմազան  տարբերակներ, որոնցում  ճարտարագետը  իրականացնում  է  յուրաքանչյուր  տեխնոլոգիային  բնորոշ լավարկման  աշխատանքներ:  Մի  դեպքում  անհրաժեշտ  է լինում  փոքրացնել - 34 - հիշողության բջջի չափսերը, մեկ այլ դեպքում՝ ապահովել բարձր արագործությունը, իսկ մեկ այլ դեպքում ապահովել տեխնոլոգիայի մեկ այլ պահանջ: ", "Նկար  1.16.   Հիշողության բջջի տոպոլոգիայի օրինակը Նկար  1.16-ում  պատկերված  է  հիշողության  բջջի  տոպոլոգիայի  օրինակը: ", "Տոպոլոգիայի  այդ  օրինակում  NWELL-ը  և  PWELL-ը  համապատասխանաբար  N  և  P լեգիրացման  գոտիների  բաշխումներն  են  հիշողության  բջջի  տոպոլոգիայում:  ՆՀՍ-ի տոպոլոգիայում  այդ լեգիրացման  գոտիների  համատեղ  օգտագործումը  տարբեր բջիջների  համար  առաջացնում  է  բջիջների  բիթային  գծերի  տրամաբանական  և ֆիզիկական  բաշխման  խճողում՝ բիթային  գծերի  տարածական  կանոնավոր կողմնորոշվածության խախտումը «Х» առանցքում : ", "Նկար  1.17-ում  ներկայացված  է  հիշողության  զանգվածից    երկու  տող  և  երկու սյուն  ունեցող    մի  հատված:  Նկարից  երևում  է,  որ  վերևի  և  ներքևի  տողերում  գտնվող բջիջները հայելաձև   շուռ են տված հորիզոնական «Х» առանցքի նկատմամբ, իսկ աջ և ձախ  սյուների  բջիջները      շուռ  են  տված  ուղղահայաց  «Y»  առանցքում:    Բջիջների  այս տեղաբաշխումը պատճառ է դառնում բիթային գծերի (ուղղահայաց)  և սնուցման գծերի (հորիզոնական) խճողումների: ", "- 35 - BL    NWELL P1 VDD VSS P2 N2 N1 N3 N4 PWELL Poly silicon Metal Active Area Poly Word Line Նկար 1.17.   Հիշողության զանգվածում լեգիրացման  գոտիների և կապերի բաշխման օրինակը Հիշողության զանգվածի բիթային գծերի  խճողման պատճառները Քանի  որ  հիշողության  զանգվածի  բիթային  գծերի  բաշխման  մասին տեղեկությունը  կարևոր  դեր  է  կատարում  թեստավորման  արդյունավետության  վրա, ապա  նպատակահարմար  է  ավելի  մանրամասն  դիտարկել  բիթային  գծերի  խճողման առաջացման  պատճառները:  Բիթային  գծերի  խճողման  առաջացման  պատճառ  է հանդիսանում նմուշի աշխատանքի արագության և կայունության լավարկումը բիթային գծերի  դասավորվածության  կարգավորման  և  գծերի    ոլորապտումների  կիրառման միջոցով  [18],  [25]՝  դրանով  նվազեցնելով  բիթային  գծերում  միջ-գծային  ունակությունը: ", "Այդ  ունակությունը    մեծ  արգելք  է    հանդիսանում  հիշողության  աշխատանքի  համար, նամանավանդ    շատ  տողեր,  այսինքն՝  երկար  բիթային  գծեր  ունեցող,          հիշողության նմուշների  դեպքերում:  Բիթային  գծերի  միջև  մեծ  ունակությունը  միաժամանակ - 36 - նվազեցնում  է  հիշողության  աշխատանքային  հաճախականությունը  և  հիշողության աշխատանքի  հուսալիությունը  (Տես՝  նկ.  1.18): ", "Ունակության  այդ  բացասական ազդեցությունը  պակասեցնելու  նպատակով  հիշողության  սարքերում    կիրառվում  են բիթային գծերի ոլորապտումները: ", "BT0 BB0 BT1 BB1 BT2 BB2 BT0 BB0 BT1 BB1 BT2 BB2 ա. Բիթային գծերը առանց ոլորապտումների բ. Բիթային գծերը ոլորապտումով Նկար 1.18.   Հիշողության զանգվածում բիթային գծերի բաշխումը Նկար 1.16 ա.-ից երևում է, որ BB0 և BT1 գծերի միջև (նմանապես BB1 և BT2 միջև) ընկած գումարային ունակությունը ավելանում է  գծերի երկարությանը զուգահեռ: Նկար ունակությունը վերաբաշխվում է, որի հետևանքով հարևան բիթային գծերի գումարային ունակությունը նվազում է: Ակնհայտ է, որ ոլորապտման արդյունքում ստացված գծերի ունակության  գումարային  արժեքը  կախված  է  հիշողության  զանգվածում  կատարված, գծերի ոլորապտման ֆիզիկական դիրքից: Այդ ոլորապտումը բաժանում է հիշողության զանգվածը  հատվածների,  ընդ  որում,  այդ  հատվածներում  տվյալների  ֆիզիկական  և տրամաբանական տվյալները ստանում են  հակադիր արժեքներ: ", "Թերություններ։ Դիտարկված մեթոդում կան որոշակի թերություններ։ Դրանք են՝ •  Թեև համակարգը կիրառելի է կամայական էլեկտրոնային փոստի օգտատերերի համար,  բայց  նրա  կառուցվածքային  առանձնահատկություններից  է  մեկ  փոստային սերվերի  հետ  անընդհատ  կապի  մեջ  լինելը։  Հետևաբար,  կախվածություն  ունենալով փոստային համակարգից այն ամբողջությամբ անկախ համակարգ համարվել չի կարող։ ", "- 37 - Նկար  1.19-ում,  որպես  օրինակ,  ներկայացված  է  մի  դեպք,  երբ      հիշողության զանգվածի    բոլոր  բջիջները  տրամաբանական  «0»-ով  լցնելուց  հետո  հիշողության զանգվածում    գրանցված  ֆիզիկական  արժեքը      տարբեր  հատվածներում  հակադիր  է (Տես՝  նկ.  1.19  բ.):  Հիշողության  բջիջներում  գրանցված  ֆիզիկական  և  տրամաբանական արժեքների  տարբերությունը  պատճառ  է  հանդիսանում  բիթային  գծերի  խճողման ազդեցության բջիջների պարունակության վրա: ", "T B T B T B  T B T B T B  T B  T B ա. Զանգվածում բջիջների ֆիզիկական  արժեքը առանց բիթային գծերի ոլորապտումների բ. Զանգվածում բջիջների ֆիզիկական արժեքը բիթային գծերի ոլորապտումների դեպքում Նկար 1.19.   Բիթային գծերի խճողման ազդեցությունը  հիշողության բջիջներում գրանցված ֆիզիկական արժեքի վրա Բազմիցս  նշել  ենք,  որ  անսարքությունը  հայտնաբերելու  համար  անհրաժեշտ  է ապահովել  հիշողության  տոպոլոգիայում  ֆիզիկապես  հարևան  բջիջների  բիթային գծերի  վրա  հակադիր  արժեք  ունեցող  լարումներ  (տրամաբանական  {0,1}  կամ  {1,0})՝ միայն  այդ  միջոցով  կարելի  է  հայտնաբերել  անսարքությունը  բջիջում:  Հակառակ դեպքում (տրամաբանական {1,1}, {0,0}  արժեքների  դեպքում),  թեստավորման ընթացքում,  անսարքությունը  կմնա  չհայտնաբերված:  Թեստավորման  ընթացքում «ճիշտ» թեստային տվյալների օգտագործումը մոտ 30% բարձրացնում է թեստավորման արդյունավետությունը  [16],  [27] միաժամանակ  պակասեցնելով  այդ  ալգորիթմի իրականացման      համար  անհրաժեշտ  սարքավորումը,  որն  իր  հերթին  շատ  կարևոր  է ներդրված  սարքերի  մակերևույթի  լավարկման  դեպքում:      Մի  քանի  օրինակների միջոցով  ցույց  տանք  հիշողության  բջիջների  բիթային  գծերի  բաշխման  մասին տվյալների  ազդեցությունը  թեստավորման  վրա:  Նկար  1.20-ում  տրված  է  մի    դեպքի - 38 - նկարագրություն,  երբ  թեստային  ալգորիթմում  օգտագործելով  լավագույնը  համարվող տրամաբանական  «Շախմատաձև»  Checkerboard  BP-ը  (Տես՝  նկ.1.20  ա.),  կարող  է հիշողության  զանգվածում չհայտնաբերել  անսարքությունը:  Նկար  1.20  բ.-ում ներկայացված  է  նույն  BP-ի  ֆիզիկական  պատկերը,  որտեղ  յուրաքանչյուր  բջիջի row2 row1 row0 col0 col1 col2 row2  T      B row1  T      B row0  T      B col0 T      B T      B T      B col1 T      B T      B T      B col2 T      B   T        B   T       B բ.   Ֆիզիկական BP ա.  Տրամաբանական BP Նկար 1.20.   Շախմատաձև BP-ի տրամաբանական և նրա համապատասխան  ֆիզիկական  ձևերը կենտրոնում  տրված է բջիջի  տրամաբանական  արժեքը, բջիջի վերևի անկյունամասերում բջիջի բիթային  գծերի  խճողումը (T,  B),  իսկ  ներքևի անկյունամասերում  բիթային  գծերի  արժեքները  (0,  1):  Զանգվածի  բիթային  գծերի բաշխման  յուրահատկության  պատճառով  {T  B,  T    B,  T    B}  հարևան  բիթային  գծերի արժեքները հակադիր չեն, չնայած որ տրամաբանական  արժեքները հակադիր են: Պարզ է,  որ  այս  բիթային  գծերի  խճողման  դեպքում  հիշողության    թեստավորման  ալգորիթմը օգտագործելով  տրամաբանական  լավագույնը  թվացող  շախմատաձև  BP-ը  իհայտ  կգա մի իրավիճակ, երբ անսարքությունը չի ակտիվանա և դրա արդյունքում թերությունը չի հայտնաբերվի թեստավորման ընթացքում: ", "Նկար  1.21-  դեպքին  հակառակը,  ոչ  օպտիմալ  թվացող  «Տողերի  գոտիներ»    Row Stripe    տրամաբանական  BP-ը  կարող  է  բացահայտել  (սինթեզել)  անսարքությունը նմուշի  զանգվածի  բիթային  գծերի  խճողման  շնորհիվ,  որի  պատճառով    բջիջում ֆիզիկական  մակարդակով  հարևան  բիթային  գծերի  արժեքները  հակադարձ  են՝ թեստավորման համար առավելագույն բարենպաստ վիճակում (Տես՝ նկ. 1.21 բ.): ", "- 39 - col0 row2 row1 row0 col1 col2 ա.  Տրամաբանական BP row2  T      B row1  T      B row0  T      B T      B T      B T      B col1 T      B T      B T      B col2 col0 T       B   T        B  T       B բ.   Ֆիզիկական BP Նկար 1.21.   Շախմատաձև՝  ֆիզիկական  BP-ը Քանի  որ  բիթային  գծերի  ոլորապտումները  փոխում  են  բջիջների  բիթերի բաշխումը  հիշողության  զանգվածում,  ակնհայտ  է  դառնում,  որ բիթային  գծերի ոլորապտումները  ևս  էական  ազդեցություն  ունեն  թեստավորման  ալգորիթմի արդյունավետության  վրա:  Միանշանակորեն  կարելի  պնդել, որ  հիշողության թեստավորման  համար լավագույն  թեստային  BP  է  հանդիսանում «Բիթային Շախմատաձև»  (TCB)  BP-ը:  Այն  ապահովում  է  թեստավորման  համար  արժեքների լավագույն  բաշխումը  ֆիզիկական  մակարդակի  վրա՝  հիշողության  զանգվածում բջիջների  բիթային  գծերի  մակարդակում:  Նկար  1.21  բ.-ի  բջիջների  բիթային  գծերի արժեքների  պատկերը  համապատասխանում  է  «Բիթային  Շախմատաձև»  BP-ին:  TCB BP-նի  շնորհիվ  հիշողության  զանգվածում  յուրաքանչյուր  բջիջը,  բջջի  բիթային  գծերը միաժամանակ ստանում են  հակադարձ  արժեքները և՛ հարևան տողերում,  և՛ հարևան սյուներում (Տես՝ նկ.  1.21 բ.): ", "Մուտք/Ելք հանգույցների խճողումը Մուտք/Ելք  միացումների՝  հասցեական  բիթերի,  տվյալների  Մուտքերի  և  Ելքերի միացումների,  ՀՍ-ի  ղեկավարման  ազդանշանների  համատեղելիության  ապահովումը արտադրության  կողմից    ներկայացված      Մուտք/Ելք  «բարձիկների»  տեղաբաշխման նկատմամբ,  հիշողության  նախագծման  կարևոր  խնդիրներից  է:  Որպես  Մուտք/Ելք-րի տրամաբանական ներկայացում, հիմնականում՝ հիշողության սարքերում օգտագործվում  է  ելքերի  կանոնավոր  բաշխումը:  Օրինակ՝  մուտքային  տվյալները  {D0, D1,  D2…Dn},  կամ  ելքերը  {Q0,  Q1,  Q2…Qn}    ներկայացված  են  կանոնավոր  բաշխումով - 40 - (0,1,...,n) (Տես՝ նկ. 1.5բ., նկ.1.7), մինչդեռ՝ ֆիզիկական բաշխումը միկրոսխեմայի թիթեղի վրա  (GDSII  ֆայլում,  տես՝  նկ.  1.11),  կարող  է  էականորեն  տարբերվել՝  օրինակ  լինել հակառակ  ուղղությամբ {n, (n-1)…  2,  1,  0},  կամ  ել  հակադարձ  հայելային {n,  (n-1)…  (n/2),  0,  1,  …  (n/2-1)}:  ՊԴՀՍ-ի  պատվիրատուի  համար  Մուտք/Ելք միացումների  խճողման  վերաբերյալ  տեղեկատվությունը  նույնպես  կարևոր  մաս  է կազմում ՀՍ-ի մասին տեղեկատվության բազմության մեջ և պետք է արտացոլվի ՆՀՍ-ի կառուցվածքային մոդելում: ", "Վերոհիշյալ  օրինակներից  պարզ  է  դառնում,  որ  հիշողության  նմուշի  խճողման մասին  ինֆորմացիան  կարևոր  դեր  է  խաղում  այդ  նմուշի  թեստավորման  ԱՀ-ի արդյունավետության  բարձրացման  խնդրում:  Ինչպես  ցույց  է  տրված  [16]  և  [25]-ում, հիշողության  խճողման  կիրառումը  ԱՀ-ի  թեստավորման  ալգորիթմում  կարող  է  մինչև կիրառություններ,  որոնք  չեն  կարող  գործածվել  առանց  նմուշի  խճողման  մասին ինֆորմացիայի: Այդ կիրառություններից են՝ ա)    ՀՍ-ի  նմուշում  հիշողության    բջիջների  ֆիզիկական  դիրքերի    կոորդինատների հաշվարկումը: Բջիջի {X,Y} կոորդինատները անհրաժեշտ է լինում որոշել մի շարք կիրառությունների  աշխատանքի  ընթացքում:    Օրինակ՝  ՀՍ-ի  թեստավորման ընթացքում  թեստային  ալգորիթմը  հայտնաբերում  է  անսարքությունը  և անսարքության  պատճառը  հայտնաբերելու  և  հետազոտելու  նպատակով անհրաժեշտ է լինում պարզել անսարք բջջի ֆիզիկական դիրքը (կոորդինատները) հիշողության նմուշի  թիթեղում:  Այս դեպքում  թեստային  ալգորիթմը վերադարձնում է  անսարք բջջի  տրամաբանական  հասցեն  և «Ելքի» տրամաբանական  համարը  անսարք  բառում,  պետք  է  մուտքային  այս  երկու տվյալների  հիման  վրա  հաշվարկել  անսարք  բջջի  ֆիզիկական  դիրքի կոորդինատները:  Հասկանալի  է,  որ  այս  դեպքում  պետք  է  հաշվի  առնել  նմուշի տողերի,  սյուների,  Մուտք/Ելքեր,  գոտիների  և  պահեստային  սյուների/տողերի խճողումները: ", "- 41 - բ) Նմուշների օգտակար ելքի հաշվարկի ժամանակ մուտքային տվյալներից են նմուշի ողջ մակերեսը և հիշողության զանգվածի մակերեսը: Այս տվյալները հաշվարկվում են գոտիների բաշխման և հիշողության բջջի չափերի և քանակի մասին տվյալների հիման վրա: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
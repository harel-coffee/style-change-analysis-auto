{"paragraph_source_docs": [1, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 1, 2, 2, 1, 0, 2, 0, 0, 1, 2, 0, 2, 0, 2, 0, 0, 1, 0, 1, 0, 1, 2, 0, 2, 0, 0, 0], "source_docs_file": "Informatics and Computer Systems.json", "paragraphs": ["-ի 𝑃𝑃𝑃𝑃𝑠𝑠 𝑃𝑃𝑃𝑃𝑖𝑖 ելքային  արժեքը  կարող  է  օգտագործվել  որպես մուտքային  արժեք 𝑃𝑃𝑃𝑃𝑖𝑖 հետագայում,  կամ  նեյրոնային  ցանցից  որպես  ելքային  արժեք: ", "Աղյուսակ 4․ Հրամանների և հեշերի արտապատկերումը Հրամաններ ………  ……………………... Stotal  CANCEL_MAKING Բանալու  ձևավորման  հարցմանը  ուղարկվող  պատասխանում,  բացի  ձևավորված բանալուց, հարցման գլխամասին ավելացվում է նաև այդ բանալու 128 բիթ երկարությամբ եզակի նույնականացման նշիչից՝ PKID-ին։ Այսպիսով ֆայլի ընդհանուր ծավալը համարժեք է    W  =  |R|  +  |G|  +  2  բանաձևի  արժեքին,  որտեղ  |R|,  |G|  և  |PKID|  համապատասխան տվյալների  երկարություններն  են։  Դասական  տարբերակում,  որտեղ  M  =  N  =  8,  ծավալը դառնում է  W = 130։ Արդյունքում գաղտնի բանալու ձևավորման գործընթացն ավարտելուց հետո  այդ  բանալին  և  PKID  ուղարկվում  են  որպես  պատասխան  բանալու  ձևավորման հարցման համար։ ", "Աղյուսակ 5․ Ձևավորված բանալու ձևաչափը Տվյալների հերթականությունը  M Անհրաժեշտ ծավալը M * N M * N Քայլ նշված հարցումների դասակարգումն իրականացվում է գաղտնահամակարգին  տրված    կարգաբերումների  միջոցով։  Հարցում  կատարած  սարքի կարգաբերումների  ստացման  համար  օգտագործվում  է  հարցման  մեջ  առկա  ինտերնետ իրի  հասցեն  կամ  հնարավորության  դեպքում`  գլխամասում  առկա  եզակի  MAC  հասցեն։ ", "Դասակարգման արդյունքում պարզ է դառնում հարցման տեսակը, որը կարող է լինել կամ հեշային,  կամ  գաղտնագրային։  Հեշային  հարցման  պարագայում  հարցման  մեջ  պետք  է առկա  լինեն  նաև  KFI(KeyFramIndex),  PKID,  Salt  և  VH(ValidationHash)  տվյալները,  որոնք օգտագործում են հարցման վավերականացման համար։ ", "Աղյուսակ 6. Հաղորդագրությունների ձևաչափը KFI Մարմին VH Salt N / 2 bit Գլխամաս Referrer | UID | MAC Քայլ  3 ․1-ում  օգտագործելով  հարցման  գլխամասում  առկա  PKID-ում  գտնվում  է համապատասխան  բանալին,  որի  միջոցով  կատարվում  է  հարցման  նույնականացում  և հրամանի բացահայտում։  Վերոհիշյալ գործողություններն իրականացվում են ատենախոսությունում  մշակված  ալգորիթմի  միջոցով,  որը  բաղկացած  է  չորս  հիմնական փուլից։ ", "Մշակված  մեթոդի  նկարագրությունը:  Օբյեկտը  մեծ  ճշտությամբ  ճանաչելու նապատակով պատկերը բաժանում ենք 4 մասի, ինչպես պատկերված է Նկար 2.4-ում: ", "Պատկերի չափերը նշանակենք -ով, իսկ մասերի չափերը՝ -ով։ ", "Շարժական բանալուն հարցում ուղարկող կողմը ունենալով նույն գաղտնի բանալին կարող  է  հաշվարկել -ն։  KFI  արժեքի  հաշվարկը  բերված  է  ստորև,    որտեղ դա 𝐶𝐶𝑘𝑘 կատարվող հրամանի համարն/ինդեքսն է, իսկ ընդհանուր հրամանների քանակն է։ ", "Պատկերը  բաղկացած  է  պիքսելներից,  որը  կարելի  է  ներկայացնել  որպես թվային  մատրից  [50]:  Սկզբնական  պատկերը  նշ.  լատինատառ  A  տառով:  A-ն սկզբնական  պատկերի    թվային  մատրիցն  է,  որի  յուրաքանչյուր  տարր  իրենից ներկայացնում է 1 պիքսել՝ եռաչափ վեկտոր (բանաձև 2.1): ", "Ցանկացած վավեր հարցումից հետո K փոփոխականի արժեքը մեծացվում է մեկով, եթե K < N, այլապես K ստանում է 0 արժեք, և R մատրիցի R[n, m-1]  մասնիկը տեղափոխվում է առաջին ինդեքս և վերադասավորում այն, որի շնորհիվ G մատրիցում նշված ինդեքսների արժեքներից ձևավորված KK բազմությունը դառնում է ամբողջովին տարբեր համեմատած մինչև R-մատրիցում կատարված ձևափոխություների հետ։ Երբ տեղափոխումների քանակը հասնում է N * M – 1, ավարտվում է առաջին փուլը և  մինչ 2-րդ փուլին ացնելը կատարվում R  մատրիցի  «transpose»  փոխարկում:  Նախ  տվյալ  փոխարկման  համար  օգտագործելով միաչափ  ինդեքսը,  հաշվարկվում  է  ամեն  մասնիկի  երկչափ  ինդեքսը    հետևյալ  ձևով այնուհետև  կատարվում  է  նոր  ինդեքսի [𝑖𝑖  =  𝑀𝑀𝑀𝑀𝑀𝑀ℎ. 𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓(𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛/𝑁𝑁),   𝑗𝑗  =  𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛 % 𝑁𝑁] հաշվարկում և այդ 2 ինդեքսներին համապատասխան արժեքների փոխարկում։  Տվյալ  գործողությունը  կատարվում  է  ամեն  մատրիցի  մասնիկի  համար։ ", "𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛  =  𝑗𝑗  ∗  𝑁𝑁  +  𝑖𝑖 Արդյունքում  հնարավոր  է  դառնում  կիրառել  առաջին  փուլում  նկարագրված  նույն գործողությունները  ձևափոխված  մատրիցի  վրա  և  ստանալ  տարբեր  բանալիներ  առանց կրկնվելու հավանականության։ ", "Նկար 34.Մշակված նեյրոնային ցանցի օրինակ 12 թաքնված նեյրոնով: ", "𝑖𝑖  =  𝑀𝑀  −  𝑀𝑀𝑀𝑀𝑀𝑀ℎ. 𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓𝑓(𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛/𝑁𝑁) −  1;  𝑗𝑗  =  𝑁𝑁  − 𝑖𝑖𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛 % 𝑁𝑁  −  1;   𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛𝑛  =  𝑗𝑗  ∗  𝑁𝑁  +  𝑖𝑖 գործողությունները` ներառյալ  «transpose» փոխարկումը, որին որպես լրացում կատարվում է  մատրիցի  տողերի  փոխարկումը։  Վերոհիշյալ  փոխարկումը  ստացվում  է  յուրաքանչյուր մասնիկի` իրեն համապատասխան մասնիկով փոխարկմամբ, որը հաշվարկվում է հետևյալ կերպ՝ ։ Այս փոխարկումը  նման է մատրիցի  90°-ի թեքմանը։ ", "(𝑁𝑁  −  𝑖𝑖  −  1)   ∗  𝑁𝑁  +  𝑗𝑗 համար  կատարվում  է  մատրիցի  «transpose»  փոխարկումը  և  սյուների  փոխարկում։  Սյան փոխարկման  համար  ամեն  փոխարկվող  մասնիկին  համապատասխան  մասնիկը հաշվարկվում է հետևյալ կերպ ։ ", "𝑖𝑖  ∗  𝑁𝑁  +  𝑁𝑁  −  𝑗𝑗 –  1 մասնիկների փոխարկում ըստ տեղերի, այնուհետև` ըստ սյուների։ ", "Նշված  հինգ  փուլերի  ընթացքում  կատարվող  ձևափոխություների  օրինակը ներկայացված  է  նկ․  11-ում։  Այս  ձևափոխություների  արդյունքում  հնարավոր  է  ձևավորել Օգտվելով  շարժական  բանալու  կառավարման  վահանակից`  հնարավոր  է կարգավորել այն հարցումները, որոնք պետք է հսկվեն առաջարկած գաղտնահամակարգի կողմից։  Կարգավորման  համար  օգտագործվում  է  պարզ  ինտերնետ  իրերի  տվյալների փոխանակման  վերջավոր  հասցեն,  որը  հսկման  ցուցակում  ավելացնելուց  հետո ապահովում է  ինտերնետ իրերի ելքային և մուտքային հարցումների անվտանգությունը։ ", "Առաջարկված հեշավորման դասի վրա հիմնված հրամանների փոխանակման համակարգը համեմատվել  է  նաև  այլ  հայտնի  ալգորիթմների  հետ  արագագործության  առումով,  որի արդյունքները  ներկայացված  են  աղյուսակ  7-ում։  CMP  (Command  Message  Protocol)  դա առաջարկված գաղտնահամակագրի կարճ հապավումն է։ ", "Վերցվում  է  3-րդ  պատկերը,  որը  սպիտակ  է  (Նշ.  D  տառով):  Նոր  հայտնված օբյեկտը  կպատկերենք  3-րդ  պատկերում  սև  գույնով:  Ընթացիկ  E  պատկերի յուրաքանչյուր  պիքելի  արժեքից  հանելով տարբերության  գործակիցը կստանանք պատկերը, որը գունային ինտենսիվութամբ  շատ մոտ է A պատկերին: ", "-ում  յուրաքանչյուր  պիքսել  արժեքվ  շատ  մոտ  է  համապտասխան  պիքսելին  A պատկերում: ", "Նկ.11. Փուլերի ընթացքում R մատրիցի ձևափոխման օրինակը Աղյուսակ 7. Առաջարկված գաղտնահամակարգի արագագործության համեմատականը Կատարման քանակը Ժամանակը միլիվայրկյաններով AES 128 RSA 1024 CMP SHA 256 CMP SHA 384 CMP SHA 512 Եթե  հարցումը  պարունակում  է  այնպիսի  տվյալներ,  որոնք  հրամաններ  չեն,  ապա իրականացվում  է  համապատասխան  վերահասցեավորում`  օգտագործելով  HTTPS արձանագրությունը, որի կապի հաստատման գործառույթի (handshake)  ընթացքում որպես գաղտնագրման  ալգորիթմ    ընտրվում  է  AES։  Շարժական  բանալին,  ստանալով  անլար ցանցին  միացած  սարքավորումներից  հարցումներ,  նախքան  վերահասցեավորումը ստուգում է  այդ հարցումների վերջնական հասցեներին համապատասխան կարգաբերումների  գոյությունը։  Եթե  այդպիսի  կարգաբերումներ  գոյություն  չունեն, հարցումն ուղարկվում է առանց փոփոխության[44]: ", "HTTPS արձանագրության մեջ օգտագործվող AES ալգորիթմի արագացման համար օգտագործվել  են  Intel  AES-NI  լրացումները,  որը  թողարկվել  է  հատուկ  Intel  ընկերության պրոցեսորների,  մասնավորապես՝  շարժական  բանալու  սարքի  համար։  Շնորհիվ  այդ լրացումների  հնարավոր  է  AES  ալգորիթմում  օգտագործվող  հաշվողական  մի  քանի հրամաններ  կատարել`  օգտագործելով  ընդամենը  մեկ  հատուկ  հրաման:  Հատուկ հրամաններից  են  ՝  AESENC(AES  Encrypt  Round),  AESENCLAST  (AES  Encrypt  Last  Round), AESDEC  (AES  Decrypt  Round),  AESDECLAST(AES  Decrypt  Last  Round),  AESKEYGENASSIST (AES Key Generation Assist), AESIMC(AES Inverse Mix Columns): ", "Նկ. 12. Շարժական բանալիում առկա կարգաբերումների օրինակ Քանի որ մշակված գաղտնահամակարգը ներդրվելու է ցանցում գտնվող լրացուցիչ սարքում,  կատարվել  է  գոյություն  ունեցող  սարքերի  հետազոտում`  հնարավոր սահմանափակումները հայտնաբերելու նպատակով։ Հաշվի առնելով այդ հետազոտության արդյունքները և վերոհիշյալ պահանջները, ստեղծվել են շարժական բանալու անհրաժեշտ բնութագրերը,  որոնք  են՝  բարձր  արտադրողականությունը,  անլար  ցանց  տրամադրելու հնարավորությունը և լրացուցիչ ծրագրային ապահովման ներդրման հնարավորությունը։ ", "դատարկ/ֆիկտիվ  առաջադրանքներից իրական  առաջադրանքների բաշխման նկատառումներով: Տվյալ դեպքում ցանցի ամեն հանգույց ունենում է  ուղղորդիչ  բնորոշ  rotor-router  մոդելին  և    իրական  առագադրանքը  մուտք լինելով որևէ հանգույցի, զբաղեցնում է տվյալ հանգույցի հասանելի տիրույթը վերջինիս  ազատ  լինելու  դեպքում,  կամ  տեղափոխվում  է  հարևան  հանգույց ըստ տվյալ հանգույցի ուղղորդիչի ուղղության: Այս գործողությունը կրկնվում է այնքան  մինչև  առաջադրանքը  կգտնի  ազատ  հանգույց  և  կզբաղեցնի համապատասխան  տիրույթը:  Հիշեցնեմ  որ  փակ  rotor-router  համակարգում ավազահատիկը  պտտվելով  վերջավոր  քանակությամբ՝  անցում  է  կատարում բոլոր  հանգույցներով  և  վերադառնում  է  հին  դիրքին,  ինչպես  նաև վերադառնալուն պես մոդելը արդեն ընդունած է լինում սկզբնական վիճակը: ", "Ինչպես  նաև  անդրադառնալով  rotor-router  համակարգի  բաժին  2,3-ում նկարագրված  առանձնահատկությանը,  կարող  ենք  համոզված  լինել,  որ ստատիկ(կատարման  ժամանակը  անվերջ  է)  առաջադրանքների  մեկ  կետից ավելացման  դեպքում  կլաստերային  համակարգում  կունենանք  համասեռ բաշխվածություն  տվյալ  հանգույցի  շուրջ,  կամ  այլ  կերպ  ասված,  մեկ հանգույցում  առաջադրանքներ  ավելացնելու  դեպքու  կարող  ենք  համոզված լինել,  որ  տվյալ  հանգույցից հեռավորություն  ունեցող  հանգույցում  լցված առաջադրանքների քանակը չի կարող ավել լինել հեռավորության վրա գտվնող  հանգույցի  առաջադրանքների  քանակից:  Ասեմ  ավելին  մեր  կողմից r − 1 առաջ է քաշվել հիպոթեզ, որ դինամիկ(կատարման ժամանակը վերջավոր է) խնդիրների  դեպքում  ևս  կունենանք  նույն  պատկերը:  Տրված  հիպոթեզի իսկությունը երևում է SandScheduler ծրագրային համակարգի միջոցով նկար Նկար 36. SandScheduler-ը rotor-router վիճակում: ", "Նկար 2.6․  Երկրորդ պատկերում առկա երեք օբյեկտները, որոնցից միայն երկուսն է աչքին հասանելի (ավտոմեքենաները), իսկ երրորդը թաքնված է (որը փոքր կենդանի է): ", "Նկար 2.7․  Երեք օբյեկտների առկայությունը ներկայացված կարմիր շրջանակներում, պատկերում: ", "Նկար 37.SandScheduler համակարգում շրջաններով տեսաբերում: ", "•  Գնահատվել  է  մեթոդի  պիտանիությունը՝  հիշողության,  հաղորդակցման,  հաշվո- ղական գերբեռնվածության և հարձակումների նկատմամբ կայունության առումներով: ", "Հայտնաբերման որակի  և  արագագործության բարձրացման համար իրագործվել է ֆոնային զատման մեթոդի ձևափոխություն։ Իրականացվել են հետևյալ երեք փուլերը։ ", "ԲԱՇԽՎԱԾ ՑԱՆՑԵՐՈՒՄ ԳՈՐԾԱՌՈՒՅԹՆԵՐԻ ԱՄԲՈՂՋԱԿԱՆՈՒԹՅԱՆ ՈՒ ԱՆՎՏԱՆԳՈՒԹՅԱՆ ԱՊԱՀՈՎՄԱՆ ՄԵԹՈԴԻ ՄՇԱԿՈՒՄ արձանագրության մշակում Իրերի ինտերնետ միջավայրը  տարատեսակ իրերից բաղկացած բաշխված ցանց է, որի կողմից տրամադրվող գործառույթը/ծառայությունն  իր հերթին բաղկացած է տարբեր իրերի կողմից կատարած գործառույթներից։ Վերոնշյալ բաշխված ցանցի կառավարումը, գործառույթների հաջորդականության վերահսկումը և գործառույթների ամբողջականության ապահովումը  կարևոր  խնդիր է ։ ", "Հաշվի առնելով վերոգրյալը` առաջարկվում է իրերի ինտերնետի մոդելը կառուցել ուղղորդված  ծառի  տեսքով,  որտեղ  հանգույցներն  ինքնակազմակերպվող  են,  իսկ հրահանգների  և  տվյալների  փոխանակումը  հանգույցների  միջև  վերահսկվում  է տեղեկատվության անվտանգության և ամբողջականության մեխանիզմների միջոցով։ ", "Նկար 39.SandScheduler համակարգը որոշ անջատված հանգույցներով: ", "Ցանցի  կառուցումը  բուրգի  վերջին  շերտում․  Տեսահսկման  ժամանակ պատկերում  փոքր  օբյեկտները  հետաքրքրություն  չեն  ներկայացնում։  Օգտատերը հնարավորություն  ունի  սահմանելու  իրեն  անհրաժեշտ  չափը։  Ֆոնում  սահմանված չափից փոքր օբյեկտները կանտեսվեն համակարգի կողմից: Չափը սահմանելուց հետո ցանցը կկառուցվում է ըստ նշված չափի (Նկար 2.10)։ ", "Գործառույթների  կառավարումը  կատարվում  է  ձևաչափում  նկարագրված հաջորդականության  շնորհիվ,  որը  M  չափի  զանգված  է  բաղկացած  168  բայթ երկարություն ունեցող Ni տեղեկատվությունից (աղյուսակ 9), որտեղ առաջին 128 բայթը եզակի նշիչ (UID) է կամ IP6 հասցե։ Հասցեին հաջորդող 32 բայթ երկարությամբ Լ տվյալը ցույց  է  տալիս  ձևաչափի  մարմնում  գտնվող  գաղտնագրված  տեղեկատվության  չափը: ", "Օբյեկտների  հայտնաբերումը․ Դիտարկվում  է ցանցի յուրաքանչյուր կետ, եթե կետի  գունային  {R,G,B}  արժեքը  տարբերվում  է  ֆոնից,  ապա  այն  հանդիսանում  է օբյեկտի  կետ։  Տվյալ  կետի  համար  դիտարկվում  են  8  հարևան  կետերը  և համեմատվում ֆոնային պատկերի հետ (նկար 2.11): ", "Աղյուսակ 9. Հաղորդագրության գլխամասի ձևաչափը N1 գործառույթ N2 գործառույթ Nm գործառույթ UID| IP6 UID | IP6  L UID | IP6 Տվյալների գաղտնագրումը  կատարվում է 1-ից մինչև N քանակի բանալիներով, որտեղ  N  պարամետրը  փոքր  կամ  հավասար է  ցանցում  առկա  ինտերնետ  իրերի  թվին։ ", "Մեթոդի  արագագործությունը  ուղիղ  համեմատական  է  կատարվող  ընդհանուր պիքսելային ստուգումների հետ։ ", "Շնորհիվ  L  պարամետրի՝  հաղորդագրության  ձևաչափի  մարմնում  կարելի  է  գտնել կոնկրետ  ինտերնետ  իրի  հաղորդագրության  սկզբնական  և  վերջնական  արժեքները հետևյալ բանաձևով: ", "Lstart = L0 + L1 +···+ Li-1,  Lend = Lstart + Lend,           D(Ni) = Lstart, …, Lend                               (3.1) Հարցում ուղարկող հանգույցը գտնվում է D–1 կամ D +1 խորության վրա, որտեղ D- ն տվյալ հանգույցի խորությունն է։ Նկարագրած ձևաչափի կիրառումը հնարավորություն է տալիս ապահովել ինտերնետ իրերին պատկանող տեղեկատվական անվտանգությունն այլ ինտերնետ իրերից։ ", "գոյություն ունեցող լուծումների համամետական վերլուծությունը: ", "Կարևոր  է  նշել,  որ  հեշը  ստացվում  է  կատարած  գործառույթի  ելքային  արժեքը օգտագործելով, որպես բանալի։ ", "Նշենք  նաև,  որ    «CA  Simulator»  փաթեթի  միջոցով  կարելի    է  կատարել բազմաթիվ  տարանջատված  համատեղ  հետազոտություններ,  և  պահպանել հետազոտությունների  ընթացքում  կամայական  պահին  մոդելի  վիճակը՝  հետագա ինչպես  համատեղ,  այնպես  էլ  միանձնյա  հետազոտությունների  համար:    «CA Simulator»-ը ստեղծվել է օգտագործելով .Net միջավայրը և C# լեզուն, իսկ սերվերի տեղակայման  համար  ընտրվել  է  Microsoft  Azure-ը:  Իրականացման  ընթացքում պահպանվել  են  ՕԿԾ-ի  (OOP)  բոլոր  ստանդարտները  և  SOLID-ի  սկզբունքները, որոնք  խիստ  անհրաժեշտ  են  այնքանով,  որ  հնարավորություն  են  ընձեռում  ավելի դյուրին կերպով կատարել համակարգի ֆունկցիոնալ ընդլայնումը և հավելումը այլ բջջային ավտոմատերի մոդելներով: ", "Այսպիսով,  ներկայացրած  արձանագրության  շնորհիվ,  հարցումից  կախված, ինֆորմացիան  փոխանցվում է ցանցի հանգույցին, որը. •  իրեն  հասանելի  մասնաբաժնի  համար  իրականացնում  է  վերծանում  և  դրան համապատասխան գործառույթ, •  ձևավորում  է  վերծանված  մասնաբաժնի  հեշը,  որը  հավելվում  է  վերոհիշյալ հաղորդագրության մեջ՝ գաղտնիքի մասնաբաժնի  ամբողջականության վերահսկման նպատակով։ ", "Այսպիսով, եթե կատարենք համեմատական վերլուծություն  արդի համակարգերի և «CA Simulator»-ի միջև ապա կունենանք Աղյուսակ 1-ի պատկերը: ", "Կեղծ  թիրախների  առկայությունը  հանգեցնում  է  հայտնաբերման  սխալ արդյունքի և  ալգորիթմի  ավելորդ ժամանակի ծախսի:  Տվյալ մեթոդը նպատակաուղղված է իրագործել հետևյալ կետերը․ •  Որոնել կեղծ թիրախները։ ", "Այն  դեպքում,  երբ  հանգույցը,  որին  փոխանցվել  է  վերոհիշյալ  ձևաչափի հաղորդագրությունը  և,  որն  իր  կարգային  համարը չի  հայտնաբերում  այդ հաղորդագրության  մեջ,  ուստի  ազատ  է  գաղտնիքի  որևէ  մասնաբաժին  վերծանելուց, կառավարումը փոխանցում է հաջորդ հանգույցին՝ ապահովելով միայն հեշավորումը։ ", "•  Զատել կեղծ թիրախները, իրական թիրախի հայտնաբերման ժամանակ։ ", "Հաջողության  դեպքում  հանգույցը  որոշում  է  ստացված  հաղորդագրությունը փոխանցել անհրաժեշտ հանգույցին՝ ըստ UID-ի։ Ամեն հաջորդ հանգույցում ձևավորված հեշերի  շղթան  երաշխիք  է՝  ցանցի  գործողությունների  վավեր  լինելը  հավաստիացնելու համար։ ", "Այսպիսով,  առաջարկվել  են  իրերի  ինտերնետ  միջավայրի  համար  մշակված արձանագրությունը, ձևաչափը, որն ունակ է տեղեկություն հաղորդել այլ հանգույցների՝ տվյալ  հանգույցում  անոմալիաների    իրազեկման  համար  և  արգելակել  ամբողջ համակարգի  աշխատանքը՝  թույլ  օղակի  գործոնով    բացառել  համակարգի  հետագա գործողությունը։ Առաջարկված մեթոդը, որպես հեշային ֆունկցիա կարող է օգտագործել ցանկացած գաղտնակայուն հեշ ֆունկցիաներից մեկը, բայց հաշվի առնելով ինտերնետ իրերի  առանձնահատկությունների  փաստը,  առաջանում  է  գոյություն  ունեցող  հեշ ֆունկցիաները  հետազոտելու  և  տվյալ  մեթոդին  համապատասխան  հեշ  ֆունկցիա գտնելու անհրաժեշտություն։ ", "Տեղեկատվության  անվտանգության  ապահովման  համար  կարևոր  նշանակություն ունի hեշ ֆունկցիաների կիրառումը: Տվյալ ոլորտում առաջարկված  լավագույն լուծումներից կարելի  է  առանձնացնել    քաոսային  տեսության  վրա  հիմնված  հեշ  ֆունկցիաները:  Այդ ֆունկցիաներն  օգտագործում  են  միաչափ  արտապատկերումներ,  ինչպիսիք  են լոգիստիկային և տենտային արտապատկերումները, կամ կիրառում են բարդ բազմաչափ արտապատկերումներ, որոնք, որպես կանոն, անվտանգ չեն և  հիմնականում հեշտությամբ են  գրոհի ենթարկվում [45]։ "]}
{"paragraph_source_docs": [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], "paragraphs": ["Մատրիցի  եղանակը:  Պատկերների  վրա  «Blur»  իրագործելու  ալգորիթմի հիմքում  ընկած  է    Կերնելի  մատրիցի  կիրառման  սկզբունքը:  Սխալանքի  տիրույթը մեծացնելու  համար  կիրառում  ենք  նմանատիպ  սկզբունք:  Հնարավոր  է  վերցնել ցանկացած  չափի  Կերնելի  մատրից,  սակայն  այս  օրինակում  պարզության  համար դիտարկենք 3x3 չափի մատրից: ", "Անցնելով  համակարգի  կողմից  պահպանված  սխալանքի  պատկերի (W մատրիցի)՝  յուրաքանչյուր  պիքսելի  վրայով  կատարում  ենք  ստուգում՝  տվյալ  պիքսելը հանդիսանում  է  սև՞,  թե՞  սպիատակ:  Եթե  պիքսելը  սև  է,  ապա  կիրառում  ենք մատրիցային եղանակը (Նկար 2.17): ", "Նկար 2.17. Պիքսելի շրջակայքը սև պիքսելներով լրացնելու մատրիցային եղանակը: ", "i,  j-ին  համարում  ենք  W  մատրիցի  ընթացիկ  պիքսելի  դիրքը,  և  շրջակայքի -j 1;-(i (i; -j -j  1;+(i 1),+j (i; պիքսելները սևացնում ենք: ", "Նոր ստացված տիրույթի արժեքները պահպանում ենք նոր W ′ մատրիցում: ", "Բոլոր  սև  պիքսելների  շուրջը  գտնվող  սպիտակ  պիքսելները  փոխարինելով  սև պքիսելներով՝ սև տիրույթը մեծանում է (Նկար 2.18): ", "Նկար 2.18. Մեծացված տիրույթը: ", "Այնուհետև  ընթացիկ  պատկերում  փորձելու  ենք  գտնել  օբյեկտ՝  անտեսելով նախօրոք հայտնաբերած սխալանքի տիրույթը (W ′ մատրիցի սև պիքսլեները): ", "Նկարահանումը  սկսելուց  համակարգի  կողմից  անմիջապես  պահպանվում  է սկզբնական  պատկերը:  Այն  կնշանակենք լատինատառ  A  –ով,  իսկ  ընթացիկ պատկերը՝  C-ով:  A  մատրիցը  n,  m  չափանի  մատրից  է:  Ակնհայտ  է,  որ  C    և  W ′ մատրիցների չափսերը նույնպես կլինինեն n, m: ", "W ′ մատրիցի ցանկացած (i; j) պիքսել իրենից ներկայացնում է եռաչափ վեկտոր =′ Wij ijW ijW ijW (2.13) Բլոկ-սխեմայում  բերված  է  սխալանքի  տիրույթի  անտեսման  միջոցով  պատկերի համեմատման ալգորիթմը (Նկար 2.19): ", "(2.13): ", "Նկար 2.19. Սխալանքի տիրույթի անտեսման միջոցով պատկերների համեմատման ալգորիթմական բլոկ-սխեման: ", "Եզրակացություն․  Այսպիսով՝  այս  փուլում  մշակվել  է  կեղծ  թիրախների որոնման  և  անտեսման  մեթոդ  [53]:  Մեթոդը  հավելում  է  հանդիսանում  նախորդ`  2.1.1 ենթավերնագրում նկարագրված հայտնաբերման մեթոդի համար։ ", "Մեթոդի  իրականացման  համար  մշակվել  են  հետևալ  քայլերը՝  1)  կեղծ թիրախների որոնումը, 2) ալորիթմ՝ պոտենցյալ կեղծ թիրախների առաջացումը հաշվի առնելու համար և 3) կեղծ թիրախների անտեսման ալգորիթմը։ ", "Մշակված  մեթոդը  նպաստում  է  տեսահսկման  հմակարգի  անսխալ  և համեմատաբար ավելի արագ աշխատանքին: ", "Ներածություն:  Այս  ենթավերնագրում  քննարկում  ենք  օբյեկտների  ճանաչման գործընթացը՝  հիմնված  Լավագույն  ԱՄԲ(<<Արհեստական  մեղուների  բնակավայր>>) մոտեցման  վրա [54-57],  որն էլ  իր  հերթին  հիմնված է  ձևանմուշների համապատասխանեցման  վրա՝  օգտագործելով  թիրախ  օբյեկտին  և  ձևանմուշի օբյեկտին  համապատասխանող  RGB  մակարդակի  հիստագրի  միջև  եղած տարբերությունը:  Հետազոտությունը  նպատակ  ունի  կատարելագործելու լուծման որակը,  որը  չափվում  է՝  ելնելով  թիրախ  օբյեկտի  հայտնաբերման  ճշգրտությունից  և օպտիմալացնելու այն ժամանակը, որն օգտագործվում է խնդիրը լուծելու համար: ", "Ճանաչման  գործընթացը  տարբեր  տեսահսկման  միջավայրերում  ապահովելու համար  ստեղծվել  են  հիմնական  օբյեկտների  տեսակներին  համապատասխան ձևանմուշներ։  Մշակվել  է  նաև  ծրագրային  ֆունկցիոնալ  բլոկ,  որը  որպես  մուտքային տվյալ  վերցնելով  թվային  պատկերը,  վերածում  է  համապատասխան  ֆորմատով ձևանմուշի, որը կարող է օգտագործվել ճանաչման գործընթացում։ ", "Մշակվել  է  նաև  մեթոդ,  որը  թույլ  է  տալիս  համակարգից  օգտվողին  կատարել ձևանմուշների  կոնֆիգուրացիա։  Այսինքն՝  օգտատերը  հնարավորություն  կունենա ձևանմուշները  դասավորել  ըստ  նախապատվության՝  ելնելով  տեսահսկվող  տարածքի առանձնահատկությունից։ ", "Օրինակ՝ քաղաքային  տարածքներում  փողոցի տեսահսկման  համար  առաջինը  նախապատվությունը  կտրվի  ավտոմեքենաներին, մոտոցիկլերին, մարդկանց, ապա՝ մյուս հնարավոր օբյեկտներին։ Եթե ունենք 10 նմուշ, թիրախն ավտոմեքենա լինելու դեպքում համակարգը առաջինը կհամեատի ամենամեծ նախապատվություն  ունեցող  նմուշի՝  ավտոմեքենայի  հետ,  կճանաչի  թիրախը  և կավարտի աշխատանքը՝ չհամեմատելով մյուս նմուշների հետ։ Այս կերպ կխուսափենք ավելորդ ժամանակի ծախսից։ ", "Առաջին  հերթին  կխոսենք  ձևանմուշի  համապատասխանեցման  ֆունկցիայի մասին,  այնուհետև՝  թե  ինչպես  կարելի  է  լավագույն  ԱՄԲ-ն  կիրառել  օբյեկտների հայտնաբերման համար: ", "Ձևանմուշի համապատասխանեցման ֆունկցիան: Այս աշխատանքում, թիրախ օբյեկտին համապատասխանող RGB մակարդակի հիստագրերը և ձևանմուշի օբյեկտի միջև  եղած  տարբերությունը  ներկայացվում  է  որպես  համապատասխանության  չափի ֆունկցիա (matching measure function): ", "RGB  եռաչափ  վեկտորի  անկախ  կանալներիի  արժեքների  վրա  կառուցված գրաֆիկները  համեմատվել  են  յուրաքանչյուր  տոնային  արժեքի  պիքսելների  քանակի հետ, արդյունքում հաշվարկվել են թիրախի և նմուշի պատկերների հիստագրերը։ ", "Նշանակենք –ը  թիրախ  օբյեկտի  հիստագիրը, –ը՝  ձևանմուշի  օբյեկտի հիստագիրը,  որտեղ  i-ն  կարող  է  ընդունել  արժեք  0-ից  մինչև  255-ը։  Վերջինս  RGB-ի յուրաքանչյուր ուղու մակարդակի արժեքն է, և x=(R,G,B). Այսպիսով՝ որտեղ որտեղ (2.14) որտեղ  (r,c)-ը  ցույց  են  տալիս  ձևանմուշի  պատկերի  վերին  ձախ  անկյան  MxN  չափի հարթության  կոորդինատները՝  թիրախ  օբյեկտի  պատկերի  նկատմամբ:  Եթե  թիրախ պատկերն ունի A×B չափը, ապա և : ", "Ավելի  պարզ,  Նկար  2.20-ը  ցույց  է  տալիս,  թե  ինչպես  պետք  է  ստանալ պատկերի հիստագիրը թիրախի նմուշից, որն ունի 8×6 պիկսել մեծություն և ձևանմուշը պիկսելների  չափով,  որտեղ  Նկար  2.20-ը  ներկայացնում  է  յուրաքանչյուր  պիկսելի արժեքը թիրախի և ձևանմուշի պատկերներում: ", "Նկար 2.20. Թիրախային և նմուշային պատկերների յուրաքանչյուր փիքսելի արժեքը: "], "source_docs_file": "Informatics and Computer Systems.json"}
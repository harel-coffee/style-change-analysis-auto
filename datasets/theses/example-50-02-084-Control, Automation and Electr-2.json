{"paragraph_source_docs": [2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2], "paragraphs": ["ՈՒղու  վրա  հիմնված  մեթոդների  առավելությւնն  է  գլոբալ  օպտիմումին  հասնելու պոտենցիալ հնարավորությունը, իսկ  թերությունն է մեծ ալգորիթմական բարդությունը: ", "Հակառակ  դրան՝  շղթայի  վրա  հիմնված  մեթոդների  առավելությւնն  է  փոքր ալգորիթմական  բարդությունը՝  (nlog(n)),  իսկ թերությունը՝  լոկալ  օպտիմումի առկայությունը: ", "Վերոհիշյալ երկու մոտեցումներն ունեն մեկ ընդհանուր թերություն, այն է, որ դրանք հաշվի  չեն  առնում  թվային  սխեմաների  տրամաբանությունը  սխեմայի  տարրերի աշխատանքի  տրամաբանական  հաջորդականությունը  տեղաբաշխելիս:  Հետևաբար, երկու  դեպքում  էլ  թույլ  է  արտահայտված  տեղաբաշխման  արդյունքի  և  սխեմայի աշխատանքի տրամաբանական կապը: ", "- 45 - Նշված  թերության  հաղթահարման  նպատակով  այս  ատենախոսությունում առաջարկված  և  մշակված  է  տրամաբանական  բլոկների  ֆիզիկական  կառուցվածքի սինթեզի նոր մոտեցում, որը հիմնված է տրամաբանական սխեմայի ռանգավորման վրա և  միտված  է  միջմիացումների  երկարության  և,  հետևաբար,  դրանցում  հապաղումների նվազեցմանը: ", "ԻՍ  ֆիզիկական  նախագծման  ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական առանձնահատկությունների  հաշվառման  առաջարկվող  մոտեցումը  ենթադրում  է հետևյալ խնդիրների հաջորդական լուծում.   նախագծվող  սխեմայի  տրամաբանական  մակարդակի  փականային  Verilog նկարագրության փոխակերպում ազդանշանների հոսքի գրաֆի (ԱՀԳ-ի),   սխեմայի տարրերի ռանգավորում,   տարրերի  տեղաբաշխումը՝  համաձայն  դրանց  ռանգավորման,  այսինքն՝ «փափուկ» բլոկի ստացում,   ստացված  «փափուկ»  բլոկի  տարրերի  վերատեղաբաշխում՝  հաշվի  առնելով կոնստրուկտիվ սահմանափակումները, այսինքն՝ «կոշտ» բլոկի ստացում։ ", "Այսպիսով,  կարևորվում  է  ԻՍ-երում  տարրերի  ժամանակային  ուղղորդմամբ տեղաբաշխումը՝ որպես սխեմատեխնիկական առանձնահատկությունների հաշվառմամբ  ֆիզիկական  կառուցվածքի  ստացման  միջոց։  Ներկայումս  գոյություն ունեցող  ժամանակային  ուղղորդմամբ  տեղաբաշխման  մեթոդները[3,20,40]  ունեն որոշակի թերություններ: Առաջարկվում է նոր մոտեցում՝ ԻՍ ֆիզիկական նախագծման ժամանակ  սխեմայի  ֆունկցիոնալ-տրամաբանական  առանձնահատկությունների հաշվառման համար։ ", "Տրամաբանական սխեմայի Verilog նկարագրից ազդանշանների հոսքի գրաֆի ստացման ավտոմատացված միջոցի մշակումը Ազդանշանների հոսքի գրաֆը բաղկացած է հանգույցներից (գագաթներից) և ուղղորդված կողերից, որտեղ ուղղորդված կողերը ներկայացնում են տվյալների կախվածությունը։ Նկ․ 2․ 1-ում պատկերված է (ԱՀԳ-ի) պարզագույն մոդել։ ", "Թվային  համակարգերում  սխալի  առաջացման  համեմատաբար  շատ  ցածր հավանականությունը  հնարավոր է  դարձնում  ազդանշանի  մեծ  ճշտությամբ փոխանցումը: Հեռահաղորդակցման թվային համակարգերը ավելի կայուն են կողմնակի աղմուկների  նկատմամբ  և  թվային  ազդանշաններն  ավելի  քիչ  են  ենթարկվում աղավաղումների:  Գոյություն  ունեն  նաև  թվային  կապի  համակարգերի  այլ  կարևոր առավելություններ  ինչպիսիք  են՝  դրանց  հուսալիությունը,  դրանցում  ներառված ինտերֆերենցիայից  պաշտպանման  գործառույթները,  կապուղու  կոդավորումը, ռադիոհաճախականային  սպեկտրի  արդյունավետ  օգտագործումը,  նախագծման  ցածր արժեքը,  թվային  համակարգերի  ծրագրային  ապահովումը,  ինչի  նպատակով կիրառվում  են  միկրոպրոցեսորներ,  թվային  կոմուտատորներ  և  մեծ  ինտեգրալային սխեմաներ: ", "Ի  տարբերություն  հատվածագծային  ինտերպոլացիայի  կիրառմամբ  հիշող սարքերի համար  թեստային լուծումներ  գեներացնող  ք^\"Ո_  կոմպիլյատորների  նախագծման բնութագրերի  արագ  գնահատման  մեթոդի  այս  մեթոդը  հնարավորություն  է  տալիս նախագծման  բնութագրերը  գնահատել  ինչպես  գծային  այնպես  էլ  պոլինոմիալ վարքագծի  դեպքում  մեկ  մոտարկման  ֆունկցիայի  միջոցով:  Մշակված մեթոդը  լուծում  է նանոչափական  հիշող  սարքերի  համար  թեստային լուծումներ  գեներացնող  ք^\"Ո_ կոմպիլյատորների  նախագծման  բնութագրերի  գնահատման  խնդիրներից  առաջինը: ", "Նկ․  2.3․   Ազդանաշանի  հոսքի  գրաֆի  հապաղման հանգույցով օրինակ Դինամիկ համակարգերի մաթեմատիկական մոդելավորման ծրագրերը վերաբերում են գրաֆային միջավայրի հիերարխիկ կառուցվածքային բարձր մակարդակի ծրագրերի ստեղծմանը  և  դրանց  մի  մասը  հիմնված  է  ղեկավարման  հոսքային  մոդելի  վրա[45]։ ", "Ղեկավարման  հոսքային  մոդելը  ծրագրավորման  մոդել  է,  որտեղ  հրամանները, պրոցեդուրաներն  ու  ֆունկցիաները  կատարվում  են  միայն  այն  ժամանակ,  երբ  բոլոր մուտքային  տվյալները  (փոփոխականներ,  արգումենտներ)  պատրաստ  են։  Ծրագրեր գրելու (մոդելների ստեղծման) համար օգտագործվում են գրաֆիկական լեզուներ, որոնց միջոցով իրականացվում է տվյալների գործընթացների՝ ֆունկցիոնալ սխեմաների, բլոկ - 48 - սխեմաների,  տեսքի  վերափոխման  նկարագրությունը։  Դիտարկենք  տրամաբանական մակարդակի  նկարագրության  վերափոխման  օրինակ,  հիմնված  ISCAS85  գրադարանի c17 verilog նկարագրության վրա [46]։ Ունենք` nand NAND2_1 (N10, N1, N3); nand NAND2_2 (N11, N3, N6); nand NAND2_3 (N16, N2, N11); nand NAND2_4 (N19, N11, N7); nand NAND2_5 (N22, N10, N16); nand NAND2_6 (N23, N16, N19։ ", "G1 G3 G3 G4 Ազդանշանների հոսքի գրաֆը պատկերված է նկ.2.4-ում։ ", "NAND2_0 G8 NAND2_4 G16 NAND2_1 G9 NAND2_5 G17 G2 G5 NAND2_2 G12 NAND2_3 G15 Նկ․ 2.4․  ISCAS85 գրադարանի c17 verilog տրամաբանական նկարագրության ազդանշանների հոսքի գրաֆը Վերլուծելով նկ․ 2․ 4-ը, կարելի է նկատել, որ ցանկացած տեղեկատվական հոսքում (G1,G8,G16…)  տվյալները  տարածվում  են  ազդանշանային  աղբյուրներից  դեպի ընդունիչները  (NAND2_0,  NAND2_4…)։  Ակնհայտ  է,  որ  մեկ  հոսքում  կարող  են  լինել ճյուղավորումներ, զուգահեռ ալիքներ և հակադարծ կապեր։  Զուգահեռ հոսքերը կարող են  լինել  մեկը  մյուսից՝  կախված  և  անկախ։  Ազդանշանների  հոսքի  գրաֆը  այսպիսի տեսքով  ներկայացնելու  համար  օգտագործվում  են  մի  քանի  տեսակ  բլոկներ։  Դրանցից են՝ ազդանշանների  աղբյուրները, ազդանշանների ընդուիչները և միջանկյալ բլոկները, որոնք  հանդիսանում  են  առաջին  երկուսի  համախումբը։  Այդ  բլոկներն  իրենց  հերթին լինում  են  մաթեմատիկական  գրրծողություններ՝  հաշվողական,  տրամաբանական, մատրիցային,  ոչ  գծային  և  այլն։  Verilog  նկարագիր  սինթեզելու  համար  պետք  է  օգտվել - 49 - SAED90  [47]  կամ  այլ  գրադարանից,  որտեղ  նշված  են  ԻՍ-երի  տրամաբանական նկարագրության բոլոր տեսակի բլոկները՝ NAND, AND, NOT, OR, NOR և այլն։ ", "թույլ կտան էլեկտրոնային նամակի միջոցով մեկ կամ մի քանի հեռախոսահամարներով միաժամանակ ուղարկել բջջային հաղորդագրություններ։ ", "Այսպիսով, նկարագրվել է ազդանշանների հոսքի գրաֆի աշխատանքի սկզբունքը, և կարևորվել  է  սխեմայի  Verilog  նկարագրից  ԱԳՀ-ի  ստացման  այնպիսի  մոտեցման մշակումը,  որով  շնորհիվ  հնարավոր  կլինի  խուսափել  անցանկալի  մեծ  հիշողության օգտագործումից և ստանալ ավտոմատացված միջոցի ցանկալի մեծ արագագործություն։ ", "առանձնահատկությունների հաշվառմամբ ֆիզիկական կառուցվածքի ստացման միջոց Տրամաբանական  մոդելավորման  ժամանակ  օգտագործվում  են  ֆունկցիոնալ մոդելների  բաղադրիչներ՝  տարրեր։  Ֆունկցիոնալ  մոդելը  հանդես  է  գալիս  «սև  արկղի» տեսքով,  որի  համար  մուտքային  և  ելքային  ազդանշանների  միջև  կապը  տրվում  է բուլյան հավասարումներով կամ ճշտության աղյուսակներով [48]։ Այդպիսի մոդելներում ներքին կառուցվածքը չի հաշվի առնվում։ Կոմբինացիոն տրամաբանական տարրական մոդելներից  են՝  AND,  OR,  NOT,  NAND  և  այլն,  որոնք  համապատասխանում  են  բուլյան ֆունկցիաներին։  Ժամանակային  հապաղումները հաշվի  առնող  մոդելներում ստեղծվում  են  ազդանշանների  հապաղումների  մեծություններ՝  տարրերի  մեկից  մյուսն անցում կատարելիս։ ", "Ատենախոսական  աշխատանքում  նախագծվող  ծանուցման  համակարգը պետք  է  պարունակի  և՛  նամակն  ուղարկողի,  և՛  հասցեատիրոջ  նախաձեռնությամբ ծանուցման  մեթոդների    համատեղ  իրականացումը։  Այն  պետք  է  հնարավորություն ապահովի՝ • Էլեկտրոնային նամակի ուղարկմանը զուգահեռ հրահանգավորել ծանուցման  գործընթաց՝  միաժամանակ  մեկ  կամ  մի  քանի  հասցեատերերի  բջջային հեռախոսահամարներին։ ", "Մոդելավորման  եղանակն ընտրվում է՝ հաշվի առնելով խնդրի դրվածքը։ Եղանակների հիմնական  առանձնահատուկություններից  են՝  սխեմայում  ազդանշանի  ժամանակի տարածումը հաշվի  առնելու և համակարգչով մոդելն իրականացնելու հնարավորությունները  [48]։  Ազդանշանի  ժամանակային  հոսքի  եղանակից  կախված մեթոդները լինում  են  սինխրոն (առանց  սխեմայի  տարրերում  ժամանակային հապաղումները  հաշվի  առնելու)  և  ասինխրոն  (հապաղումների  հաշվառմամբ)  [49]։ ", "Նկ.2.5-ում բերված սխեմայի տարրերի մաթեմատիկական մոդելը կլինի՝ :                                                (2.2) Այդ  դեպքում  տրված  սխեման (նկ․ 2․ 5)  ունի  հետևյալ  տրամաբանական հավասարումների համախումբը՝ (2.3)-ում ներկայացված արտահայտությունները ԻՍ-ի փականային մակարդակի verilog (2.3) նկարագրության համար կլինեն՝ nand NAND1(e,a,b);  nand NAND2(f,e,c); nand NAND3(g,d,h);  nand NAND4(h,f,g)։ ", "NAND1 and NAND2 and NAND4 and NAND3 and Նկ․  2.5․     Տրամաբանական  սխեմայի օրինակ - 51 - Ավելի  ընդհանուր  մաթեմատիկական  մոդելը  կարելի  է  ներկայացնել  հետևյալ կերպ` , (2.4) որտեղ -ն  մուտքային  փոփոխականների  վեկտորն  է, -ն՝  ելքային  և  միջանկյալ փոփոխականների վեկտորը ժամանակի t պահին, -ն՝ սխեմայի մուտքային և ելքային փոփոխականների  վեկտորը  ժամանակի՝ պահին, -ը՝  դիսկրետ փոփոխականների  փոխակերպման  օպերատորը  [48]:  Փոփոխականները՝ և վոկտորներում  դիսկրետ  մեծություններ  են։  Տրամաբանական  մոդելավորման  մեջ կիրառվում  են  մոդելներ՝  փոփխականների  հնարավոր  տարբեր  քանակի  արժեքներով։ ", "Երկուական համակարգի մոդելներում և -ն բուլյան փոփոխականներ են։ ", "Տրամաբանական  սինխրոն  մոդելավորում:  Սինխրոն  մոդելավորման  դեպքում, տարրերի  մոդելները  ներկայացվում  են  առանց  ազդանշանների  հապաղումների հաշվառման։  Դա կիրառվում է՝ գնահատելու համար  տրամաբանական ֆունկցիոնալության  ճշտությունը։  Սխեմայի  աշխատանքի  մոդելավորումը  սխեմայի տրամաբանական  տարրերում  հանգեցվում  է՝  ՝  տրված  մուտքային  ազդանշաններով հաշվարկելու ելքային ազդանշանների արժեքները հաշվարկելուն: ", "Նկ. 2․ 6 -ում բերված է տրամաբանական մոդելավորման մեթոդների դասակարգումը ԻՍ-ի  վերլուծության  համար  բերված  մեթոդներից,  ամենահարմար  տարբերակը սինխրոնային մոդելավորման կիրառումն է[48,50]։ ", "Տրամաբանական մոդելավորման մեթոդների դասակարգումը Հապաղումների հաշվառմամբ Ըստ սզդանշանների կոդավորման տեսքի Ըստ ծրագրի իրականացման եղանակի Ըստ հերթականության Սինխրոն Երկուական Կոմպիլյացիոն Միջանցիկ Ասինխրոն Բազմարժեքային Ինտերպրետացիոն Պատահարային Նկ․ 2․6․  Տրամաբանական մոդելավորման մեթոդների դասակարգումը - 52 - Կախված  ազդանշանների  տարածման  հապաղման  հաշվառման  մեթոդից՝ տրամաբանական  մոդելավորման  մեթոդները  լինում  են  սինխրոն,  երբ  հաշվի  չեն առնվում տրամաբանական տարրերի հապաղումները, և ասինխրոն, երբ դրանք հաշվի չեն առնվում: ", "• Մշակել  մեթոդ,  որի  միջոցով  համակարգի  հետ  ինտեգրման  համար փոստային սերվերից կպահանջվի  ոչ ռիսկային և ստանդարտ գործողություններ։ ", "Սխեմայի մաթեմատիկական մոդելը կունենա հետևյալ տեսքը՝ Եթե  ինտեգրալ  սխեման  չունենա  հետադարձ  կապեր,  ապա  հարաբերակցությունը :                                                    (2.5) կլինի՝ արտահայտությամբ՝ Սխեմայի  ամեն  տարր նկարագրվում է հետևյալ  տրամաբանական :                                                      (2.6) ,                                              (2.7) որտեղ -ը  տարրի  ելքային,  իսկ -ը՝  մուտքային  ազդանշաաններն  են։ ", "Արդյունքում՝  ամբողջ  սխեման  նկարագրվում  է  հետևյալ  հարաբերակցությամբ։ ", "Սինխրոն  մոդելավորումը  հանգում  է  դրանց՝  մեկը  մյուսից  հետո  հաջորդաբար հաշվարկին։  Տրամաբանական  արտահայտության  հաշվարկումը  ներկայցնում  է -ի տրամաբանական  արժեքի  հաշվարկումը՝  հայտնի տրամաբանական արժեքներով։ ", "Սինխրոն մոդելավորման առանձնահատկություններից է տրամաբանական  արտահայտությունների  հաշվարկումը  որոշակի  հերթականությամբ, որը  համապատասխանում է  սխեմայում  տարրերի  ազդանշանների  հոսքի հերթականությանը։  Այդ  հերթականությունը  որոշելու  համար  սխեման  անհրաժեշտ  է ռանգավորել  (նկ․ 2․ 6),  որպեսզի  այն  պահին,  երբ  տեղի  ունենա  ամեն -ի  հաշվարկը՝ ըստ (2.7) արտահայտության, բոլոր -երի արժեքները լինեն հայտնի։ Սա նաև թույլ կտա, որ իրար հետ խիստ կապված տարրերը դրվեն իրար մոտ, ինչն էլ, իր հերթին, կնպաստի միջմիացումների երկարությունների զգալի կրճատմանը։ ", "- 53 - Ռանգավորման  ժամանակ  հաշվի  է  առնվում,  որ  սխեմայի  մոդելավորումը  սկսելու պահին դրա բոլոր մուտքային ազդանշանները հայտնի են, և դրանց բոլորին տրվում է 0 ռանգ  r  =  0:  Օրինակ,  նկ․   2․ 6-ում  բերված  սխեմայի  ազդանշանների  որոշման հերթականությունը կլինի հետևյալը՝ , , , որտեղ –ն  սխեմայի  մուտքային  ազդանշաններն  են, -ը  տարրերի ելքային  ազդանշաններն  են  (սխեմայի  ելքային  և  ներքին  փոփոխականներն  են), -ը տարրերի ռանգը։ ", "Ռանգավորումը  սկսվում  է  այն  բանից,  երբ  բոլոր  մուտքային  փոփոխականներին տրվում  է  0  ռանգ,  որից  հետո  որոշվում  են  1-ին  ռանգի  տարրերը,  1-ին  ռանգի  շղթայի փոփոխականները,  2-րդ  ռանգի  տարրերը  և  այդպես  շարունակ (ալգորիթմի աշխատանքը  նկարագրված  է  3-րդ  գլխում)։  Արդյունքում՝  սխեմայի  բոլոր  տարրերը տեղաբաշխվում են ռանգերի աճման կարգով (նկ․  2․ 7)։ ", "NAND2 and NAND4 and NAND1 and NAND3 and r = 0 r = 1 r = 2 r = 3 Նկ․ 2.7․  Տրամաբանական սխեմայի ռանգավորված օրինակ Ռանգավորումն  ամեն  ինչ  ավելի  բարդանում  է,  երբ  առկա  է  հետադարձ  կապով սխեմա  (նկ.  2․ 5)։  Այս  դեպքում  տեղի  է  ունենում  արհեստական  հետադարձ  կապի խզում, և այն տարրի մուտքին, որին կպած էր հետադարձ կապը, տրվում է 0 ռանգ։ ", "Նկ. 3.13 FSK մոդուլացում Նկ.  3.13-ում  պատկերված և հաճախականությունները  համապատասխանում են բիթային ազդանշանի ցածր և բարձր մակարդակներին: Այս տեսակը կոչվում է 2ASK մոդուլացում,  որտեղ  ազդանշանը  ունի  երկու  սիմվոլ,  որոնցից յուրաքանչյուրը ներկայացնում է մեկ բիթ: ", "Ինտեգրալ սխեմաների ֆիզիկական կառուցվածքների ներկայացումը «փափուկ» և «կոշտ» բլոկների տեսքով Ռանգավորումից  հետո  լուծվում  է  տարրերի  տեղաբաշխման  խնդիրը՝  սկզբում «փափուկ» և այնուհետև «կոշտ» բլոկների տեսքով։ ", "«Կոշտ»  և  «փափուկ»  բլոկները,  որոնք  հաճախ  անվանվում  են  նաև  մակրոսներ, առավելապես  կիրառվում  են    որպես  մտավոր  սեփականության  (ՄՍ)  (IP  -  Intellectual property)  բլոկների  ներկայացման  ձևեր։  Դրանք  պարամետրացվում  են  իրենց ֆիզիկական  չափերով, հզորությունով  և  արագագործությամբ:  Նշենք,  որ  ըստ ֆիզիկական  չափերի  պարամետրացումը  «կոշտ»  բլոկների  դեպքում  կատարվում  է ինչպես  մակերեսով  (A),  այնպես  էլ  ուղղանկյան  երկարության  (w)  և  բարձրության  (h) հարաբերակցությամբ,  իսկ  «փափուկ»  բլոկների  դեպքում՝  միայն    մակերեսով:  Այս բլոկները գնալով ավելի մեծ կիրառություն են գտնում տարաբնույթ համակարգային ԻՍ- երի նախագծերում։ «փափուկ» և «կոշտ» բլոկների օրինակներ են բերված նկ. 2.8-ում [51]: ", "Նկ․ 2․8 «Փափուկ» մակրոսներ (ա) մինչև պարամետրացումը և «կոշտ» մակրոսներ (բ) պարամետրացումից հետո Նկարներից  երևում  է,  որ  առանձին  ֆիզիկական  դոմենների  տիրույթները, պարամետրացումից հետո ստանում են կանոնավոր ձևեր: ", "- 55 - ԻՍ-երի  ինտեգրման  աճին  զուգընթաց՝  դրանցում  ավելանում  է  մտավոր սեթփականության (ՄՍ) բլոկներով իրագործվող ֆունկցիոնալությունը, որը ներկայումս կարող է հասնել ամբողջ ֆունկցիոնալության ավելի քան 90%-ին: [52, 53] «Կոշտ» ՄՍ-ն հանդես  է  գալիս  ավարտված  ֆիզիկական  նախագծի  տեսքով,  որի  դեպքում  հայտնի  են ինչպես էլեկտրական , այնպես էլ ֆիզիկական պարամետրերը: «Փափուկ» ՄՍ-ն հանդես է գալիս սարքավորումների նկարագրման Verilog կամ VHDL լեզվով գրված սինթեզվող մոդուլի  տեսքով:  Այն,  «կոշտ»  բլոկի  համեմատ,  ավելի  հեշտ  է  ենթարկվում տեխնոլոգիական  մասշտաբավորման,  սակայն  ավելի  դժվար  է  իրագործել  դրա բնութագրումը:  Ներկայումս  սկսել  են  ավելի  հաճախ  կիրառել  բավականին  մեծ «փափուկ»  բլոկներ,  այդ  թվում՝  պրոցեսորներ,  քանի  որ  դրանց  նախագծումը տնտեսապես  շատ  շահավետ  է,  և  փոխհատուցվում  են  դրանց  հետագա  ներդրման լրացուցիչ  ծախսերը:  «Փափուկ»  ՄՍ-ների  արդյունավետությունը  առավել  ընդգծվում  է ինտերֆեյսային բլոկների  պարագայում, քանի որ  այս դեպքում հաճախ անհրաժեշտություն  է  առաջանում  դրանց  որոշակի  ձևափոխության՝  կախված օգտագործվող կապուղիների տեսակից և ճարտարապետությունից: ", "Այդ բլոկներն ունեն հետևյալ հատկությունները «Փափուկ» մակրոսները՝ մակրոսները,   ֆիզիկական  կառուցվածքի  տեսանկյունից  ավելի  ճկուն  են,  քան  «կոշտ»   ավելի անկախ են կոնկրետ արտադրական գործընթացից,   ունեն  թերություն  որոշ  չափով  անկանխատեսելի  են՝  կատարողականության, ժամանակային, տարածքային կամ հզորության  առումներով,   ֆիզիկական  նախագծման  մեջ  հնարավորություն  է  տրվում  արտաքին ելուստների տեղաբաշխման մանիպուլացման: ", "«Կոշտ» մակրոսները՝   հիմնականում լինում են ապարատային ՄՍ-ների տեսքով,   բլոկային մակարդակի նախագծեր են,   նպատակաուղղված են հատուկ ինտեգրալ սխեմաների արտադրությանը, - 56 -   օպտիմալացված  են  կամ  ըստ  հզորության,  կամ  ըստ  զբաղեցրած  տարածքի,   ֆիզիկական  նախագծման  մեջ  հասանելիություն  է  տրվում  «կոշտ»  բլոկների կամ ըստ ժամանակի, արտաքին ելուստներին,   օգտագործողը կարող է ազատ տեղաշարժել, պտտել, բայց չի կարող որևէ բան փոխել արդեն պատրաստի «կոշտ» մակրոսի մեջ, «Կոշտ»  և  «փափուկ»  ՄՍ  բլոկների  որակական  համեմատականությունը  ըստ տարբեր պարամետրերի բերված է նկ. 2.9-ում: ", "Վերաօգտագործում, շարժունակություն, ճկունություն «փափուկ» IP «կոշտ» IP Կանխատեսելիություն, կատարողականություն, արժեք, վաճառողի կողմից ներդրված ջանք Նկ․ 2․9․  «Փափուկ» և «կոշտ»IP -ների համեմատության գրաֆիկը չափանիշներ՝ չունեն  պարզ «կոշտ»  մակրոսների  նախնական Գոյություն տեղաբաշխումը  գնահատելու  համար։  Այդ  տեղաբաշխման  արդյունքների  որակի գնահատումը կարող է լինել շատ սուբյեկտիվ և հիմնականում կախված է նախագծման գործնական  փորձերից։  Այնուամենայնիվ,  տեղաբաշխման  որոշիչ  չափանիշ  է  սխեմայի աշխատանքի արագագործությունը։ ", "«Կոշտ»  մակրոսների  ավելի  արդի  օրինակ  է  հիշողությունը։  Այն  կարող  է  լինել ցանկացած տեսքի, որն ապահովում է հատուկ ֆունկցիոնալություն։ LEF, GDS2 ֆայլերի ֆորմատները թույլ են տալիս մակրոսների հեշտ օգտագործումը տարբեր ծրագրերում։ ", "- 57 - «Կոշտ»    բլոկը  պարամետրացման  ճանապարհով  կարող  է  սինթեզվել  «փափուկ» բլոկից՝ ավտոմատացված ձևով: ", "«Փափուկ»  բլոկից  «կոշտ»-ի  անցումը  հանգեցնում  է  բլոկի  երկրաչափական  ձևի ընտրության:  Այս  ընտրությունը  կատարվում  է  մակերեսի  հաստատունության պայմանով՝ ձևի կորի հիման վրա (նկ. 2.10)։ ", "Մանրամասն  նկարագրվում  են  դրա կառուցվածքային ու ֆունկցիոնալ մոդուլները։ ", "Նախ  նշենք,  որ  շղթաների  հատումների  քանակը  կախված  է  ոչ  թե  տարրերի վերջնական կոորդինատներից, այլ տվյալ ռանգում տարրերի հարաբերական դիրքերից: ", "Գոյություն  ունեցող  ծանուցման  համակարգերի  հետազոտության  մասում քննարկել ենք նման համակարգերում արտաքին ինտերֆեյսի իրականացման մի քանի տարբերակներ։ ", "Սակայն  այդ  խնդիրը  NP-բարդության  է  արդեն  իսկ  ընդամենը  երկու  ռանգ  ունեցող գրաֆի դեպքում[55]։ ", "- 58 - Հիմնականում շղթաների հատումների քանակի նվազեցման խնդիրը ոչ թե լուծվում է գլոբալ՝  ամբողջ  գրաֆի  համար,  այլ  լոկալ՝  բոլոր  հարևան  տարրերի  զույգերի  համար: ", "Փորձերը  ցույց  են  տալիս  [55],  որ  երկու  ռանգերի  համար  շղթաների  հատումների քանակի  նվազեցման  խնդիրը  բավականին  հեռու  է  օպտիմալ  լինելուց  [54,  56]:  Ավելի ընդունելի,  հատումների  գլոբալ  քանակը  նվազեցնելու  համար,  դիտարկվում  են  բոլոր հարևան ռանգերը և հատումների նվազեցումը դրանց միջև: Այդ մոտեցումներն ունեն մի քանի մոդիֆիկացիաներ, որոնք տարբերվում են հետևյալ չափորոշիչներով.   Ռանգերի  ֆիքսման  մեթոդի  ընտրություն:  Երկու  հարևան  ռանգեր  դիտարկելիս մի  ռանգի  տարրերը  կարելի  է  համարել  ֆիքսված  և  ընտրել  տարրերի  օպտիմալ դասավորություն  մյուս  ռանգի  համար:  Կարելի  է  նաև  Ri  ռանգը  դիտարկելիս ֆիքսված համարել Ri+1 և Ri-1 ռանգերը: ", "  Հերթականության  ընտրություն,  ըստ  որի  դիտարկվելու  են  տվյալ  ռանգի գագաթները:  Ռանգերը  կարող  են  դիտարկվել  ձախից  աջ  կամ  հակառակը, հնարավոր է նաև դիտարկման ուղղությունների փոփոխություն: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}
{"paragraphs": ["Ընդհանուր  առմամբ  այս  օրենքը  թույլ  է  տալիս  մոտավորապես  պատկերացում կազմել զուգահեռացման  արդյունքում  հաղորդման  գործընթացի  կատարման արագության ավելացման մասին։ ", "Տվյալ մոդուլի համար Ամդալի  օրենքը կարելի է կիրառել որոշ նախապայմաններով։ ", "Թվարկված կոնտեյներները C++ ստանդարտ գրադարանից են[80]։ ", "vector-ը զանգված է, set-ը և map-ը բինար որոնման բալանսավորված ծառեր են։ ", "Այս  պարամետրերի  արժեքները նույնպես  մշակվում  են  ԱՀ-ում:  Տվյալների  տասնվեցական  ձևաչափով  ներկայացման ընտրությունը  դրսևորվել  է  պատմականորեն  և  պայմանավորված  է  այն  բանով,  որ հիշողությունը  նախագծող  ճարտարագետները,  հասցեավորումը  նկարագրելիս  մեծ մասամբ  օգտագործում  են  տասնվեցական  ձևաչափը:  Նկար  3.5-ում  ներկայացված  է թեստային  ալգորիթմ  ֆայլի  օրինակը:  Կանգառ  հասցեն  օգտագործվում  է  ԹԱ-ի աշխատանքը հարկադրաբար կանգնեցնելու  նպատակով՝ այն կատարվում է, երբ ԹԱ-ի աշխատանքային  հասցեն հավասարվում  է  նշված  Կանգառ  հասցեի  արժեքին: ", "ԱՀԳ-ի շղթաների «Wire»  զանգվածի կառուցվածքը Աղյուսակ 3.1 Զանգվածի տարրի համարը Շղթայի անունը Շղթայի id Շղթայի սկիզբ Շղթայի վերջ պահուստը G1 G16 G17 G2 G3 G4 G5 G8 G9 G12 G15 ժամանակի Զանգվածի ամեն տարրում պահվող տվյալները հետևյալն են՝ - 72 - բալանսավորված  ծառ։  Ծառի  ամեն  տարրը  պահում  է  տրամաբանական  տարրի բալանսավորված ծառ։ Ծառի ամեն տարրը պահում է տրամաբանական տարրի(Cell- տվյալներ  են,  վերցվում  են  սխեմայի  ստատիկ  ժամանակային  վերլուծության (Cell-ի) id-ն, ի) id-ն, արդյունքից։ ", "Տվյալ աշխատանքի շրջանակներում մշակված մեթոդի փորձնական իրականացումը կատարվել  է  անալոգային  և  թվային  մոդուլացման  տեսակների  համար:  Ստորև նկարագրված է  անալոգային մոդուլացման  տեսակների  ավտոմատացված նույնականացման  համար  իրականացված  փորձերը  և  դրանց  արդյունքները  [89]: ", "ԱՀԳ-ի տարրերի «Cell»  զանգվածի կառուցվածքը Աղյուսակ 3.2 Զանգվածի տարրի համարը Տարրի id Տարրի անունը շղթայի id Տարրի ելքային շղթայի id Տարրի ռանգը Տարրի մուտքային NAND2_0  NAND2_1  NAND2_2  NAND2_3 NAND2_4 NAND2_5 Դիտարկենք տարրերի զանգվածի 0-րդ տարրը՝ - 73 - տարրերի տվյալները, կտեսնենք, որ դրանք G1 և G3 շղթաներն են, կտեսնենք, որ այն ներկայացնում է՝ G8, չէ․ այն  կարժեքավորվի  ռանգավորման ալգորիթմի աշխատանքից հետո։ ", "Այսպիսով,  ստացանք  NAND2_0(G8,G1,G3),  ինչն  էլ  համապատասխանում  է թեստային verilog ֆայլի 9-րդ տողին(նկ․ 3.2)։ ", "Ալգորիթմի  2-րդ  և  3-րդ  կետերի  աշխատանքի  արդյունքում՝  վերոնշյալ  տեստային վերլոգ ֆայլի 2-րդ և 3-րդ տողերում գրված ինֆորմացիան պահվում է հետևյալ կերպ։ ", "Մուտքային  շղթաներ։  Ալգորիթմի  աշխատանքի  արդյունքում  պահվում  է  բինար որոնման բալանսավորված ծառ [76, 80]։ Ծառի ամեն տարր իր մեջ պահում է մուտքային շղթայի  id։  Verilog  ֆայլի  (նկ․ 3․ 2)  4-րդ  տողում  գրված  է՝  G1,G2,G3,G4,G5;  այսինքն՝ կպահվի նրանց id-երը, որոնք 0, 3, 4, 5, 6 -ն են (աղ.3․ 1)։ ", "Դիմադրության  հաշվարկման  այս  խնդիրը  դասվում    է  մեկչափանի  օպտիմալացման մեթոդի  խնդիրների  դասին:  Այս  մեթոդի  շարքին  են    պատկանում.  ոսկե  կտրվածքի, Ֆիբոնաչիի թվերի մեթոդը, պոլինոմինալ մոտարկման մեթոդը,  դիխոտոմիկ բաժանման մեթոդը  և  նրանց  մի  շարք  մոդիֆիկացիաները [28], [29]: ", "Նկ․  3․3․   Մուտքային  շղթաների  id-երը  բինար  որոնման բալանսավորված ծառում Ելքային շղթաներ ։ Աշխատում է նույն ձևով, ինչպես մուտքայինի դեպքում, սակայն այստեղ պահվում են 5-րդ տողում գրված շղթաների G16,G17-ի  id-երը (նկ․ 3․ 4)։ ", "Երկրորդում էլեկտրոնային նամակը հասցեագրվում է միայն համակարգին, քանի որ  այստեղ  համակարգը  ծառայում  է  որպես  էլեկտրոնային  փոստի  միջոցով  SMS հաղորդագրություններ ուղարկող ցանցային ռեսուրս։ ", "Նման  գրաֆով  աշխատանքի  համար  անհրաժեշտություն  է  առաջանում  շղթայի անունով  գտնել  շղթայի  id-ն։  Բացի  այն  բանից,  որ  ունենալով  ցանկացած  շղթայի  id-ն, կարելի  է  կողերի  զանգվածում  գտնել  նրա  անունը  (աղ․ 3․ 1),  նաև  կարելի  է  անել հակառակը,  ուենալով  անունը՝  գտնել id-ն  նկ․ 3.4  -ի  և  աղ  2-ի  միջոցով։  Այս հնարավորության համար անհրաժեշտ է ունենալ map անունից դեպի id․ map-ը բինար որոնման բալանսավորված ծառ է։ Նրա ամեն տարրը ներկայացնում է {key, value} զույգ։ ", "Որոնումը և բալանսավորումը կատարվում է key-ի միջոցով, որոնք ծառի մեջ չեն կարող կրկնվել,  իսկ  value  -  ն  ներկայացնում  է  ցանկացած  տվյալ։  Մեր  օրինակու`  key-ը (բանալի) շղթայի անունն  է  (օրինակ՝ G1  կամ G2  ․ ․ ․ ),  իսկ value-ն՝  համապատասխան կողի id-ն (աղ.3․ 1)։ ", "Այդ  արժեքները  համեմատվում  են  ակնկալվող  արժեքների  հետ  և  դրանց տարբերությունը  հաշվարկվում  է համապատասխան հավասարում (2.15)-ի։ Նկ. 4.7-ում պատկերված  է  արհեստական  նեյրոնային  ցանցի  մշակված  կոդի  զարգացված  և բարելավված  տարբերակի  առաջընթացի  ռեժիմը,  որի  միջոցով  իրականացվել  են  և՛ անալոգային  և՛  թվային  մոդուլացման  տեսակների  ուսուցումը՝  վերջիններիս  համար նախատեսված հիմնական բնութագրող հատկանիշների միջոցով։ ", "Առանձնահատկություն  երկրորդ։  Նամակն  ուղարկողի  նախաձեռնությամբ աշխատող  ծանուցման  համակարգում  առաջարկված  մյուս  առանձնահատկությունը հասցեատիրոջ  կողմից  իր  մուտքային  ծանուցումների  ու  SMS  հաղորդագրությունների հոսքի ղեկավարման մեխանիզմի կիրառումն է։ Վերը թվարկված հրահանգների խմբերից երրորդը՝ գործողություններ «սև ցուցակի» հետ,  օգտատերերին թույլ է տալիս սահմանել որոշակի հասցեներ, որոնք չեն կարող ծանուցել կամ SMS հաղորդագրություն ուղարկել իրեն: Այս մեխանիզմի կառուցվածքն ու նախագծումը մանրամասն դիտարկված է 2․2․1 ենթապարագրաֆում։ ", "•  Իրականացվում  է  գեներացված  նմուշների  տրամաբանական  սինթեզ  (Design Compiler,  Power Compiler),  որի  արդյունքում ստացվում են նախագծի  հզորության սպառման  գնահատականները: ", "Ավարտել Նկար 3.7.   Մոդելավորման Դիմադրության համապատասխանեցման ալգորիթմը ԹՆևՀԹԱՍ  ծրագրային ԱՀ-ում նպատակային ֆունկցիան ստացված SPICE ֆայլի մոդելավորումն է, որը, հիմնականում, ժամանակատար է  և պահանջում է հաշվողական մեծ ռեսուրսներ, ուստի մենք չենք կարող աշխատեցնել SPICE ֆայլի մոդելավորումը մեծ քանակով  դիմադրության  արժեքների  տիրույթի  համար:  Նկար  3.7-ում    տրված  է ԹՆևՀԹԱՍ  ծրագրային  ԱՀ-ում  իրականցված  անսարքության  դիմադրության  մշակման ալգորիթմի  բլոկ-սխեման:  Այս  խնդրի լավարկման  նպատակով  մշակվել  է  և օգտագործվում  է  դիմադրության  համապատասխանեցման  ալգորիթմը  (ԴՀԱ):  ԴՀԱ-ի հաջորդական  մշակման  ճյուղում  օգտագործվում  է  դիխոստոմիկ  բաժանման  մեթոդի հիմունքներով կառուցված ալգորիթմը: ԴՀԱ-ը իրականացված է  ԹՆևՀԹԱՍ  ծրագրային հոսքի  Վերլուծման  հանգույցում:  ԱՀ-ի  կառավարման  ֆայլում  տրվում  է  հետազոտվող անսարքության  դիմադրության  նվազագույն  Rmin  (մինիմալ)  և  առավելագույն  Rmax - 101 - (մաքսիմալ)      հաշվարկային  արժեքները  և  նախատեսված  իտերացիաների  քանակը (Տես՝ նկ.3.8):  «Իտերացիաների քանակը» պարամետրով ճարտարագետը սահմանում է քայլերի  քանակը,  որոնց  ընթացքում  ԱՀ-ը  պետք  է    կատարի  դիմադրության  հետ կապված  ԹԱ-ի  հետազոտությունները:  Այս  պարամետրը  համարժեք  է  Դիխոտոմիկ բաժանման մեթոդի N պարամետրին: Վերլուծման սկզբում կատարվում է մոդելավորում դիմադրության մինիմալ և մաքսիմալ արժեքների համար: Դրանից հետո, կախված այդ մոդելավորման  արդյունքներից,  վերլուծումը  շարունակվում  է  հաջորդական  կամ  էլ զուգահեռ    եղանակներով՝ ռեժիմներում: ", "Նախագծված մոդելում, համակարգի կողմից SMS հաղորդագրության ուղարկման դեպքում դրա մեջ ներառում է այն տեքստը, որը մարկերներով առանձնացված է նամակի մարմնում։      Հատվածի  մեծածավալ  լինելու  պարագայում  հաղորդագրության  մեջ ներառվում է միայն դրա առաջնահատվածը, որպեսզի սիմվոլների քանակը չգերազանցի SMS հաղորդագրության սահմանված չափաբաժինը։ ", "սկզբնական վիճակում կլինի` Եթե  ci    տարրի  ռանգը  նշանակենք ,  իսկ  wi  շղթայի  ռանգը՝  r(wi),  ապա (3.3) որտեղ - -ը i -րդ տարրի մուտքային շղթաներից առավելագույն ռանգ ունեցողն է, իսկ –ը i -րդ տարրի ելքային շղթայի ռանգն է: ", "Աղյուսակ 4.4. ԱՆՑ-ի ուսուցման արդյունքները անալոգային մոդուլացումների համար Նեյրոնի № DSB LSB USB FM Ինչպես  երևում  է  վերոնշյալ  աղյուսակում  բերված  տվյալներից  արհեստական նեյրոնային  ցանցի  ուսուցումը  գերազանց  է  անցել  բոլոր  ուսուցանվող  մոդուլացման տեսակների  համար  բացի  USB  տեսակից:  Սա  պայմանավորված  է  այն  հանգամանքով, որ  USB  մոդուլացման  դեպքում  ազդանշանի  սպեկտրի  համաչափությունը  բնութագրող հատկանիշի՝  P-ի  արժեքը  շատ  մոտ  է  (-1)-ին,  ինչն  էլ  դժվարություն  է  առաջացնում մշակված  ցանցի  համար:  Կարելի  է  եզրակացնել,  որ  մշակված  մեթոդի  միջոցով  ԱՆՑ-ը ընդամենը 7.94 վարկյանում ուսուցանվել է նույնականացնել չորս տարբեր անալոգային մոդուլացման տեսակներ: Հարկ է նշել, որ այս արդյունքները գրանցվել են ԱՆՑ-ի պարզ ծրագրային կոդի ալգորիթմի միջոցով: ", "Յուրաքանչյուր կետում մոդելավորման դիմադրության արժեքը՝ Rn-ը հավասար է. Rn = Rmin +  n * Rinc ,     որտեղ - 102 - - n {1…i} , և հաշվարկվում է հետևյալ բանաձևով. Rinc= (Rmax-Rmin)/i - Rinc - դա գումարվող դիմադրության արժեք է, որը հաստատուն փոփոխական է SPICE մոդելավորում Rn= Rmin+ n*Rinc Այո Եթե n <= i Ելքային ֆայլերի գեներացում: ", "Այս  քայլում  պետք  է  սկսենք  կամայական  տարրից՝ ,  որը  չունի  ռանգ` Եթե  տարրը  ռանգ  չունի,  դա  նշանակում  է,  որ  նրա  գոնե  մեկ  մուտքային  շղթա՝ ռանգ չունի, այլապես 2-րդ քայլում , տարրը կռանգավորվեր։ Գրանցում ենք ,  -ն և շարունակում հետևյալ կերպ։ "], "source_docs_file": "Control, Automation and Electrical Engineering.json", "paragraph_source_docs": [0, 0, 2, 2, 1, 2, 3, 2, 2, 2, 2, 1, 2, 0, 2, 2, 3, 0, 4, 1, 0, 2, 3, 1, 2]}
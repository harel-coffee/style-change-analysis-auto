{"source_docs_file": "Informatics and Computer Systems.json", "paragraph_source_docs": [1, 2, 1, 1, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 2, 1, 0, 1, 1, 2, 0, 1], "paragraphs": ["Ինչպես  արդեն  նշվել  է,  «CA  Simulator»  համակարգը  ապահովում  է բազմաօգտատեր շահագործում, որը հնարավոր է եղել ստանալ Microsoft .Net [52] միջավայրի  միջոցով,  որը  ինքնին  հնարավորություն  է  տալիս  ստեղծել  ծրագրային փաթեթներ, որոնց միջոցով  կարելի է կապել ինչպես օգտագործողներին, այնպես էլ  տարբեր  համակարգեր  և  սարքեր,  դրանով  իսկ  դյուրացնելով  ինֆորմացիայի կիսումը/sharing:  Օգտագործելով  .Net  միջավայրը,  «CA  Simulator»  համակարգում մշակվել  է  հաճախորդ-սերվեր-հաճախորդ  փոխկապակցվածությունը՝  նպատակ ունենալով  հնարավորություն  տալ  օգտագործողներին  կատարել  համատեղ հետազոտություններ  միևնույն  մոդելների  վրա:  Սերվերի  տեղակայման  համար ընտրվել են Microsoft Azure [53] ամպային տեխնոլոգիաների հարթակը: ", "Շատ  առավելությունների  շնորհիվ  MDC-ն  հաջողությամբ  կիրառվում  է  կոդավորման զարգացած հայեցակարգերում՝ ներառյալ  տեսանյութի մասշտաբավորված կոդավորումը  (SVC)  և  տեսանյութի  բաշխված  կոդավորումը  (DVC):  Կոդավորման  այս մեթոդները կարող են մեծացնել  անլար  տեսահսկման համակարգերի հարմարվողականությունը,  հատկապես  երբ  բազմակի  տեսախցիկներ  արձանագրում են միաժամանակ և ուղու հնարավորությունը խիստ սահմանափակ է: ", "Նկար 19.Ալիքների պատմությունը ցուցադրող պատուհան: ", "Ինչպես արդեն նշվեց, «CA Simulator» համակարգը մշակվել է օգտագործելով .Net  միջավայրը  և  C#  լեզուն:  Իսկ  գլոբալ  ցանցում  աշխատանքի  ապահովման համար  ընտրվել  է  Microsoft  Azure-ը:  Ծրագրավորողների  տեսանկյունից  «CA Simulator»  համակարգը  կարող  ենք  բաժանել  3  մոդուլի.  տեսաբերում,  լոկալ սիմուլացիա և կլիենտ-սերվեր ճարտարապետություն: Տեսաբերման, պտույտների և դիտարկման  հեռավորության  ապահովման  համար  օգտագործվել  են  հենց  .Net միջավայրի գրադարանները: Տեսաբերող դասը կունենա գծապատկեր 1-ի տեսքը: ", "Գծապատկեր 1.Տեսաբերող դասերի կառուցվածքային նկարագրությունը: ", "Լոկալ  սիմուլացիայի  մոդուլում  նախագծվել  է  GuiHelper  դասը,  որը ապահովում է մոդելի ստեղծումը, տեսաբերումը, տեսաբերման ֆունկցիոնալ բոլոր հնարավորությունները, պահպանումը, վերբեռնումը, ավազահատիկների ավելացումը,  գագաթների  փլուզումը,  ինչպես  նաև  ատրիբուտների  հաշվարկը: ", "Այսպիսով,  Ni-րդ  հանգույցը  նախ  փորձում  է  ինքնուրույն  ընտրել  իրեն  որպես ծառայության  հանգույց՝  Ps  հավանականությամբ:  Եթե  փորձը  հաջողություն  է  ունենում, ապա  Ni-րդ  հանգույցը  դառնում  է  ծառայության  հանգույցի  թեկնածու  և  ստեղծում  է համապատասխան KPi բանալու ենթակառուցվածքը: Այնուհետև, Ni-րդ հանգույցը ստուգում է, թե արդյոք գոյություն ունի՞ հեռարձակված հաղորդագրություն: ", "Եթե Ni հանգույցը ստանում է հեռարձակման հաղորդագրություն, նշանակում է` միջակայքում  առկա  է  (H-1)  ցատկ  ծառայության  հանգույց:  Հանգույցի  ողջ  հաշվողական ռեսուրսի  օգտագործման  համար  Ni-րդ  հանգույցն  ընտրվում  է  որպես  այլընտրանքային ծառայության հանգույց։ ", "Դինամիկ  տեսարանի  դեպքում  շարժման  հայտնաբերման  մեկ  այլ  հայտնի մեթոդ է օպտիկական հոսքը:  Հաջորդական  կադրերի միջև  աֆինային ձևափոխությունը  գնահատվում  է  այնպես,  որ  առանձնանում  է  ձևափոխմանը չհամապատասխանող  տարածքը:  Իրական  ժամանակում  օպտիկական  հոսքի հաշվարկը  ներկայացվել  է  [45]-ում:  [46]-ում  անհամապատասխանության  մասին ինֆորմացիան  միացվել  է  օպտիկական  հոսքին՝  բինոկուլյար  տեսքի  օբյեկտները հսկելու  համար:  Դինամիկական  օբյեկտներին  հետևելու  այլ  տարածված  մեթոդներ  են Lucas-Kanade-Tomasi tracker13, Mean Shift14 [38], Level set contour15-ը և այլ մեթոդները, որոնք  միավորում  են  տեսատվյալների  մի  քանի  հատկություններ:  Բազմատեսարան օբյեկտի  հայտնաբերման /հսկման  դեպքում,  տարբեր  ռակուրսներով  օբյեկտի համապատասխանության  խնդիրը  քննարկվել  է  [31]-ում:  Օբյեկտի  հայտնաբերման արդյունքի վրա հիմնված տեսախցիկի կառավարման ալգորիթմը նույնպես ճշգրտորեն ուսումնասիրվել է ակտիվ տեսախցիկներով հսկման համար [36]: ", "Նախագծված  ճարտարապետության  հիմքում  ընկած  է  այն  գաղափարը,  որ հեռարձակողը  ինքնին  հանդիսանում  է  նաև  բաժանորդ  նույն  ալիքի  համար,  որը հնարավորություն է ընձեռում այլ օգտվողների փոփոխությունների ընդունումը նաև հեռարձակողի  կողմից:  Ինչպես  նշվեց  տվյալ  ալիքում  պահպանվում  է  բոլոր բաժանորդների  կողմից  կատարված  բոլոր  փոփոխությունները,  որի  համար ստեղծվել է տվյալների հենք, որի իրականացման համար ընտրվել է SQLite- ը: ", "Նկար 21.BroadcastingHelper դասի նկարագրություն: ", "Ինչպես  արդեն  նշվեց,  CA  simulator  համակարգը  ստեղծվել  է  ավազակույտի մոդելի  օրինակով:  Առկա  են  երկու  հիմնական  գործառույթներ  կապված ավազակույտի հետ. DrawSandpileModel (), որն ապահովում է ավազակույտի տեսաբերումը, մոդելի փոփոխությունների արտացոլումը և •  addgrain(Position pos) ֆունկցիան, որը օգտագործողին հնարավորություն է տալիս կատարել փոփոխությունները ավազակույտի մոդելի վրա: ", "Նկատենք, որ հավելյալ բջջային մոդելի մշակումը նույնպես դժվարություն չի ներկայացնում.  պարզապես  կատարվում  է  տեսաբերման  եւ  մոդելի  փոփոխման գործառույթների  փոփոխություն:  Իսկ  արդեն  տեղեկությունների  փոխանակման համար նոր բջջային ավտոմատի դեպքում անհրաժեշտ է ISeService ինտերֆեյսի մի քանի  գործառույթների  ադապտացում  տվյալ  մոդելին  SeService  դասում:  CA simulator  ծրագրային  համակարգի  աղբյուրները  (source  code)  կարելի  է  գտնել Bitbucket-ում url {https: //nhayk@bitbucket.org/nhayk/ca_simulator.git} հղումով: ", "Գաղտնիության  միջոցների  իրականացումը  իրական  ժամանակում  տեսահսկողության կիրառության  մեջ  կարող  է լինել  շատ  դժվար,  քանի  որ  զգայուն  նյութի նույնականացման  կամ  անսովոր  իրադարձության  հայտնաբերման  նախադրյալը ինքնին բարդ խնդիր է: ", "Եզրակացություն․  Անլար  տեսահսկումը  շատ  տարածված  է  տեսահաղորդակցության տարբեր  կիրառություններում: ", "Թռիչքի  սիմուլատորները  հանդիսանում  են  լուրջ  խաղերի  նախապապերը,  իսկ MICROSOFT  FLIGHT  SIMULATOR-ը    նրանցից  ֆինանսապես  ամենահաջողվածն  է: ", "Այսպիսով՝  առաջին  գլխում  դիտարկեցինք  վերջին  տարիներին  կատարված աշխատանքները  օբյեկտների  հայտնաբերման,  ճանաչման  և  համալիր  տեսահսկման համակարգերի  համար։  Չնայած  նարագրված  մեթոդների  բոլոր  առավելություններին՝ կան  նաև  թերություններ  և  չլուծված  խնդիրներ։  Ատենախոսական  աշխատանքի նպատակն  է  մշակել  օբյեկտների  հայտնաբերման,  ճանաչման  և  տեղորոշման արդյունավետ, արագագործ և անսխալ աշխատող համալիր համակարգ։  Համակարգի արագագործությունը և արդյունավետ  աշխատանքը ապահովելու համար հարկավոր է մշակել այնպիսի մեթոդներ, որոնք կտան այդ խնդիրների լուծումները։ Հետևյալ բոլոր խնդիրների լուծումը առաջարկվում է 2-րդ գլխում։ ", "Հայտնաբերման  ալգորիթմի  արագագործությունը  տեսադաշտում  բազում օբյեկտների  առկայության դեպքում:  Խնդիրներից մեկը ալգորիթմի արագագործությունն  է  բազում  օբյեկտների  դեպքում։  Ալգորիթմը  օբյեկտներին հայտնաբաերելու  նպատակով  անցնում  է  բոլոր  պիքսելների  վրայով՝  դիտարկելով պիքելային  փոփոխությունները,  այս դեպքում  անլգորիթմի բարդությունը էր  (1.2),  որտեղ  որտեղ պատկերի  չափերն  են, -ը  ֆոնում առկա օբյեկտների քանակն է, իսկ -ը՝ նմուշի։ ", "լաբորատորիան, վերջին  տարիներին հաջողություններ  գրանցեց իրենց նորարարական  քարտային  խաղերով:  Ընկերության  կարգախոսն  է  «Խաղերի դիզայնը  սոցիալական  փոփոխության  համար»,  իսկ  Pox  և  Awkward  Moment  լուրջ խաղերի միջոցով, նրանք ուսուցանում են խաղացողներին այնպիսի լուրջ թեմաներ, ինչպիսիք  են  հակավակցինային  շարժումները  և  սոցիալական  կարծրատիպերից խուսափումը: ", "Կեղծ թիրախների առկայությունը տեսադաշտում։ Նկարագրված մեթոդի 2-րդ խնդիրը կեղծ թիրախների առկայությունն է տեսադաշտում (ետին պլանում)։ ", "Քանի  որ  հայտնաբերման  մեթոդը  ման  է  գալիս  կադրերի  միջև  փոփոխություն, ապա  ֆոնում(ետին  պլանում)  առկա  ծառերը,  ամպերը,  խոտը,  բնական  կլիմայական պայմաններում  գտնվելով  շարժման  մեջ,  կառաջացնեն  կադրերի  միջև  պիքելային փոփոխություններ,  որը  համակարգի  կողմից  կդիտարկվի  որպես  նոր  օբյեկտների առկայություն։  Նշված  նոր  օբյեկտները  կհանդիսանան  կեղծ  թիրախներ,   որոնք դիտարկման  համար  հետաքրքրություն  չեն  ներկայացնում  և  խանգարում  են  իրական օբյեկտների հայտնաբերմանը: ", "«SandGame»-ը  [45]  իրականավել  է  հիմնվելով  ավազակույտի  աբելյան  մոդելի  վրա՝ նպատակ ունենալով խթանել ինքնակազմակերպվող համակարգերի հետազոտումը և  դյուրըմբռումը,  և  ունի  լուրջ  մտածված  կրթական  նպատակ,  հետևաբար  չի նախատեսվում օգտագործել միայն զվարճանքի համար, մինչդեռ այն բավականին գրավիչ  է  զվարճանքի  տեսանկյունից:  Իրականացված  խաղի  մոդելի  գաղափարը հիմնված է  ավազակույտի  մոդելին  առնչվող  տարբեր  թեորեմների  և տեսությունների  վրա,  որոնք  իրենց  հերթին  բարելավվում  են  ուսուցման խորությունը  և  բարձրացնում  են  գրավչությունը:  Անշուշտ,  բուհերի  և  դպրոցների համար  անհրաժեշտ  է  գիտական  խաղերի  հագեցած  ուսուցման  մեխանիզմների գոյությունը:  SandGame  խաղում  ավազակույտի  մոդելը  դիտարկվել  է  եռաչափ  և երկչափ  կապակցված  ցանցի  վրա  (Նկար  23):  Ցանցի  կապակցվածությունը հնարավորություն  է  տալիս  մոդելում  ունենալ  հավասարազոր  գագաթներ  ըստ հարևանների  քանակի,  ինչպես  նաև  թույլ չի  տալիս  մոդելին  կորցնել ավազահատիկ: ", "«SandGame»  խաղը  միաժամանակ  ապահովում  է  երկչափ  և  եռաչափ տեսաբերում,  ինչպես  նաև  դիտման  անկյունների  փոփոխություն  և  շերտերի առանձին  դիտման  հնարավորություն:  Վերոնշյալից  զատ,  SandGame-ում  կա  նաև մոդելի տվյալ պահին վերաբերող համապատասխան բնութագրիչների հաշվարկ և տեսաբերում  իրական  ժամանակում,  որոնք,  ավազակույտի  մոդելին  վերաբերող բազմաթիվ  թեորեմների  հետ  մեկտեղ  նպաստում  են  օգտատերերի  ավելի  ճշգրիտ որոշումների կայացմանը: Նշենք նաև, որ SandGame-ը չունի ինչպես հոսթինգների, այնպես էլ միևնույն հոսթինգի օգտատերերի քանակի սահմանափակումներ: ", "Նկար 23.SandGame խաղը երկու խաղացողների դեպքում: ", "Խաղում  օգտագործողների  նպատակն  է  հասնել  անվերջ  անկայուն  վիճակի հերթով  գցելով  ավազահատիկներ՝ օգտագործողների կողմից ընտրված կոորդինատներին:  Խաղը՝  դիտարկված  լինելով  փակ  եզրակետերով  ցանցի  վրա, հնարավորություն  է  ընձեռում  մոդելին  չկորցնել  ավազահատիկ:  Հետևաբար, կարելի  է  վստահ  լինել  վերջավոր  ժամանակում  հաղթող  ճանաչվելու  փաստում: ", "Հարկավոր  է  մշակել  այնպիսի  հայտնաբերման  մեթոդը,  որը  կաշխատի  մեծ ճշտությամբ  և  պատկերում  կհայտնաբերի  անգամ  այն  թաքնված  օբյեկտները,  որոնք ունեն մեծ գունային նմանություն ֆոնային պատկերին, որոնք մարդու աչքին հասանելի Ճանաչման  ալգորիթմի  ժամանակի  ծախսը  տեսադաշտում  բազում նույնատիպ  օբյեկտների  առկայության  դեպքում։  Նկարագրված  ճանաչման մեթոդների  մեծ  մասի  կիրառությունը  օգտակար  կլինի  մեկ  կամ  մի  քանի  օբյեկտի հայտնաբերման  դեպքում։  Սակայն  տեսադաշտում  բազում  օբյեկտներ  ունենալու դեպքում,  կիրառելով  նկարագրված  ճանաչման  մեթոդներց  ցանկացածը,  կծախսենք բավականաչափ շատ ժամանակ, որը անթույլատրելի կլինի այնպիսի համակարգերում, որտեղ  հարկավոր  է  կիրառել  օպերատիվ  տեսահսկում,  և  անգամ  վայրկյանների տարբերությունը մեծ կարևորություն ունի։ ", "Տեղեկատվական  անվտանգության  տեսանկյունից  պարզ  ինտերնետ  իրերի անվտանգության հիմնական խնդիրները կապված են տվյալների փոխանակման հետ [41]։ ", "Ներկայացնենք  թե  ինչպես  են  խաղում  SandGame-ը:  Խաղի  քայլերի հերթանականությունը  բաժանենք  3  բաժինների:  նախապատրաստություն, գործողություններ, հաղթողի ճանաչում: ", "•  Նախապատրաստություն  –  նոր  խաղ  սկսելու  համար  խաղացողը ընտրում  է  \"File\"  վերին  պանելից,  այնուհետև  ընտրում  \"New  game\" տարբերակը,  որից  հետո  հայտնվում  է  պատուհան  ցանցի  չափի մուտքագրման համար: Մուտքագրելուց հետո  ստեղծվում  է նոր մոդել, որն արդեն սկզբնարժեքավորված կլինի քանակությամբ ավազահատիկներով:  Մոդելով  կիսվելու  և  խաղի  ալիքը  մյուս խաղացողների  համար  հասանելի  դարձնելու  համար  խաղացողը պետք  է  ընտրի \"Broadcasting\"  տարբերակը  վերևի  պանելից, այնուհետև  ընտրի  \"Start  Broadcasting\"  կոճակը,  որից  հետո  կհայտնվի պատուհան,  որտեղ  խաղացողը  պետք  է  մուտքագրի  խաղի  ալիքի անվանումը(օրինակ ASM students introduction), որով մյուս խաղացողները  կգնտնեն  տվյալ  ալիքը:  Դրանից  հետո  մյուս խաղացողները  կարող  են  բացել  ալիքների  ցուցակը  ընտրելով \"Broadcasting\" օպցիան վերևի պանելից և սեղմելով «Connect to Chanel» կոճակը:  Կբացվի  ալիքների  պատմությունը  ցույց  տվող  պատուհան, որտեղ հասանելի կլինեն ինչպես  ակտիվ,  այնպես էլ պասիվ/ավարտված ալիքները (Նկար 24): Ալիքների ցանկից ընտրելով ցանկալի  ալիքը  (ASM  students  introduction  մեր  դեպքում)  նրանք կմիանան միևնույն ալիքին դիտարկելով միևնույն մոդելը: ", "Ակնհայտ է, որ ցանկացած ինտերնետ իրին տրված հրամանների վերծանումը բարդություն չի ներկայացնում և  անվտանգության ապահովման կարևոր խնդիր է [40]։ ", "•  Գործողություններ –  Նույն  ալիքին/մոդելին  միանալուց  հետո խաղացողները  կարող  են  սկսել  ավազահատիկների  ավելացման պրոցեսը, որը կատարվում է ըստ  ալիքին միացման հերթականությամբ:  Նշենք  որ  ամեն  խաղացողին  թույլատրվում  է ավելացնել  միայն  մեկ  ավազահատիկ  ամեն  քայլում  (Նկար  25):  Դրա համար  խաղացողը  ընտրում  է  \"Edit\"  օպցիան  վերևի  պանելից, այնուհետև սեղմելով \"Add Grain\" կոճակը հայտնվում է նոր պատուհան, որտեղ խաղացողը մուտքագրում  է իրեն ցանկալի կոորդինատները, և վերջացնելուն պես սեղմում պատուհանի «Add» կոճակը: ", "Այդ գաղտնահամակարգը  ներդրվելու  է  լրացուցիչ  սարքում,  որը  շարժական  բանալի  է համացանցի և ինտերնետ իրերի միջև[41]: ", "Հաղթողի  ճանաչում  –  Այն  խաղացողը,  որի  ավելացրած ավազահատիկը  դրդում  է  մոդելին  ընկնել  անվերջ  անկայուն  վիճակի մեջ  ճանաչվում  է  հաղթող:  Այստեղից  կարելի  է  եզրակացնել,  որ խաղացաղները  կարող  են  գցել  ավազահատիկ  միայն  այն  ժամանակ, երբ  ըստ  հերթականության  նրանցից  նախորդ  խաղացողը  արդեն ավելացրել  է  ավազահատիկ  և  դրանից  հետո  մոդելում  կատարվել  են բոլոր  անհրաժեշտ  փլուզումները,  և  մոդելը  կայունացել  է:  Իսկ  մոդելի անվերջ անկայուն վիճակի հասնելը ստուգումը կատարվում է փլուզման ալիքի  ընթացքում  բոլոր  գագաթների  առկայությունով:  Այլ  կերպ ասված  փակ  համակարգում  եթե  փլուզման  ալիքի  ընթացքում  ամեն գագաթ  փլուզվել  է  գոնե  մեկ  անգամ  կարելի  է  համոզված  լինել  որ մոդելը ընկել է անվերջ անկայուն վիճակում: ", "SandGame-ի  հիմքում  եղած  լուրջ  տեսությունը  դեպի  հաղթանակ  տանող ճանապարհը  ավելի  դժվար  է  դարձնում,  երբ  հակառակորդները  պրոֆեսիոնալ խաղացողներն  են  լինում:  SandGame-ը  հնարավորություն  է  տալիս  յուրաքանչյուր խաղացողի  ստեղծել  իր  սեփական  հաղթանակի  տանող  ռազմավարությունը, սակայն  հաղթողը  կլինի  այն  մեկը,  որի  ռազմավարությունը  ավելի  լավ  կլինի: ", "•  արտադրողական  սահմանափակումներից  ելնելով`  փոխանցվող  հրամանների անվտանգության  ապահովման  համար  խուսափի  գաղտնագրման/վերծանման գործառույթներից։ ", "ավազահատիկներ և  մաքսիմալ հեռավորություն» խնդրի լուծման դիտարկումը Արհեստական  նեյրոնային  ցանցերը  մաթեմատիկական  մոդելներն  են,  ինչպես նաև  նրանց  ծրագրային  կամ  սարքային  իրականացումներ,  որոնք  կառուցված  են բիոլոգիական  նեյրոնային  ցանցերի  (կենդանի  օրգանիզմի  նեյրոնային  բջիջների) հիման  վրա։  Այս  հասկացությունը  առաջացել  է  գլխուղեղում  առաջացող պրոցեսների  ուսումնասիրման  և  այդ  պրոցեսների  մոդելավորման  փորձերի արդյունքում։ Այդպիսի առաջին փորձը Մակկալոկի և Պիթսի նեյրոնային ցանցերն էին [60]: Հետագայում, ուսուցողական ալգորիթմների մշակումից հետո, ստացված մոդելները  սկսեցին  կիրառել  պրակտիկ  նպատակներով`  կանխատեսման խնդիրներում,  կերպարների  ճանաչման  համար,  կառավարման  խնդիրներում  և այլն։  Մասնավորապես  Նկար  26-ում  պատկերված  է  բնական  ուղեղի  նեյրոնի կառուցվածքը, որտեղ նշված ամեն մաս ունի ուրույն աշխատանքը. •  Dendrite – ստանում են տվյալներ •  Axon – ուղարկում են տվյալներ •  Synaptic terminal – Երկու նեյրոնի միացման կետերն են •  Neurotransmitter – փոխանցում է տվյալներ երկու նեյրոնների միջև Նկար 26.Բիոլոգիական նեյրոնային ցանց:8 Եթե ավելի խորը դիտենք տվյալների փոխանցման հատվածը կունենանք Նկար 27- ի պատկերը, որտեղ. •  Receptor – տվյալների ընդունիչ •  Neurotransmitter transporter – Neurotransmitter-ի փոխադրիչ Նշեմ նաև որ ինչքան կարևոր է նեյրոններում փոխանցվող ինֆորմացիան այնքան ավելի շատ Neurotransmitter-ներ են արտադրվում և փոխանցվում: ", "Նկար 27.Բիոլոգիական նեյրոնային ցանցում ինֆորմացիայի փոխանակում:9 Արհեստական նեյրոնային ցանցերի դեպքում կունենանք Նկար 28-ի պատկերը: ", "Նկար 28.Բիոլոգիական նեյրոնի պարզեցում: ", "Նկ.8. Շարժական բանալու կառավարման վահանակում նոր կարգաբերումների ավելացման պատուհանը Քայլ  2.  Շարժական  բանալու  միջոցով  ուղարկվող  և  ստացվող  հարցումները դասակարգվում  են  2  դասի՝  հեշային  և  գաղտնագրային.  հարցումներից  կախված կատարվում է կամ  հրամանների/հեշերի  արտապատկերում  կամ  տվյալների գաղտնագրում/վերծանում։ ", "նույնականացում։ ", "Նեյրոնային  ցանցերը  չեն  ծրագրավորվում  բառից  բուն  իմաստով,  դրանք ուսուցանվում  են:  Ուսուցանելու  հնարավորությունը  նեյրոնային  ցանցերի  գլխավոր առանձնահատկություններից  է։  Տեխնիկապես  ուսուցումը  կայանում  է  նեյրոնների միջև  կապերի  գործակիցների  առկայությամբ։  Ուսուցման  պրոցեսում  նեյրոնային ցանցը  ունակ  է  հայտնաբերել  մուտքային  և  ելքային  տվյալների  միջև  բարդ կախվածություններ,  ինչպես  նաև  կատարել  ընդհանրացում,  որի  հետևանքով «ամրապնդվում»  է  նեյրոնների  միջև  կապերի  կշիռները:  Դա  նշանակում  է,  որ հաջող  ուսուցման  դեպքում  ցանցը  կարող  է  վերադարձնել  ճիշտ  արդյունք  այն տվյալների  հարցումների  դեպքում,  որոնք  բացակայում  էին  ուսուցողական ընտրանքում,  ինչպես  նաև  հնարավոր  են  լինել  ոչ  լիարժեք  և/կամ  «աղմկոտ», մասամբ աղավաղված արդյունքներ։ ", "Շարժական Բանալի ՊԻԻ ՊԻԻ ՊԻԻ Հրամանների Հրամանների արտապատկերում արտապատկերում Գաղտնագրային գործառույթներ Նկ.9. Գաղտնահամակարգի աշխատանքի սխեման Քայլ 1-ում շարժական բանալուն միացված պարզ ինտերնետ իրի կարգաբերումները ավելացնելիս  նկ.8-ում  ներկայացրած  «hրամաններ»  կարգաբերումը  պետք  է  նշվի  միայն այն դեպքում, երբ սարքի մոդելը առկա է համապատասխան դաշտի մոդելների ցուցակում, այլապես  անհրաժեշտ  է  ավելացնել  սարքը  ինքնուրույն՝  նշելով  սարքի  կողմից  ընդունվող բոլոր հրամանները, որոնք անմիջապես ուղարկվում են սերվերին։ ", "հոսքերի(բազմահոսքության) սկզբունքով աշխատող ալգորիթմ: ", "Նկար 29.Feedforward արհեստական նեյրոնային ցանց: ", "Այնուհետև կատարվում է ևս մեկ հարցում՝ ի պատասխան որի շարժական բանալին ստանում  է  գաղտնի  բանալին  և  այնուհետև  օգտագործում  է  այն  մուտքային  և  ելքային հարցումները սպասարկելու համար։ ", "Feedforward  նեյրոնային  ցանցը  առաջին  և  ամենապարզ  նեյրոնային  ցանցի տիպն  է:  Այս  տեսակի  ցանցերում  տեղեկատվությունը  շարժվում  է  միայն  մեկ ուղղությամբ, մուտքի հանգույցներից, թաքնված հանգույցների միջոցով (եթե առկա է)  դեպի  ելքային  հանգույցներ:  Տվյալ  տիպի  ցանցերում  ցիկլեր  կամ  հանգույցներ չկան ի տարբերություն ռեկուրենտ տիպի ցանցերի: Ռեկուրենտ նեյրոնային ցանցը արհեստական  նեյրոնային  ցանցերի  դաս  է,  որտեղ  հանգույցների  միջև  կապերը հաջորդականությամբ  ուղղորդված  գրաֆիկ  են  կազմում:  Ի  տարբերություն feedforward  նեյրոնային  ցանցերի,  ռեկուրենտ  նեյրոնային  ցանցը  կարող  է օգտագործել  իր  ներքին  վիճակը  (հիշողություն)  մուտքերի  հաջորդականության մշակման համար, որը թույլ է տալիս նմանատիպ ցանցերի կիրառությունը այնպիսի խնդիրների  դեպքում,  ինչպիսիք  են  ոչ  սեգմենտավորված  և  կապված  ձեռագիր գրությունների ճանաչումը կամ խոսքի ճանաչում: ", "Ինչպես  նշվեց,  արհեստական  նեյրոնային  ցանցերը  բաղկացած  են պրոցեսինգային  միավորներից  (նշանակենք՝  PU)  ,  որոնք  հանդիսանում  են արհեստական նեյրոնային ցանցերի հիմնասյուները: PU- ն սովորաբար ունի Նկար ֆունկցիան: ", "Այն  հաշվարկված  է  այնպես,  որ  աշխատի  եղանակային  փոփոխոթյունների դեպքում  ևս,  ինչպես  նաև  օրվա  ցանկացած  ժամին՝  անկախ  արևի  պայծառությունից (որը  բերում  է  լույսի  ինտենսիվության  շատացմանը  կամ  քչեցմանը  պատկերում), այսպիոսով՝ մեթոդը աշխատում է դինամիկորեն: Մեթոդի կիրառման համար մշակվել է  համակարգ:  Վերահսկելու  նպատակով  տեսախցիկը  տեղադրում  ենք  այնպիսի տարածքում,  որտեղ  օբյեկտի  ներթափանցումը  խստիվ  արգելված  է  և  վտանգավոր, օրինակ՝  երկաթուղային  հանգույցում:  Տեսախցիկը  տեղադրելուց,  միացնելուց  հետո անմիջապես  սկսում  է  աշխատել  ալգորիթմը  ուղիղ  ռեժիմով,  նկարահանմանը զուգահեռ:  Ալգորիթմը    անմիջապես  պահպանում  է  սկզբնական(առաջին)  պատկերը: ", "Վերոհիշյալ  G  մատրիցը  հնարավոր  է  ստանալ`  հարցում  կատարելով  ընդհանուր ինդեքսային բանալիների կենտրոնին կամ հաշվարկել հատարկման տարբերակով։ ", "𝐴𝐴 -ի մուտքային արժեք կարող է լինել կամ 𝑃𝑃𝑃𝑃 𝑖𝑖 -ի ելքային արժեքը, կամ 𝑃𝑃𝑃𝑃 ուղղակիորեն  նեյրոնային  ցանցի  արտաքին  աշխարհից  տրված  արժեք: "]}
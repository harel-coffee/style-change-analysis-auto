{"paragraph_source_docs": [1, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 3, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 1, 1, 1, 0, 2, 1, 0, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1], "paragraphs": ["Բոլոր նշված տվյալների մասին ավարտուն և հավաստի ինֆորմացիան գտնվում է  նմուշի  GDSII  գրաֆիկական  ֆայլում  (Տես՝  նկ.  1.11),  որի  հետ  աշխատելը,  ինչպես արդեն  նշել  էինք,  շատ  ժամանակատար  է  և  պահանջում  է  մեծ  քանակի  հաշվողական ռեսուսներ:  Բազմաքանակ  հիշողության  կոմպիլյատորներ  և  հիշողության  նմուշներ հետազոտելուց հետո հասկանալի դարձավ, որ խճողման բոլոր տեսակները և դրանց պատճառները, և կիրառական ծրագրերի համար  հարմար ձևաչափով տրամադրել հիշողության սարքերի  խճողման  ինֆորմացիան կոմպիլյատորների  և  նաև  նմուշների մակարդակով:  Խնդիր  էր    դրվում  ստեղծել  ՀՍ-ի  կառուցվածքային  մոդելը  և  այն ներկայացնող լեզուն: ", "«Gmail-ում» SMS հաղորդագրությունների միջոցով ծանուցման ծառայություն ներառված չէ, սակայն կան երրորդ կողմի ստեղծած հավելվածներ, որոնք ավելացվելով համակարգին ապահովում են տվյալ ֆունկցիան (օրինակ՝ Cloud HQ9 հավելվածը): Ընդհանուր առմամբ այս մոդելի կիրառության համար օգտատերը պետք է կատարի հետևյալ քայլերը՝ • Գրանցվել էլեկտրոնային փոստի համակարգում, • Սահմանել  որոշակի  չափորոշիչներ,  որոնց  բավարարելու  դեպքում  նամակի մասին կուղարկվի ծանուցում: ", "Ընդհանուր  դեպքում,  հիշողությունը  նկարագրող  մոդելը  բաղկացած  է  երկու  մասերից՝ հիշողության  վարքագծային  և  կառուցվածքային    մասերից  [11]:  Այս  աշխատանքի սահմաններում  մենք  կդիտարկենք  միայն  հիշողության  մոդելի    կառուցվածքային - 42 - մոդելի  գեներացման  հետ  կապված  խնդիրները:  Կառուցվածքային  մոդելը  կազմող կառուցվածքային  խճողման  տիպերը  և  դրանց  հատկությունները  մանրամասնորեն ներկայացված են [11]-ում: Թվարկենք կառուցվածքային խճողումներից մի քանիսը՝ բառային և բիթային գծերի միջև, Նշենք,  որ  հիշողության  մոդելի  կառուցվածքային  խճողումների  տրոհումը  տեսակների թույլ  է  տալիս  արդյունավետ  կերպով լուծել  հիշողությունների  թեստավորման, ախտորոշման և նորոգման խնդիրները՝ օգտագործելով միայն այդ պահին  պահանջվող, որոշակի կառուցվածքային միավորների խումբը: ", "տարբերությունը՝ Որևէ  i-րդ  շղթայի  ժամանակի  պահուստը  ներկայացնում  է  տվյալ  շղթայում    ճիշտ ազդանշանի ձևավորման  ժամանակների  վերին  և  ներքին  սահմանների (1.10) - 34 - Սխեմայի արագագործության տեսանկյունից՝ (1.3) և (1.10)-ից հետևում է, որ շղթայի ժամանակի պահուստը բնութագրում է շղթայի կարևորությունը: Որքան փոքր է շղթայի ժամանակի  պահուստը,  այնքան  տվյալ  շղթայում  առաջացող  հապաղումը  ավելի  է ազդում սխեմայի արագագործության վրա: Հետևաբար, սխեմայում այս կամ այն շղթայի ժամանակի  պահուստը  ֆիզիկական  նախագծման  փուլում  կարող  է  ծառայել  որպես ֆիզիկական  կառուցվածքում  շղթաների  երկարության  կառավարման  միջոց:  Հաշվի առնելով  այն հանգամանքը, որ ֆիզիկական կառուցվածքում շղթաների երկարությունները կանխորոշվում են տարրերի տեղաբաշխման ժամանակ, կարող ենք հանգել  կարևոր  եզրակացության․ շղթայի  ժամանակի  պահուստը  կարող  է  ծառայել, որպես  ժամանակային  տեղաբաշխման  որակի  չափանիշ:  Տեղաբաշխման  ավանդական ալգորիթմներում  որպես  որակի չափանիշ  օգտագործվում  է  միջմիացումների գումարային երկարության չափանիշը [3]՝ ,                                      (1.11) որտեղ -i-րդ  և  j-րդ  տարրերի  միջև  կապերի  թիվն  է, -ն՝  տեղաբաշխման արդյունքում  i-րդ  և  j-րդ  տարրերի  միջև  եղած  հեռավորությունը,  N-ը՝  տեղաբաշխվող տարրերի  թիվը, -ը՝  տարրերի  տեղաբաշխման  բոլոր  հնարավոր  տարբերակների թիվը: ", "Հետազոտությունների  արդյունքում՝  ՀՍ-ի  կոմպիլյատորներում  կառուցվածքային մոդելի  ներկայացման  ձևաչափ  է  ընտրվել  սցենարների    նկարագրման  նպատակով ստեղծված  TCL  (Tool  Command  Language)  լեզուն, իսկ  հիշողության  նմուշների կառուցվածքային մոդելի նկարագրության համար օգտագործել է  տեքստային ձևաչափը [11]:  TCL  ծրագրավորման լեզուն  մեծ  տարածում  ունի  էլեկտրոնային  սարքեր նախագծող  ընկերություններում  և լայնածավալ  օգտագործվում է  սարքերի թեստավորման  բնագավառում՝  որպես թեստավորման սցենարներ նկարագրող գործիք [28]:  Մինչ  TCL  լեզուն  օգտագործելը  հիշողության  կոմպիլյատորներում    խճողման մասին  ինֆորմացիան  ներկայացվում  էր  բազմաթիվ  աղյուսակների  տեսքով՝  DOC  կամ TXT  ֆայլերում:  Ընդհանուր  առմամբ,  մուտքային  տվյալների  DOC ֆայլերում աղյուսակային  ներկայացումը  անհարմար  ձևաչափ  է  հանդիսանում  ավտոմատացման Compiler information MIG Graphic tool Compiler scramble.tcl file Նկար 1.22.   Հիշողության  կոմպիլյատորի խճողման ֆայլի  գեներացումը համար:  Բայց  մյուս  կողմից  TCL  լեզվով  հիշողության  խճողումների  տեսակները նկարագրելը (ծրագրավորելը),  այնուհետև  այդ  մոդելում  ծրագրային  սխալների վերացումը իր հերթին, բարդ գործընթաց է և նախագծող ճարտարագետից պահանջում է բարձր  որակավորում  և  հատուկ  գիտելիքների  առկայություն:  Հիշողության  խճողման ինֆորմացիայի  ստանդարտացման  և  ներդրման  աշխատանքների  սահմաններում՝ ճարտարագետի  աշխատանքը  հեշտացնելու  նպատակով  ստեղծվել  է  կառուցվածքային մոդելի  գեներատոր  ԱՀ    MIG  (անգլերեն՝  Memory  Information  Generater)  ծրագրային գործիքը [17] (Տես՝  նկ.  1.22),  որը  հնարավորություն  է  տալիս  գրաֆիկական - 44 - ինտերակտիվ  միջավայրում  նկարագրել  հիշողության  կոմպիլյատորի  խճողման տեսակները  և  այնուհետև  ավտոմատ ձևով գեներացնել նկարագրությանը համապատասխան  TCL  կոդը՝  scramble.tcl  ֆայլը:  MIG  ծրագրային  ԱՀ-ի  նկարագրումը դուրս    է  այս    աշխատանքի  սահմաններից,  բայց  հարկ  է  նշել,  որ  այն  (MIG  ԱՀ-ը) հիշողության    խճողման  ինֆորմացիայի  ստանդարտացման  [11]  և  կիրառման  առաջին արդյունքն է հանդիսանում: ", "MIG  գործիքը  էականորեն  հեշտացնում  է  հիշողության  կոմպիլյատորի  խճողման նկարագրման  գործընթացը  և  բացառում  է  սխալները  TCL  կոդի  գեներացման ընթացքում:  Իհարկե,  կոմպիլյատորի  խճողման  TCL  կոդի  վերջնական  տարբերակը՝ հիշողության  սարքերի  կառուցվածքային  մոդելը,  հետագայում  անցնում  է՝  բոլոր տեսակի  մոդելների  համար  պարտադիր  պայման  հանդիսացող  [12], [28],  [29], համապատասխանության ստուգման փուլերով: ", "Դիտարկենք  կառուցվածքային  խճողումների  տեսակներից  մի  քանիսը:  Մոդելների ներկայացման ձևերն են.  աղյուսակային, թվային արտահայտություններ, բանաձևերով, գրաֆիկների  տեսքով:    Մինչ  խճողումների  դասակարգումը  և  նկարագրման  ստացման ավտոմատացումը,  հիշողության  կոմպիլյատորներում,  հիշողության  կառուցվածքի խճողման  մասին  ինֆորմացիան  ներկայացվում  էր  տարբեր  տեսակի  աղյուսակների միջոցով: ", "Հիշողության հասցեների խճողումը Հիշողության  այն  հասցեն,  որի  նկատմամբ  կիրառվում  է  արժեքի  ընթերցման  կամ պահպանման գործողությունը, կանվանենք տրամաբանական հասցե: Հիշողության բջջի (բառի) ֆիզիկական  հասցե  (դիրքը)  կանվանենք  նրա  ֆիզիկական  դիրքը՝  ֆիզիկական տողի  և  սյան  համարները,  հիշողության  բջիջների  երկչափանի  զանգվածում: ", "Ավանդական «Մարշ» տեստային ալգորիթմները բաղկացած են «Մարշ» վերջավոր թվով հաջորդականություններից,  որոնք  կատարվում  են  հիշողության  բջիջներից  կազմված բառերի  համար`  հասցեների  որոշակի  աճման  (0-ական  հասցեից    մինչև  մաքսիմալ հասցե),  նվազման  (մաքսիմալ  հասցեից  մինչ  0-ական  հասցե)  հաջորդականությամբ: ", "Անսարքությունների  դասերը  [25],  որոնց  համար  նախագծվում  էին  այդ  ալգորիթմները, դրսևորվում են հիշողության հասցեներին դիմելիս կանոնավոր հաջորդականությամբ: [24]- - 45 - ում  ժամանակակից հիշողության  սխեմաներում  առաջացող  անսարքությունների որոշակի  դասերի  հայտնաբերման  համար  առաջարկվում  է  ալգորիթմ,  որը  պետք  է կիրառի  արժեքի  պահպանման  և  ընթերցման  գործողությունները  ֆիզիկապես  զույգ (կենտ)  համարներ  ունեցող  տողերի  (սյուների)  վրա  գտնվող  բջիջներում:  Նման  տիպի ալգորիթմների  ճշգրիտ  իրականացման  համար  անհրաժեշտ  է  իմանալ  հիշողության տրամաբանական  և  ֆիզիկական  հասցեների  համապատասխանությունը:  Հիշողության հասցեի  խմբի  (address  bus)  մուտքերին  միացած  ազդանշանները  տրամաբանորեն բաժանվում  են  երկու  մասի.  մի  մասը  մուտք  են  հանդիսանում  բջիջների  երկչափ զանգվածում  ֆիզիկական  տողերի, իսկ մյուս մասը`  ֆիզիկական  սյան ապակոդավորման  սխեմաների  համար:  Տրամաբանական  հասցեի  մյուս  մասը,  որը մուտք  է  հանդիսանում  ֆիզիկական  սյան  ապակոդավորող  սխեմայի  համար, կանվանենք  տրամաբանական  սյան  հասցե:  Հասցեների  խճողումը  նկարագրող ֆունկցիան կարելի է ներկայացնել հետևյալ տեսքով (12). ADR(BKj, CMi,a1,a2,…amax) = Fadr {N, C, P1,P2,…,Pm}      , որտեղ (12) BKj – բանկերի քանակն է՝ հիշողության կոմպիլյատորում, CMi -  սյուների  ապակոդավորիչի  գործակիցներն  են՝  հիշողության կոմպիլյատորում, a1,a2,…amax  - հիշողության տրամաբանական հասցեներն են P1,P2,…,Pm - հիշողության ապակոդավորիչի Ֆիզիկական հասցեներն են: ", "Աղյուսակ  1.4-ում  տրված  է  հասցեների  խճողումը  ընդհանուր դեպքում աղյուսակային  տեսքով  ներկայացումը:  Լրացնելով  աղյուսակի  դաշտերը  հիշողության բանկերի  (BK)  և  սյուների  ապակոդավորման  (CM)  արժեքների  համար  կստանաք հիշողության  հասցեների խճողումը պատկերող աղյուսակը: ", "Էլեկտրոնային  փոստարկղի  պարունակությանը  կարելի  է  հասանելիություն ստանալ  ստանդարտ  արձանագրությունների  (protocol)  օգնությամբ։  Գոյություն  ունեն էլեկտրոնային  փոստերի  հետ  աշխատող  հավելվածներ,  որոնք  ծանուցման  ինֆո- կոմունիկացիոն  լուծումներ  են  առաջարկում։  Այս  համակարգերը  հասանելիություն  են ստանում  օգտատիրոջ  փոստարկղին՝  նրա  էլեկտրոնային  հասցեի  և  գաղտնաբառի միջոցով10։ Դրանք, ստանդարտ արձանագրությունների միջոցով՝ ինչպիսիք են POP311-ը կամ  IMAP12-ը,  պարբերաբար  դիմումների  շնորհիվ  կարողանում  են  տեղեկանալ փոստարկղում հայտնված նոր նամակների մասին: ", "Հասցեների  խճողումը  ներկայացնող  TCL  կոդը  իրենից  ներկայացնում  է  պրոցեդուրա, որի  աշխատանքի  շնորհիվ  վերադարձվում  է  մասնավոր  դեպքի՝  հիշողության  նմուշի, հասցեների  խճողումը  բնորոշող  ազդանշանների  անուններով  ցուցակը,  օրինակ  {YA0 YA1 XA0 XA1 XA2 XBK0}: ", "- 47 - proc address_scramble { } { global scramble_db Տողերի խճողումը Հիշողության կոմպիլյատորի տողերի խճողումը նկարագրող ֆունկցիայի տեսքն է՝ Ri = Frow{Pn} ,        որտեղ (13) Ri – նմուշի տրամաբանական տողի հասցեն է և  i  {0,1,…, max}, Pn - նմուշի ֆիզիկական տողի հասցեն է և  n  {0,1,…, max}, Աղյուսակ 1.6-ում տրված է տողերի խճողման ներկայացման աղյուսակային ձևը: ", "Տողերի խճողման աղյուսակային ներկայացման ձևը Աղյուսակ 1.6 Տրամաբանական Ֆիզիկական համարը համարը Row 0 Row 1 Row 2 Row Maximum Այն  իրենից  ներկայացնում  է  տրամաբանական  և  ֆիզիկական  տողերի  համարների պարզագույն    արտապատկերումը:  Ինչպես  արդեն  նշել  ենք,    տողերի  խճողման պատճառ են հանդիսանում  տողերի  ապակոդավորիչի կառուցվածքային յուրահատկությունները:    Տողերի  խճողման  աղյուսակային  ներկայացման  ձևաչափը նույնպես  երկկողմանի  է  (տրամաբանականից  դեպի  ֆիզիկական  և  հակառակը):  Ի տարբերություն աղյուսակային ներկայացմանը, TCL տրվող պրոցեդուրան միակողմանի է և հետևաբար պետք է ունենալ տողերի խճողումը նկարագրող երկու իրարից անկախ՝ տրամաբանականից  դեպի  ֆիզիկական  և  ֆիզիկականից  դեպի    տրամաբանական, անցման պրոցեդուրաներ. ա) Տողերի խճողման տրամաբանականից դեպի ֆիզիկական TCL (row_scramble_logical_to_physical) պրոցեդուրան  վերադարձնում  է  հիշողության - 48 - նմուշի  ֆիզիկական  տողերը  ներկայացնող  համարների  հաջորդականություն՝ ենթադրելով, որ տողերի տրամաբանական համարները կանոնավոր ձևով աճում են հիշողության զանգվածի ֆիզիկական ներքևի մասի առաջին տողը օրինակ {0 1 2 3 7 proc row_scramble_logical_to_physical { log_row } { բ)  Տողերի  խճողման  ֆիզիկականը  դեպի  տրամաբանականը  ներկայացնող  TCL (row_scramble_physical_to_logical)  պրոցեդուրան  ֆիզիկական  տողի  համարի    հիման վրա գեներացվում է տրամաբանական տողի համարը: ", "proc row_scramble_physical_to_logical { phys_row } { global scramble_db global scramble_db Սյուների խճողումը Սյուների  խճողում  հասկացության  տակ  մենք  հասկանում  ենք  հիշողության զանգվածի սյուների տրամաբանական և ֆիզիկական համարների արտապատկերումը: ", "Ցանցի  նեյրոնները  միմյանց  կապող յուրաքանչյուր  կապուղու  կշռի  արժեքը թարմացվում է հետևյալ հավասարմամբ՝ Հավասարում (2.18)-ում՝  -ն ուսուցման արագության գործակիցն է: Ելքային շերտի համար -ի  ածանցյալը  ըստ -ի  կարելի  է  հաշվարկել  պարզ  դիֆերենցիալ հավասարմամբ՝ որտեղ որտեղ Այսպիսով ստանում ենք՝ Ելնելով հավասարում (2.23)-ից ելքային շերտի համար կունենանք՝ որից կհետևի, որ մնացած շերտերի համար համապատասխանաբար կստանանք՝ Հավասարում (2.18)–ից հետևում է, որ յուրաքանչյուր հաջորդ շերտերի համար կշռի փոփոխությունը կբնութագրվի համապատասխանաբար հետևյալ հավասարումներով՝ ԱՆՑ-ի  միջոցով  ՄԱՆ-ի  խնդրի  լուծման  համար  ցանցի  յուրաքանչյուր  մուտքին տրվում  է  մեկ  հաշվարկված  հիմնական  բնութագրող  հատկանիշ,  ինչի  արդյունքում նեյրոնների  համապատասխան  ակտիվ  և  պասիվ  վիճակների  հաշվարկների  և համադրությունների  միջոցով  ակտիվանում  է  ելքային  շերտի  այն  նեյրոնը,  որը համապատասխանում  է  նույնականացված  մոդուլացման  տեսակին:  Անհրաժեշտ  է հաշվի  առնել  ցանցի  մուտքին  տրված  բնութագրող  հատկանիշների  քանակը,  քանի  որ դրանց  քանակի  ավելացումը  և  նվազեցումը  անմիջական  ազդեցություն  ունի հաշվարկների  բարդության  և  ուսուցման  տևողության  վրա:  Բազմաշերտ  ԱՆՑ-ի դեպքում ցանցի կառուցվածքի որոշման հստակ մեխանիզմ գոյություն չունի: Խորհուրդ է տրվում թաքնված շերտերի և դրանց բաղկացուցիչ  մաս կազմող նեյրոնների քանակը համապատասխանեցնել  տվյալ  խնդրին:  Դրանց  քանակը  պետք  է  համապատասխանի խնդրի բարդությանը, քանի որ դրանց անհրաժեշտ քանակի պակասի դեպքում կարող է տուժել  նույնականացման  որակը,  իսկ  ավելցուկի  դեպքում՝  երկարում  է  ուսուցման տևողությունը:  Ուսուցման որակի բարելավման համար բավականին լայն հնարավորություններ է ստեղծում դրանց քանակի ինքնակազմակերպումը: ", "Ինչպես  արդեն  նշվել  է  1.2  բաժնում,  ֆիզիկական  և  տրամաբանական մակարդակների միջև փոխկապվածության մյուս կարևոր բաղադրիչը մեծ տեսակարար էներգասպառմամբ  պայմանավորված ջերմային գրադիենտի մեծացումն է կիսահաղորդչային  բյուրեղի  վրա,  որի  դեմ  պայքարի միջոց  կարող  է  ծառայել կիսահաղորդչային  բյուրեղի  վրա  ջերմային  դաշտի  համահարթեցումը  տարրերի տեղաբաշխման  փուլում  [3,  25]:  Այս  խնդիրը  առավել  կարևորություն  է  ձեռք  բերում եռաչափ ԻՍ-երի նախագծման դեպքում, որոնք թույլ են տալիս իրագործել ավելի բարդ ֆունկցիոնալությամբ  համակարգեր՝  առանց  մեծացնելու  առանձին  բյուրեղների չափսերը  [25]:  Այս  դեպքում,  որպես  կիսահաղորդչային  բյուրեղի  վրա  տարրերի տեղաբաշխման  մեթոդ,  կարող  է  ծառայել  է  տեղաբաշխման  հաջորդական  ալգորիթմը՝ հզորությունները  հաշվի  առնելով:  Որպես  տեղաբաշխման  չափանիշ  կարող  է  հանդես գալ բյուրեղի ջերմային դաշտի տոպոլոգիական համահարթեցման չափանիշը [3, 25]` ,                                   (1.15) որտեղ և -  ն -րդ  և -րդ  տարրերի  հզորություններն  են; -  ն՝ -րդ  և -րդ տարրերի  դիրքերի  միջև  եղած  հեռավորությունը;  N  –  ը՝  տեղաբաշխվող  տարրերի քանակը։ ", "proc col_scramble_physical_to_logical { phys_IO phys_col } { global scramble_db - 50 - Մ/Ե բիթային գծերի դասավորության խճողումը Մ/Ե  T  և  B բիթային  գծերի  դասավորության  խճողում  նկարագրում  է  բիթային գծերի  բաշխումը  հիշողության  զանգվածի  և  Մուտքային/Ելքային    հանգույցների  միջև: ", "- 38 - Նախագծման ֆիզիկական և տրամաբանական մակարդակների փոխկապվածության  տեսանկյունից՝ (1.15)-ում կարևորվում է  տարրերի աշխատանքային  հզորությունների  գնահատման  խնդիրը:  Եթե  ընդունենք,  որ հզորությունների  գնահատման (1.4)  արտահայտությունում  հզորության  ստատիկ բաղադրիչը  գործնականում  կախված  չէ  տարրերի  փոխադարձ  դասավորությունից, ապա տարրերի տեղաբաշխման փուլում հզորությունների գնահատման համար կարելի է օգտագործել միայն դրանց դինամիկ բաղադրիչը:  Այս դեպքում, եթե աշխատանքային հզորությունների  գնահատման  (1.5)  արտահայտության  մեջ  առանձին  տարրերի տեսակարար դինամիկ հզորությունները և  թվային ստանդարտ  բջիջների գրադարանի աշխատանքային  հաճախությունը  հայտնի  են  դառնում  գրադարանի  ընտրության արդյունքում  և  կախված չեն  տրամաբանական  սխեմայից,  ապա  տարրերի փոխանջատումների  ակտիվությունները  անմիջականորեն  կախված  են  սխեմայի տրամաբանությունից:  Հետևաբար,  ֆիզիկական  նախագծման  դեպքում  կարևորվում  է այնպիսի  միջոցների  մշակումը,  որոնք  թույլ  կտան  ֆիզիկական  կառուցվածքների ստացման  ժամանակ  հաշվի  առնել  տրամաբանական  սխեմայում տարրերի ակտիվությունները:  Ասվածից  հետևում  է,  որ  որպես  դրա  իրագործման  արդյունավետ միջոց կարող է ծառայել տարրերի ջերմային տեղաբաշխումը: ", "Մ/Ե T և B բիթային գծերի դասավորության աղյուսակային ներկայացումը Աղյուսակ 1.8 Column0  Column1 Column(CM-1) <TB/BT> <TB/BT> <TB/BT> Այս  խճողման  աղյուսակային  ներկայացման  ձևը  երկկողմանի  չէ,  քանի  որ  բիթերի բաշխվածությունից  հնարավոր  չէ  միանշանակորեն  ստանալ  Մուտքային/Ելքային հանգույցների խճողումը: ", "Մ/Ե  T  և  B  բիթային  գծերի  խճողումը  իրականացվում  է  TCL  «io_bl_mirroring» պրոցեդուրայով:  Ստանալով  որպես  մուտքային  տվյալները  Մուտք/Ելք  հանգույցի  և համապատասխան  սյունի  ֆիզիկական  համարները՝  «io_bl_mirroring»  պրոցեդուրան վերադարձնում է T և B բիթային գծերի դասավորվածությունը: ", "proc io_bl_mirroring { phys_IO phys_col } { global scramble_db Սյուների ոլորապտույտների բաշխվածություն ՍՊԴՀՍ-ում  սյուների  ոլորապտույտների  կիրառման  դրդապատճառները  նույնն են,  ինչ  որ  բիթային  գծերի  ոլորապտույտների  օգտագործումը՝  հիշողության  սարքի աշխատանքի  հուսալիության  բարձրացումը  շնորհիվ  հիշողության  բիթային  գծերի վրայի  ունակության  նվազեցման  (Տես  նկ.  1.18):  Ի  տարբերություն  բիթային  գծերի ոլորապտումի, սյուների ոլորապտումը իրականցվում է ոչ միայն անմիջական հարևան սյուների  միջև,  այլև  սյուների  միջև,  որոնք  գտնվում  են  մի  միյանց  նկատմաբ    մի  քանի սյուն շեղվածությամբ:  Լինելով  ավելի  արդյունավետ,  քան բիթային  գծերի ոլորապտումը՝    սյուների  ոլորապտումի  իրականացումը  տոպոլոգիայում  շատ  ավելի բարդ է, և այդ պատճառով այն հազվադեպ է   օգտագործվում: ", "I/O i - 52 - Բջիջ 1 Բջիջ 2 WL WL Բջիջ 1 Բջիջ 2 Նկար 1.24.  Սյուների պարզ ոլորապտումը Նկար  1.24-ում  ներկայացված  է  սյուների  ոլորապտման  պարզ  օրինակը:  Նկարում պատկերված  ոլորապտումը կոչվում է պարզ, քանի որ այն կատարվում է անմիջական հարևան  սյուների  միջև  և  առանց  բիթային  գծերի  ոլորապտման:  Աղյուսակ  1.9-ում ներկայցված է սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը, Աղյուսակ 1.9 Սյուների ոլորապտման խճողման ներկայացման աղյուսակային ձևը Ոլորապտվող I/O i տողի հասցեն Column0  Column1  …  Column(CM-1) <Row1> <Row2> <Rowk> որտեղ <Row1> ցույց է տալիս այն տողը, որից վերև կատարվել է սյուների ոլորապտումը, իսկ  «Column»  դաշտում  նշվում  է՝  համապատասխան  սյան  համար՝  կ՞ա  ոլորապտում, թ՞ե ոչ, և եթե ընթացիկ սյան համար կա ոլորապտում, ապա նշվում է այն սյան համարը, որի  հետ  կատարվել  է  ոլորապտումը:  Հեշտության  համար,  սյուների  ոլորապտման զույգերը  կարող  են  նկարագրվել  բանաձևով:  Օրինակ՝  սյուների  ոլորապտման  հասցեն կարող է հաշվարկվել համաձայն բանաձևի՝ Cj,  Cj  , որտեղ  Cj ոլորապտըտվող սյան - 53 - համարն է, իսկ  ՝ շեղման հաստատուն գործակիցն է, այդ ժամանակ  Cj   ցույց կտա այն  սյան  հասցեն,  որի  հետ  կատարվել  է    ոլորապտումը:  Հասկանալի  է,  որ  սյուների ոլորապտումը  կարող  է  իրականացված  լինել  հիշողության  զանգվածի  մի  քանի  {1, տարբեր Մ/Ե հանգուցներում սյուների նկատմամբ նույնպես: ", "Սյուների  ոլորապտման  խճողման  TCL  պրոցեդուրան  «column_twist_scramble» պետք է վերադարձնի. ա) սյուների ոլորապտման տողի համարը և բ)  զույգ համարների զանգվածը,  որը  ցույց  կտա  Մ/Ե-ի  համարը,  ոլորապտըտված  սյուների  համարը  և համապատասխան  շեղումը:  Օրինակ՝  այն  կարող  է  իրենից  ներկայացնել  տվյալների այսպիսի մի զանգված՝ «column_twist_scramble» պրոցեդուրաի կաղապարը ունի հետևյալ տեսք՝ proc column_twist_scramble { } { global scramble_db Հիշողության գոտիների բաշխումը Հիշողության գոտիների մասին ինֆորմացիան կարևոր դեր է խաղում ներդրված ՍՊԴՀ-ի  հետ  աշխատող  կիրառական  ծրագրերում.  ա)  գոտիները,  բաժանելով  ՀՍ-ի մակերեսը  համասեռ  հատվածների,  հնարավորություն  են  տալիս  կիրառել  այդ հատվածի  համար  որոշակի  BP-ը՝  դրանով    էականորեն  պարզեցնել  հիշողության թեստավորման  ալգորիթմը,  նվազեցնելով  այդ  ալգորիթմի  իրականացման  համար անհրաժեշտ  ներդրված  սարքավորումների  քանակը,  բ)  առանց  հիշողության  նմուշի GDSII  ֆայլի  հաշվարկել  բջիջների  կոորդինատները  և  գ)  հաշվարկել  նմուշի հիշողության զանգվածի և տրամաբանական մասերի մակերեսները: ", "St (i) = Fst(Dk , Pn , Sm) ,   որտեղ (17) Dk  - գոտու ուղղվածությունը՝ հորիզոնական կամ ուղղահայաց, Pn – գոտու դիրքը հիշողության զանգվածում՝ տողի (սյունի) համարը, Sm  – գոտու չափսը (um)՝ երկարությունը (բարձրությունը) - 54 - Աղյուսակ  1.10-ում  ներկայացված  է հիշողության  գոտիների  բաշխման աղյուսակային ձևը: ", "Աղյուսակ 1.10 Նմուշի գոտիների բաշխումը Գոտու Ուղղվածությունը Դիրքը Չափսը (um) Անվանումը հորիզոնական/ տողը/ երկարությունը/ ուղղահայաց սյունը բարձրությունը Ինչպես  տեսնում  ենք,  գոտիները  նկարագրող  պարամետրերն  են՝ անվանումը, ուղղվածությունը,  դիրքը  և  չափսը:  Որպես  օրինակ  դիտենք  հիշողության  նմուշի պարտադիր  գոտիների՝  երկու  ուղղահայաց,  և  երկու  հորիզոնական  գոտիները նկարագրող աղյուսակը 1.11-ը: ", "ՀՆԹ՜Ց-ի  \"Wrapper\"  կոմպոնենտի  հզորության  սպառման կախվածությունը  հիշողության  բառի  բիթերի  քանակից -------- 1p11 ---------2p11 ---------2p22 Հիշողության  բառի  բիթերի  քանակը Նկար  11 Հիշողության ՀՆԹՑ-ի  \"Wrapper\" կոմպոնենտի հզորության սպառման կախվածությունը հիշողության բառի բիթերի քանակից արագ կոմպիլյատորների  նախագծման  բնութագրերի  գնահատման  համար:  Հեղինակը  նշում է,  որ  ք^\"1\"Լ  կոմպիլյատորների  մուտքային  պարամետրերի  և նախագծման  բնութագրերի պարզելու համար լուծումներ դեպքում կառուցվածքն պարզ  է Աշխատանք [33]-ում  ձևակերպվել  է  Բ\"Ո_  կոմպիլյատորների  նախագծման բնութագրերի  գնահատման  խնդիրը'  մուտքային  պարամետրերի  և  պարամետրերի հնարավոր  արժեքների  տեսանկյունից:  Ենթադրենք  6-ն  Բ\"Ո_  կոմպիլյատորն  է,  Բ-ն կոմպիլյատորի  մուտքային  պարամետրերի  բազմությունն  է,  Ը-ն'  պարամետրերի հնարավոր  արժեքների  տիրույթների  բազմությունն  է: ", "- 55 - proc strap_location { } { global scramble_db Այսպիսով,  կոմպիլյատորի  մոդելը  նկարագրող  բանաձևը  ընդգրկում  է  բոլոր խճողումների նկարագրությունը և գոտիների բաշխումը՝ Mcomp = { Scr1, Scr2,…, Scr n, St1,St2,…,Stm} , որտեղ (18) Scr n –հիշողության կոմպիլյատորի խճողումների տարրերն են, St m - հիշողության կոմպիլյատորի գոտիների բաշխումներն են: ", "Ինչպես  արդեն  նշել  ենք,  ՍՊԴՀՍ-ի  հետազոտված  կառուցվածքային  մոդելի խճողումների քանակը տասնվեցն են: ԱՀ–ում կիրառական ծրագրերի կողմից՝ ընտրովի ձևով,      ՀՍ-ի  կառուցվածքային  խճողումների  TCL  պրոցեդուրաների  օգտագործումը էականորեն  հեշտացնում է  կառուցվածքային  մոդելի  կիրառումը:  ՍՊԴՀՍ-ի կառուցվածքային  մոդելի  առաջին  վեց  խճողումների  համապատասխան TCL պրոցեդուրաները,  նրանց  մուտքային  և  ելքային  պարամետրերը  նկարագրված  են աղյուսակ 1.12-ում: ", "Կառուցվածքային խճողումները նկարագրող TCL պրոցեդուրաների նկարագրությունը Աղյուսակ 1.12 Կառուցվածքային Պրոցեդուրայի Մուտքային Ելքային մոդելի միավորը անունը պարամետրերը պարամետրերը հասցեի հասցեի բջիջների ծածկագրումը address_scramble նկարագրությունը բանկերի տրամաբանական ֆիզիկական ապակոդավորման bank_scramble բանկի հասցեն բանկի հասցեն ապակոդավորման row_scramble տողի հասցեն տողի հասցեն տրամաբանական Ֆիզիկական ֆունկցիան տողերի ֆունկցիան - 56 - Կառուցվածքային խճողումները նկարագրող պրոցեդուրաների նկարագրությունը Աղյուսակ 1.12 (շարունակություն) սյուների տրամաբանական ֆիզիկական ապակոդավորման column_scramble սյան հասցեն սյան հասցեն Մ/Ե հանգույցների տրամաբանական ֆիզիկական խճողումը io_cell_scramble Մ/Ե-ի համարը Մ/Ե-ի համարը տիպերի port_scramble մուտքի անուն նկարագրությունը ոլորապտման bl_twist_scramble Բիթային գծի Բիթային գծի համարը տեսակը (TB, BT) գծերի խճողումը io_bl_mirroring մուտքի (R/W/RW) «0» տողում բիթային գծերի բաշխումը ֆունկցիան մուտքերի խճողումը Բիթային գծերի խճողումը Մ/Ե բիթային Աշխատանքի  ընթացքում  հետազոտվել  են  տարբեր  տեխնոլոգիաների  և տեսակների  (800-ից  ավելի)  հիշողության    կոմպիլյատորների  կառուցվածքները,  և ստացված  տվյալների  հիման  վրա  գեներացվել  են  այդ  կոմպիլյատորների կառուցվածքային  մոդելները: ", "Ստացված  մոդելները  օգտագործվել  են  ԱՀ–ի կիրառական ծրագրերում մի քանի տասնյակ պատվիրատուների մոտ: ", "Կատարվել են փորձեր, որոնց ընթացքում հիշողության նմուշները թեստավորվել են  տարբեր  թեստավորման  BP-ների  (so,  cd,  rs,  cs,  dcb,  drs,  dcs)  միջոցով  (Տես՝  աղ.  1.2), կիրառելով fast-x և fast-y հասցեավորումները: ", "Եզրակացություն։  «Amazon»  և  «Google»  ընկերությունների  կողմից  առաջարկվող ծանուցման ամպային ծառայությունները նախատեսված չեն էլեկտրոնային նամակների մասին  ծանուցումների  իրականացման  համար։  Դրանք  պարզապես  ծանուցման հարթակներ  են,  որոնք  կարող  են  կիրառվել  այլ  ծրագրային  համակարգերում։  Amazon SNS-ը կարող է կիրառվել էլեկտրոնային նամակների մասին ծանուցման համակարգում որպես  GSM  ցանցին  միացման  միջոց։  Էլեկտրոնային  նամակների  մասին  ծանուցման համակարգի  ֆունկցիոնալությունը  ներառված  չէ  ո՛չ  «Amazon»-ի  և  ո՛չ  էլ    «Google»-ի կողմից առաջարկված ծառայություններում։ ", "ջերմային տեղաբաշխումը: ", "Հետազոտվել  են  հիշողության  սարքերի խճողումների  առաջացման պատճառները և դրանց ազդեցությունը հիշողության սարքերի թեստավորման վրա: ", "հնարավորություն։  Էլեկտրոնային  փոստի  օգտատերերը  կարող  են  ուղարկել  SMS հաղորդագրություններ իրենց փոստարկղից։ ", "- 59 - ՄՈԴԵԼԻ ՍՏՈՒԳՄԱՆ ԵՎ ՆՄՈՒՇԻ  ՄՈԴԵԼԸ GDSII ՁԵՎԱՉԱՓԻՑ ԴՈՒՐՍԲԵՐՄԱՆ ԱՎՏՈՄԱՏԱՑՎԱԾ ՀԱՄԱԿԱՐԳԵՐԸ ավտոմատացված համակարգ Հիշողության կոմպիլյատորի կառուցվածքային խճողումների TCL պրոցեդուրաները  նկարագրվում  և  պահվում  են  կոմպիլյատորի  համար  անբաժանելի մաս կազմող scramble.tcl ֆայլում՝ մոդելում: scramble.tcl ֆայլը ստեղծվում է հիշողության կոմիպիլյատորը  նախագծող  ճարտարագետի  կողմից,  քանի  որ՝  նախագծման  փուլում, միայն նախագծի ճարտարագետն է հանդիսանում կոմպիլյատորի խճողումների մասին ինֆորմացիայի  միակ  ստույգ  աղբյուրը:  ՆՀՍ-երի  ՂԱՀ-ում  կառուցվածքային  մոդելի գեներացման գործընթացը ներկայացվել է նկ. 1.22-ում: ", "կարիք ունեն զարգացման։ ", "- 60 - Հետազոտությունների  արդյունքում  հայտնաբերվել,  մշակվել  և  իրականացվել  է հիշողության  կոմպիլյատորի      կառուցվածքային  մոդելը  ստուգող  ավտոմատացված ծրագրային համակարգ [12],  որը  անվանվում  է  Հիշողության  խճողումների SIV scramble.tcl ֆայլը Նմուշի GDSII   ֆայլը Ստանալ հիշողության խճողումների տարրերը scramble.tcl ֆայլից Դուրս բերել հիշողության խճողումների ինֆորմացիան  GDSII ֆայլից Փոխել Ոչ Մոդելավորել: ", "ավտոմատացված ֆիզիկական նախագծման փուլում սխեմատեխնիկական առանձնահատկությունները հաշվի առնելու հիմնական միջոց կարող է ծառայել տարրերի տեղաբաշխման խնդրի լուծման այնպիսի  միջոցների  մշակումը,  որոնց  դեպքում  հաշվի  կառնվեն    սխեմայի ֆունկցիավորման վրա ազդող առավել կարևոր պարամետրերը: ", "Հիշողության  կառուցվածքային  մոդելի  ստուգման  հիմնական  գաղափարը ներկայացված  է  նկար  2.1-ում:    Նմուշի  GDSII  ձևաչափը  պարունակում  է  նմուշի խճողումների մասին  իրական  տեղեկությունները և այդ  պատճառով  scramble.tcl ֆայլի իսկությունը  ստուգվում  է՝  համեմատելով  նմուշի  GDSII      ֆայլից  դուրս  բերված համապատասխան  խճողման  ինֆորմացիայի  հետ:  Քանի  որ  scramble.tcl  ֆայլը պարունակում  է  խճողումների  ինֆորմացիա  հիշողության  կոմպիլյատորի  ողջ տիրույթում, ապա հասկանալի է, որ նկար 2.1-ում ներկայացված քայլերը անհրաժեշտ է կատարել հնարավորինս շատ քանակով նմուշների համար և ինչքան այդ ստուգումների քանակը շատ լինի, ապա այնքան մեծ կլինի scramble.tcl ֆայլի ճշտությունը: Իրականում GDSII      ֆայլից  խճողումների  մասին  ինֆորմացիայի  դուրս  բերման  գործընթացը բավական  ժամանակատար  է  և  պահանջում  է  էական  հաշվողական  ռեսուսներ: ", "- 61 - Ժամանակը  և  ռեսուսները  սահմանափակող  հանգամանք  և  արգելք    են  հանդիսանում ստուգման  համար  անհրաժեշտ նմուշների  կոնֆիգուրացիաների  բազմությունը գեներացնող  գործիքի  համար:  Ստուգող  նմուշների  քանակի  լավարկումը  կարևոր  և բարդ խնդիրներից է,  որը հաջողությամբ լուծվում է SIV ԱՀ-ի միջավայրում: ", "SIV  ԱՀ-ի  աշխատանքի  ընթացքում  առաջացած  խնդիրների լուծումները ապահովելու  նպատակով  մշակվել  է  հիշողության  GDSII  ֆայլի  ձևափոխման  (այսպես կոչված ծրագրավորման) մեթոդը և ստեղծվել են այս մեթոդը իրականացնող լրացուցիչ ծրագրային գործիքներ: ", "Scramble.tcl VIG Memory compiler check.rtb file Set of SDV configuration files Set of ASV configuration files Նկար 2.2. SIV ԱՀ-ի VIG գործիքով SDV և ASV նմուշների ստուգող կոնֆիգուրացիաների գեներացումը Դիտարկենք  GDSII  ֆայլի  ծրագրավորման  մեթոդի  ընդհանուր  գաղափարը,  SIV ԱՀ-ի ծրագրային գործիքների հակիրճ նկարագրությունները՝ նպատակը [17]: ", "  Verification  Instance  Generator  (VIG)  գործիքը  (Տես՝  նկ.  2.2)  որպես  մուտք ընդունում  է  կառուցվածքային  մոդելի  նկարագրության  scramble.tcl  ֆայլը  և հիշողության  կոմպիլյատորի  պարամետրերի  գործող  տիրույթը  նկարագրող check.rtb  ֆայլը:    VIG  –ի  գործիքը    գեներացնում  է  անհրաժեշտ  թվով  հիշողու- թյունների նմուշների ստուգող կոնֆիգուրացիաների ֆայլերը (իրենց բնութագրիչ պարամետրերով), որոնց նվազագույն  քանակը  և  ֆայլերում  տրված կոնֆիգուրացիաները կբավարարեն  տվյալ  հիշողության  կոմպիլյատորի կառուցվածքային  խճողումների տարրերի լիարժեք  ստուգման  համար: ", "Նվազագույն  տերմինը  վերաբերում  է  ինչպես  հիշողության  նմուշների  քանակին, այնպես  էլ  նրանց  չափսերին,  ինչը  շատ  կարևոր  է  SIV  հոսքի  աշխատանքի տևողության (ժամանակի) նվազեցման գործընթացում [17]: ", "  Verification  Pattern  Generator (VPG)  գործիքը  որպես  մուտք  ընդունում  է scramble.tcl ֆայլը և հիշողության նմուշի բնութագրիչ պարամետրերը: VPG -ին իր - 62 - աշխատանքի  արդյունքում  գեներացնում  է  նվազագույն  թվով  ստուգող հավաքածուներ (PAT,  SVP),  որոնց  առկայությունը  բավարար  է  տվյալ հիշողության  նմուշի  և  նրա  մոդելի  համապատասխանությունը  ստուգելու համար:  Գեներացվող  հավաքածուների  թիվը  կախված  է  ստուգող  նմուշների կառուցվածքային  խճողումների  տեսակներից,  ինչպես  նաև  հիշողության  նմուշի բնութագրիչ պարամետրերից՝ ֆիզիկական չափսերից [17]: ", "  Vector  Output  Generator  (VOG)  գործիքը  որպես  մուտք  ընդունում  է  scramble.tcl ֆայլը  և  ստուգող  նմուշների  հավաքածուն,  որոնց  հիման  վրա  գեներացնում  է հիշողության  տրամաբանական  հասցեներին  համապատասխանող  մոդելավոր- ման  արդյունքում  սպասվող  արժեքները:  Հետագայում  այս  արժեքները  համե- մատվում են «ծրագրավորված» հիշողության նմուշի SPICE ֆայլի մոդելավորման միջոցով ստացված՝ ընթերցված, արժեքների հետ [17]: ", "Memory  Compiler  (MC)  գործիքը  որպես  մուտք  ընդունում  է  հիշողության  նմուշի բնութագրիչ  պարամետրերը  և  գեներացնում  է  համապատասխան  հիշողության նմուշի GDSII ձևաչափով ֆայլը` օգտագործելով հիշողության կոմպիլյատորը: Այս գործիքը  նախագծվում  է  հիշողության  կոմպիլյատոր  նախագծող  ընկերություն- ների (Synopsys, Mentor Graphics, ARM և այլն)  կողմից: "], "source_docs_file": "Control, Automation and Electrical Engineering.json"}